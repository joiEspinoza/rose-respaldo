# https://hub.docker.com/r/nvidia/cuda
# https://github.com/NVIDIA/nvidia-docker
FROM nvidia/cuda:10.2-base
LABEL maintainer="Elias Henriquez <elias.ricardo20.eh@gmail.com>"

ENV RUN_PATH=/backend/env/Scripts/social_aid
ENV OPEN_CV_VERSION=4.2.0

#Updating
RUN apt-get update -y

#Installing python3.7 and pip3
RUN apt-get install -y \
    python3.7 \
    python3-pip \
    unixodbc-dev \
    python3.7-dev \
    build-essential \
    libssl-dev \
    libffi-dev \
    libxml2-dev \
    libxslt1-dev \
    zlib1g-dev \
    libsm6 \
    libxext6 \
    libxrender-dev \
    cmake \
    unzip \
    pkg-config \
    libjpeg-dev \
    libpng-dev \
    libtiff-dev \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libv4l-dev \
    libxvidcore-dev \
    libx264-dev \
    libgtk-3-dev \
    libatlas-base-dev \
    gfortran \
    wget \
    && ln -s /usr/bin/python3.7 /usr/local/bin/python 

#OpenCV
RUN cd ~ \
    && wget -O opencv.zip https://github.com/opencv/opencv/archive/${OPEN_CV_VERSION}.zip \
    && wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/${OPEN_CV_VERSION}.zip \
    && unzip opencv.zip \
    && unzip opencv_contrib.zip \
    && mv opencv-${OPEN_CV_VERSION} opencv \
    && mv opencv_contrib-${OPEN_CV_VERSION} opencv_contrib \
    && rm -f opencv.zip \
    && rm -f opencv_contrib.zip

#Building opencv
RUN cd ~/opencv \
    && mkdir build \
    && cd build \
    && cmake -D CMAKE_BUILD_TYPE=RELEASE \
	-D CMAKE_INSTALL_PREFIX=/usr/local \
	-D INSTALL_PYTHON_EXAMPLES=ON \
	-D INSTALL_C_EXAMPLES=OFF \
	-D OPENCV_ENABLE_NONFREE=ON \
	# -D WITH_CUDA=ON \
	# -D WITH_CUDNN=ON \
	# -D OPENCV_DNN_CUDA=ON \
	# -D ENABLE_FAST_MATH=1 \
	# -D CUDA_FAST_MATH=1 \
	# -D CUDA_ARCH_BIN=3.7 \
	# -D WITH_CUBLAS=1 \
	-D OPENCV_EXTRA_MODULES_PATH=~/opencv_contrib/modules \
	-D HAVE_opencv_python3=ON \
	-D PYTHON_EXECUTABLE=/usr/bin/python3.7 \
	-D BUILD_EXAMPLES=ON .. \
    # && make -j6 \
    && make \
    && make install \
    && ldconfig

ADD https://pjreddie.com/media/files/yolov3.weights /opt/

