[{"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\index.js":"1","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\App.js":"2","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\serviceWorker.js":"3","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\estilo\\Estilo.js":"4","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\store\\index.js":"5","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\CambiadorPublico.js":"6","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Cambiador.js":"7","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\DataProcesos.js":"8","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\estilo\\Paleta.js":"9","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\estilo\\Tipografia.js":"10","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\estilo\\TipografiaResponsiva.js":"11","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\estilo\\Breakpoints.js":"12","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Vistas.js":"13","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\auth\\RegisterView.js":"14","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\auth\\LoginView.js":"15","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\rose\\Microsoft.js":"16","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\account\\index.js":"17","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\EditProcess.js":"18","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\AddProcess.js":"19","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Error.js":"20","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\HelpTutorials.js":"21","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Help.js":"22","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\ViewProcess.js":"23","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Process.js":"24","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\ViewProcessCalendar.js":"25","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Historic.js":"26","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\ViewProcessMail.js":"27","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Login.js":"28","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Page.js":"29","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\rose\\Google.js":"30","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\rose\\Msal.js":"31","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\WelcomePage.js":"32","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\account\\Profile.js":"33","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\NA.js":"34","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\AddProcess.js":"35","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\downloads\\DescargaExcel.js":"36","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\welcome\\Bienvenida.js":"37","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\contenedor\\index.js":"38","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\contenedor\\TopBar.js":"39","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\contenedor\\NavBar\\index.js":"40","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\contenedor\\NavBar\\NavItem.js":"41","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\welcome\\KPIWelcome.js":"42","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Boton.js":"43","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\KPI.js":"44","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\table\\Historico.js":"45","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\table\\Procesos.js":"46","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\process\\KPIs.js":"47","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\welcome\\KPIContainer.js":"48","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\process\\Mail.js":"49","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\process\\Calendar.js":"50","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Editor.js":"51","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Boton2.js":"52","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\table\\Elementos.js":"53","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\process\\KPIContainer.js":"54","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Dialogo.js":"55","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\account\\Detalles.js":"56"},{"size":875,"mtime":1610464440477,"results":"57","hashOfConfig":"58"},{"size":7354,"mtime":1611098723759,"results":"59","hashOfConfig":"58"},{"size":4636,"mtime":1610464440581,"results":"60","hashOfConfig":"58"},{"size":3880,"mtime":1611085937602,"results":"61","hashOfConfig":"58"},{"size":3279,"mtime":1611105635182,"results":"62","hashOfConfig":"58"},{"size":413,"mtime":1610464439271,"results":"63","hashOfConfig":"58"},{"size":1422,"mtime":1611097870955,"results":"64","hashOfConfig":"58"},{"size":39735,"mtime":1610464439338,"results":"65","hashOfConfig":"58"},{"size":491,"mtime":1611086540078,"results":"66","hashOfConfig":"58"},{"size":577,"mtime":1611085461949,"results":"67","hashOfConfig":"58"},{"size":1707,"mtime":1610464440336,"results":"68","hashOfConfig":"58"},{"size":127,"mtime":1610464440240,"results":"69","hashOfConfig":"58"},{"size":640,"mtime":1610464440848,"results":"70","hashOfConfig":"58"},{"size":7049,"mtime":1610464439000,"results":"71","hashOfConfig":"58"},{"size":5961,"mtime":1611084114913,"results":"72","hashOfConfig":"58"},{"size":2021,"mtime":1610464440534,"results":"73","hashOfConfig":"58"},{"size":1513,"mtime":1611102520633,"results":"74","hashOfConfig":"58"},{"size":18019,"mtime":1610464440654,"results":"75","hashOfConfig":"58"},{"size":299,"mtime":1610464440625,"results":"76","hashOfConfig":"58"},{"size":142,"mtime":1610464440668,"results":"77","hashOfConfig":"58"},{"size":227,"mtime":1610464440694,"results":"78","hashOfConfig":"58"},{"size":10574,"mtime":1610465640211,"results":"79","hashOfConfig":"58"},{"size":11574,"mtime":1611107875816,"results":"80","hashOfConfig":"58"},{"size":4556,"mtime":1611103443734,"results":"81","hashOfConfig":"58"},{"size":184,"mtime":1610464440841,"results":"82","hashOfConfig":"58"},{"size":5235,"mtime":1611085658958,"results":"83","hashOfConfig":"58"},{"size":172,"mtime":1610464440844,"results":"84","hashOfConfig":"58"},{"size":3334,"mtime":1610464440755,"results":"85","hashOfConfig":"58"},{"size":385,"mtime":1610464439505,"results":"86","hashOfConfig":"58"},{"size":2099,"mtime":1611107639090,"results":"87","hashOfConfig":"58"},{"size":3691,"mtime":1610464440577,"results":"88","hashOfConfig":"58"},{"size":1102,"mtime":1610464440852,"results":"89","hashOfConfig":"58"},{"size":1477,"mtime":1611099259093,"results":"90","hashOfConfig":"58"},{"size":7692,"mtime":1610464439443,"results":"91","hashOfConfig":"58"},{"size":21568,"mtime":1610464439145,"results":"92","hashOfConfig":"58"},{"size":2265,"mtime":1610464439693,"results":"93","hashOfConfig":"58"},{"size":1197,"mtime":1610464439953,"results":"94","hashOfConfig":"58"},{"size":1552,"mtime":1610464440234,"results":"95","hashOfConfig":"58"},{"size":1731,"mtime":1610464440190,"results":"96","hashOfConfig":"58"},{"size":3113,"mtime":1611098496880,"results":"97","hashOfConfig":"58"},{"size":3015,"mtime":1610464440150,"results":"98","hashOfConfig":"58"},{"size":1022,"mtime":1611086096674,"results":"99","hashOfConfig":"58"},{"size":902,"mtime":1610464439151,"results":"100","hashOfConfig":"58"},{"size":3794,"mtime":1611088159619,"results":"101","hashOfConfig":"58"},{"size":4609,"mtime":1610464439885,"results":"102","hashOfConfig":"58"},{"size":7306,"mtime":1611103558960,"results":"103","hashOfConfig":"58"},{"size":1007,"mtime":1611090890593,"results":"104","hashOfConfig":"58"},{"size":514,"mtime":1610464439958,"results":"105","hashOfConfig":"58"},{"size":6063,"mtime":1610464439835,"results":"106","hashOfConfig":"58"},{"size":6823,"mtime":1610464439783,"results":"107","hashOfConfig":"58"},{"size":633,"mtime":1610465450860,"results":"108","hashOfConfig":"58"},{"size":754,"mtime":1610464439163,"results":"109","hashOfConfig":"58"},{"size":3415,"mtime":1611104731266,"results":"110","hashOfConfig":"58"},{"size":1578,"mtime":1611091699418,"results":"111","hashOfConfig":"58"},{"size":451,"mtime":1610464439358,"results":"112","hashOfConfig":"58"},{"size":2863,"mtime":1611105248798,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"1hg1f27",{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"116"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"116"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"116"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"116"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"116"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"116"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"116"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"116"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"116"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"116"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"116"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"116"},"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\index.js",[],["245","246"],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\App.js",["247"],"import React, { useEffect } from 'react';\r\nimport Cambiador from './componentes/Cambiador';\r\nimport CambiadorPublico from './componentes/CambiadorPublico';\r\nimport { connect } from 'react-redux';\r\n//import obtenerEstadoUsuarioTest from './funciones/login/obtenerEstadoUsuarioTest';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport axios from 'axios';\r\nimport data from './componentes/DataProcesos';\r\nimport './App.css';\r\nimport '../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { initializeIcons } from '@uifabric/icons';\r\ninitializeIcons();\r\n\r\n\r\nconst App = (props) => {\r\n  //let history = useHistory();\r\n  useEffect(()=>{\r\n    console.log(\"useEffect App 1\");\r\n    //obtenerEstadoUsuarioTest(props);\r\n    if(props.usuario!==null){\r\n      requestsProcesos(props.usuario,props.cargarProcesos).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n      requestBienvenida(props.usuario.correo,props.cargarBienvenida).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n      requestConfiguracion(props.usuario.correo,props.cargarConfiguracion).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n      requestTutoriales(props.cargarTutoriales).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n      requestEventos(props.usuario.correo,props.usuario.token,props.cargarEventos).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n      requestHistorico(props.usuario.correo,props.cargarHistorico).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n    }\r\n    \r\n  },[props.usuario]);\r\n  return (\r\n    <>\r\n      \r\n      <CssBaseline />\r\n      \r\n      <Casos usuario={props.usuario} privado={props.usuario !== null} actualizarUser={props.actualizarUser} />\r\n      \r\n      \r\n\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nconst Casos = (props) => {\r\n  const privado = [<Cambiador usuario={props.usuario} actualizarUser={props.actualizarUser}/>];\r\n  const publico = [<CambiadorPublico usuario={props.usuario} actualizarUser={props.actualizarUser}/>];\r\n  return (\r\n    <>\r\n      {props.privado && privado}\r\n      {!props.privado && publico}\r\n    </>\r\n  );\r\n}\r\n\r\nconst actualizarUsuario = (usuario) => {\r\n  return {\r\n    type: 'ACTUALIZAR_USUARIO',\r\n    usuario: usuario,\r\n  }\r\n}\r\n\r\nconst cargarEventos = (newState) => {\r\n  return {\r\n      type: 'CARGAR_EVENTOS',\r\n      newState: newState,\r\n    }  \r\n}\r\nconst cargarProcesos = (newState) => {\r\n  return {\r\n      type: 'CARGAR_PROCESOS',\r\n      newState: newState,\r\n    }  \r\n}\r\nconst cargarBienvenida = (newState) => {\r\n  return {\r\n      type: 'CARGAR_BIENVENIDA',\r\n      newState: newState,\r\n    }  \r\n}\r\nconst cargarConfiguracion = (newState) => {\r\n  return {\r\n      type: 'CARGAR_CONFIGURACION',\r\n      newState: newState,\r\n    }  \r\n}\r\nconst cargarHistorico = (newState) => {\r\n  return {\r\n      type: 'CARGAR_HISTORICO',\r\n      newState: newState,\r\n    }  \r\n}\r\nconst cargarTutoriales = (newState) => {\r\n  return {\r\n      type: 'CARGAR_TUTORIALES',\r\n      newState: newState,\r\n    }  \r\n}\r\n\r\nconst requestsProcesos = (usuario, cargarProcesos) => {\r\n    return new Promise((resolve, reject)=>{\r\n      var state = data;\r\n      axios.get(`http://127.0.0.1:8000/selection/list/${usuario.correo}/`)\r\n      .then(response=>{\r\n        console.log(response);\r\n        state = response.data.data;\r\n        state = state.map((i, index)=>{\r\n          var salida = i;\r\n          requestsCandidatosProceso(i.id).then(res=>{\r\n            salida = Object.assign(i,{candidatos:res});\r\n          }).catch(er=>console.log(er));\r\n          return salida;\r\n        });\r\n        cargarProcesos(state);\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(error);\r\n        reject(false);\r\n      });\r\n    });\r\n}\r\n\r\nconst requestsCandidatosProceso = (idProceso) => {\r\n    return new Promise((resolve, reject)=>{\r\n      var candidatos;\r\n      axios.get(`http://127.0.0.1:8000/selection/${idProceso}/candidates/`)\r\n      .then(response=>{\r\n        console.log(response);\r\n        candidatos = response.data.data;\r\n        resolve(candidatos);\r\n      })\r\n      .catch(error=>{\r\n        console.log(error);\r\n        reject(error);\r\n      });\r\n    });\r\n}\r\n\r\nconst requestHistorico = (correo, cargar) => {\r\n    return new Promise((resolve, reject)=>{\r\n      axios.get(`http://127.0.0.1:8000/selection​/${correo}​/candidates​/`).then(response=>{\r\n        console.log(response);\r\n        cargar(response.data);\r\n\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(false);\r\n        reject(\"No se pudo cargar historico\");\r\n      });\r\n    });\r\n}\r\n\r\nconst requestEventos = (correo, token, cargar) => {\r\n    return new Promise((resolve, reject)=>{\r\n      axios.get(`http://127.0.0.1:8000/selection/events/${encodeURIComponent(correo)}/${encodeURIComponent(token)}`).then(response=>{\r\n        console.log(response);\r\n        cargar(response.data);\r\n\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(false);\r\n        reject(\"No se pudo cargar eventos\");\r\n      });\r\n    });\r\n}\r\n\r\nconst requestBienvenida = (correo, cargar) => {\r\n    return new Promise((resolve, reject)=>{\r\n      axios.get(`http://127.0.0.1:8000/selection/home/${correo}/`).then(response=>{\r\n        console.log(response);\r\n        cargar(response.data);\r\n\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(false);\r\n        reject(\"bienvenida\");\r\n      });\r\n    });\r\n}\r\n\r\nconst requestConfiguracion = (correo, cargar) => {\r\n    return new Promise((resolve, reject)=>{\r\n      axios.get(`http://127.0.0.1:8000/selection/config/${correo}/`).then(response=>{\r\n        console.log(response);\r\n        cargar(response.data);\r\n\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(false);\r\n        reject(\"config\");\r\n      });\r\n    });\r\n}\r\n\r\nconst requestTutoriales = (cargar) => {\r\n    return new Promise((resolve, reject)=>{\r\n      axios.get(`http://127.0.0.1:8000/selection/tutorials/`).then(response=>{\r\n        console.log(response);\r\n        cargar(response.data);\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(false);\r\n        reject(error);\r\n      });\r\n    });\r\n}\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n    procesos: estado.procesos,\r\n    estilo: estado.estilo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        actualizarUser: (usuario) => despachar(actualizarUsuario(usuario)),\r\n        cargarProcesos: (newState) => despachar(cargarProcesos(newState)),\r\n        cargarBienvenida: (newState) => despachar(cargarBienvenida(newState)),\r\n        cargarConfiguracion: (newState) => despachar(cargarConfiguracion(newState)),\r\n        cargarTutoriales: (newState) => despachar(cargarTutoriales(newState)),\r\n        cargarEventos: (newState) => despachar(cargarEventos(newState)),\r\n        cargarHistorico: (newState) => despachar(cargarHistorico(newState)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\serviceWorker.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\estilo\\Estilo.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\store\\index.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\CambiadorPublico.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Cambiador.js",["248","249"],"import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { AddProcess, EditProcess, Error, Help,\r\n HelpTutorials, Historic, Login, Process, ViewProcess,\r\n  ViewProcessCalendar, ViewProcessMail, WelcomePage } from '../vistas/Vistas';\r\n\r\n\r\nimport LoginView from '../auth/LoginView';\r\nimport MicroSoft from '../rose/Microsoft';\r\n\r\nimport AccountView from './account';\r\n\r\n\r\nconst Cambiador = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={\"/Perfil\"} component={AccountView}/>\r\n\r\n      <Route exact path={\"/AddProcess\"} component={AddProcess}/>\r\n      <Route exact path={\"/EditProcess\"} component={EditProcess}/>\r\n      <Route exact path={\"/Error\"} component={Error}/>\r\n      <Route exact path={\"/Ayuda\"} component={Help}/>\r\n      <Route exact path={\"/HelpTutorials\"} component={HelpTutorials}/>\r\n      <Route exact path={\"/Historic\"} component={Historic}/>\r\n      <Route exact path={\"/Logi\"} component={Login}/>\r\n      <Route exact path={\"/Process\"} component={Process}/>\r\n      <Route exact path={\"/ViewProcess\"} component={ViewProcess}/>\r\n      <Route exact path={\"/ViewProcessCalendar\"} component={ViewProcessCalendar}/>\r\n      <Route exact path={\"/ViewProcessMail\"} component={ViewProcessMail}/>\r\n      <Route exact path={\"/\"} component={WelcomePage}/>\r\n      <Route exact path={\"/WelcomePage\"} component={WelcomePage}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n\r\nexport default Cambiador;","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\DataProcesos.js",["250"],"\r\nexport default [\r\n  {\r\n    id: 1,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"catamuñoz@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"fermaldonado@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },{\r\n    id: 10,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 11,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n];\r\n","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\estilo\\Paleta.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\estilo\\Tipografia.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\estilo\\TipografiaResponsiva.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\estilo\\Breakpoints.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Vistas.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\auth\\RegisterView.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\auth\\LoginView.js",["251"],"import React from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport MicroSoft from '../rose/Microsoft';\r\nimport Google from '../rose/Google';\r\nimport { connect } from 'react-redux';\r\nimport rosee from '../images/rose_title.png';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    backgroundColor: \"white\",\r\n    padding: theme.spacing(5),\r\n    borderRadius: theme.spacing(7),\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      borderRadius: theme.spacing(5),\r\n    },\r\n  },\r\n  container: {\r\n    backgroundColor: theme.palette.grisclaro,\r\n    height: window.innerHeight,\r\n  },\r\n}));\r\n\r\n\r\nconst LoginView = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  return (\r\n    \r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n      className={classes.container}\r\n    >\r\n      <Container maxWidth=\"sm\" className={classes.form} >\r\n        <Formik\r\n          initialValues={{\r\n            email: '',\r\n            password: ''\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            email: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\r\n            password: Yup.string().max(255).required('La contraseña es requerida')\r\n          })}\r\n          onSubmit={(values, actions) => {\r\n            console.log({\"email\":values.email,\"password\":values.password});\r\n            axios.post(\"http://127.0.0.1:8000/auth/login/\",\r\n              {\"email\":values.email,\"password\":values.password}\r\n            ).then(r=>{\r\n              console.log(r);\r\n              props.actualizarUser({\r\n                nombre:r.data.username,\r\n                correo: r.data.email,\r\n                response: r,\r\n              });\r\n              history.push('/WelcomePage');\r\n            }).catch(r=>{console.log(r);history.push('/');});\r\n            \r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            touched,\r\n            values\r\n          }) => (\r\n            <form onSubmit={handleSubmit} >\r\n              <Box mb={3}>\r\n                <img src={rosee} alt=\"rose\" width=\"100%\"/>\r\n              </Box>\r\n              <TextField\r\n                error={Boolean(touched.email && errors.email)}\r\n                fullWidth\r\n                helperText={touched.email && errors.email}\r\n                label=\"Correo\"\r\n                margin=\"normal\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.password && errors.password)}\r\n                fullWidth\r\n                helperText={touched.password && errors.password}\r\n                label=\"Contraseña\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                value={values.password}\r\n                variant=\"outlined\"\r\n              />\r\n              <Box my={2}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Ingresar\r\n                </Button>\r\n              </Box>\r\n              <Box\r\n                mt={3}\r\n                mb={1}\r\n              >\r\n                <Typography\r\n                  align=\"center\"\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  o ingresa con\r\n                </Typography>\r\n              </Box>\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={2}\r\n                  md={4}\r\n                ></Grid>\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  md={2}\r\n                >\r\n                  <MicroSoft actualizarUser={props.actualizarUser}/>\r\n                </Grid>\r\n                \r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  md={2}\r\n                >\r\n                  <Google actualizarUser={props.actualizarUser}/>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={2}\r\n                  md={4}\r\n                ></Grid>\r\n              </Grid>\r\n              \r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst EnlaceRegistro = (props) => {\r\n  return(\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      variant=\"body1\"\r\n    >\r\n      ¿No tienes cuenta?\r\n      {' '}\r\n      <Link\r\n        component={RouterLink}\r\n        to=\"/registro\"\r\n        variant=\"h6\"\r\n      >\r\n        Registrate\r\n      </Link>\r\n    </Typography>\r\n  );\r\n}\r\nconst actualizarUsuario = (usuario) => {\r\n  return {\r\n    type: 'ACTUALIZAR_USUARIO',\r\n    usuario: usuario,\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        actualizarUser: (usuario) => despachar(actualizarUsuario(usuario)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);\r\n\r\n","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\rose\\Microsoft.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\account\\index.js",["252"],"import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../Page';\r\nimport Profile from './Profile';\r\nimport Detalles from './Detalles';\r\nimport Contenedor from '../../contenedor';\r\nimport { connect } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(7)\r\n  }\r\n}));\r\n\r\nconst Perfil = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      \r\n      title=\"Account\"\r\n    >\r\n      <Contenedor>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n          className={classes.root}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile usuario={props.usuario} />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Detalles usuario={props.usuario} configuracion={props.configuracion}/>\r\n          </Grid>\r\n        </Grid>\r\n      </Contenedor>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n    configuracion: estado.configuracion,\r\n  }\r\n}\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        dispatch: (i) => despachar(i),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Perfil);","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\EditProcess.js",["253","254","255","256","257","258"],"import React, { useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\nimport {\r\n  Box,\r\n  FormControlLabel,\r\n  Switch,\r\n  Badge,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../componentes/Page';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport Contenedor from '../contenedor';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst AddProcess = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [requirements_exp, setRequirements_exp] = useState(props.proceso[\"requirements\"][\"exp\"]);\r\n  const [requirements_idioms, setRequirements_idioms] = useState(props.proceso[\"requirements\"][\"idioms\"]);\r\n  const [requirements_skills, setRequirements_skills] = useState(props.proceso[\"requirements\"][\"skills\"]);\r\n  const [requirements_location, setRequirements_location] = useState(props.proceso[\"requirements\"][\"location\"]);\r\n  const [desired_exp, setDesired_exp] = useState(props.proceso[\"desired\"][\"exp\"]);\r\n  const [desired_skills, setDesired_skills] = useState(props.proceso[\"desired\"][\"skills\"]);\r\n  const [desired_college, setDesired_college] = useState(props.proceso[\"desired\"][\"college\"]);\r\n  const [desired_designation, setDesired_designation] = useState(props.proceso[\"desired\"][\"designation\"]);\r\n  const [desired_degree, setDesired_degree] = useState(props.proceso[\"desired\"][\"degree\"]);\r\n  return (\r\n    <Contenedor >\r\n      <Page\r\n        className={classes.root}\r\n        title=\"Add Process\"\r\n      >\r\n        <Box\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n          height=\"100%\"\r\n          justifyContent=\"center\"\r\n        >\r\n          <Container maxWidth=\"md\">\r\n            <Formik\r\n              initialValues={{\r\n                name: props.proceso[\"name\"],\r\n                description: props.proceso[\"description\"],\r\n                vacant: props.proceso[\"vacant\"],\r\n                \r\n                area: props.proceso[\"area\"],\r\n                subarea: props.proceso[\"subarea\"],\r\n                industry: props.proceso[\"industry\"],\r\n                is_remote: props.proceso[\"is_remote\"],\r\n                requirements_exp: props.proceso[\"requirements\"][\"exp\"],\r\n                desired_exp: props.proceso[\"desired\"][\"exp\"],\r\n                \r\n                \r\n                \r\n                \r\n              }}\r\n              validationSchema={\r\n                Yup.object().shape({\r\n                  name: Yup.string().max(255).required('Nombre es requerido'),\r\n                })\r\n              }\r\n              onSubmit={(values, actions) => {\r\n                \r\n                var payload = {\r\n                  \"name\": values.name,\r\n                  \"vacant\": values.vacant,\r\n                  \"description\": values.description,\r\n                  \"area\": values.area,\r\n                  \"subarea\": values.subarea,\r\n                  \"industry\": values.industry,\r\n                  \"is_remote\": values.is_remote,\r\n                  \"status\": props.proceso[\"status\"],\r\n                  \"requirements\":{\r\n                    \"exp\": values.requirements_exp,\r\n                    \"idioms\": requirements_idioms,\r\n                    \"skills\": requirements_skills,\r\n                    \"location\": requirements_location,\r\n                  },\r\n                  \"desired\":{\r\n                    \"exp\": values.desired_exp,\r\n                    \"skills\": desired_skills,\r\n                    \"college\": desired_college,\r\n                    \"designation\": desired_designation,\r\n                    \"degree\": desired_degree,\r\n                  },\r\n                  \"kpis\": props.proceso[\"kpis\"],\r\n                  \"storage_url\": props.proceso[\"storage_url\"],\r\n                  \"user\": props.proceso[\"user\"],\r\n                };\r\n                \r\n                console.log(payload);\r\n                axios.patch(`http://127.0.0.1:8000/selection/${props.proceso[\"id\"]}/`,payload).then(r=>{\r\n                  console.log(r);\r\n                  history.push('/');\r\n                }).catch(r=>{\r\n                  console.log(r);\r\n                });\r\n                console.log(props.proceso);\r\n                \r\n                \r\n              }}\r\n            >\r\n              {({\r\n                errors,\r\n                handleBlur,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n                touched,\r\n                values\r\n              }) => (\r\n                <form onSubmit={handleSubmit}>\r\n                  <Box mb={3}>\r\n                    <Typography\r\n                      color=\"textPrimary\"\r\n                      variant=\"h2\"\r\n                    >\r\n                      Editar Proceso\r\n                    </Typography>\r\n                    <Typography\r\n                      color=\"textSecondary\"\r\n                      gutterBottom\r\n                      variant=\"body2\"\r\n                    >\r\n                      Llena los campos\r\n                    </Typography>\r\n                  </Box>\r\n                  <Grid container direction=\"row\" spacing={3}>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        error={Boolean(touched.name && errors.name)}\r\n                        fullWidth\r\n                        helperText={touched.name && errors.name}\r\n                        label=\"Nombre Proceso\"\r\n                        margin=\"normal\"\r\n                        name=\"name\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.name}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <TextField\r\n                        error={Boolean(touched.vacant && errors.vacant)}\r\n                        fullWidth\r\n                        helperText={touched.vacant && errors.vacant}\r\n                        label=\"Vacantes\"\r\n                        type=\"number\"\r\n                        margin=\"normal\"\r\n                        name=\"vacant\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.vacant}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <TextField\r\n                        error={Boolean(touched.description && errors.description)}\r\n                        fullWidth\r\n                        helperText={touched.description && errors.description}\r\n                        label=\"Descripción del proceso\"\r\n                        margin=\"normal\"\r\n                        name=\"description\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.description}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid container direction=\"row\" spacing={3}>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        error={Boolean(touched.area && errors.area)}\r\n                        fullWidth\r\n                        helperText={touched.area && errors.area}\r\n                        label=\"Área\"\r\n                        margin=\"normal\"\r\n                        name=\"area\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.area}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        error={Boolean(touched.subarea && errors.subarea)}\r\n                        fullWidth\r\n                        helperText={touched.subarea && errors.subarea}\r\n                        label=\"Subárea\"\r\n                        margin=\"normal\"\r\n                        name=\"subarea\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.subarea}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <TextField\r\n                        error={Boolean(touched.industry && errors.industry)}\r\n                        fullWidth\r\n                        helperText={touched.industry && errors.industry}\r\n                        label=\"Industria\"\r\n                        margin=\"normal\"\r\n                        name=\"industry\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        value={values.industry}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid xs={2}>\r\n                      <FormControlLabel\r\n                        control={<Switch checked={values.is_remote} onChange={handleChange} name=\"is_remote\" />}\r\n                        label=\"¿Es remoto?\"\r\n                        labelPlacement=\"top\"\r\n                      />\r\n\r\n                    </Grid>\r\n                  </Grid>\r\n                  <br/>\r\n                  <Grid container direction=\"row\" spacing={4}>\r\n                    <Grid item xs={4}>\r\n                      <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                          <Typography variant=\"h5\">Requisitos Mínimos</Typography>\r\n                        </Grid>\r\n                        \r\n                        <Grid item>\r\n                          <TextField\r\n                            error={Boolean(touched.requirements_exp && errors.requirements_exp)}\r\n                            fullWidth\r\n                            helperText={touched.requirements_exp && errors.requirements_exp}\r\n                            label=\"Experiencia mínima\"\r\n                            type=\"number\"\r\n                            margin=\"normal\"\r\n                            name=\"requirements_exp\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.requirements_exp}\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <ArrayInput data={requirements_idioms} set={setRequirements_idioms} label={\"Idiomas\"}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <ArrayInput data={requirements_skills} set={setRequirements_skills} label={\"Skills\"}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <ArrayInput data={requirements_location} set={setRequirements_location} label={\"Lugar\"}/>\r\n                        </Grid>\r\n                                              \r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Grid container direction=\"column\" spacing={3}>\r\n                        <Grid item>\r\n                          <Typography variant=\"h5\">Requisitos Deseables</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <TextField\r\n                            error={Boolean(touched.desired_exp && errors.desired_exp)}\r\n                            fullWidth\r\n                            helperText={touched.desired_exp && errors.desired_exp}\r\n                            label=\"Experiencia deseada\"\r\n                            type=\"number\"\r\n                            margin=\"normal\"\r\n                            name=\"desired_exp\"\r\n                            onBlur={handleBlur}\r\n                            onChange={handleChange}\r\n                            value={values.desired_exp}\r\n                            variant=\"outlined\"\r\n                          />\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <ArrayInput data={desired_skills} set={setDesired_skills} label={\"Skills\"}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <ArrayInput data={desired_designation} set={setDesired_designation} label={\"Cargos\"}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <ArrayInput data={desired_college} set={setDesired_college} label={\"Universidades\"}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          <ArrayInput data={desired_degree} set={setDesired_degree} label={\"Títulos\"}/>\r\n                        </Grid>\r\n                        \r\n                        \r\n                        \r\n                       \r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={4}>\r\n                      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3} >\r\n                        <Grid item>\r\n                          <Box my={2}>\r\n                            <Button\r\n                              color=\"primary\"\r\n                              disabled={false}\r\n                              style={{ \"min-height\": \"100px\" }}\r\n                              fullWidth\r\n                              size=\"large\"\r\n                              type=\"submit\"\r\n                              \r\n                              variant=\"contained\"\r\n                            >\r\n                              ¡Traeme a los mejores!\r\n                            </Button>\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  \r\n                  \r\n                  \r\n                  \r\n                  \r\n                  \r\n                  \r\n                  \r\n                  \r\n                  \r\n                </form>\r\n              )}\r\n            </Formik>\r\n          </Container>\r\n        </Box>\r\n      </Page>\r\n    </Contenedor>\r\n  );\r\n};\r\n\r\nconst ArrayInputNumber = ({ data, set, label }) => {\r\n  const [valor, setValor] = useState(1);\r\n  const definir = () => {\r\n    set([...data, Number(valor)]);\r\n    setValor(1);\r\n  }\r\n  const actualizar = (i) => {\r\n    setValor(data[i]);\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const eliminar = (i) => {\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const inputtext = (e) => {\r\n    e.preventDefault();\r\n    setValor(e.target.value);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Grid container direction=\"row\" spacing={0}>\r\n          <Grid item xs={10}>\r\n            <TextField variant=\"outlined\" label={label} type=\"number\" fullWidth value={valor} onChange={inputtext}/>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={definir}>\r\n              <Icono nombre={'CircleAdditionSolid'} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          {data.map((i,index)=>(\r\n            <Grid item>\r\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\r\n              </Badge>\r\n            </Grid>\r\n          ))}\r\n          \r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    \r\n  );\r\n}\r\n\r\nconst ArrayInput = ({ data, set, label }) => {\r\n  const [valor, setValor] = useState(\"\");\r\n  const definir = () => {\r\n    set([...data, valor.toLowerCase()]);\r\n    setValor(\"\");\r\n    console.log(data);\r\n  }\r\n  const actualizar = (i) => {\r\n    setValor(data[i]);\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const eliminar = (i) => {\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const inputtext = (e) => {\r\n    e.preventDefault();\r\n    setValor(e.target.value);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Grid container direction=\"row\" spacing={0}>\r\n          <Grid item xs={10}>\r\n            <TextField variant=\"outlined\" label={label} type=\"text\" fullWidth value={valor} onChange={inputtext}/>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={definir}>\r\n              <Icono nombre={'CircleAdditionSolid'} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {data.length !== 0 && <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          {data.map((i,index)=>(\r\n            <Grid item>\r\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\r\n              </Badge>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>} \r\n      \r\n        \r\n      \r\n    </Grid>\r\n    \r\n  );\r\n}\r\n\r\nconst Icono = ({ nombre }) => {\r\n  return(\r\n    <Icon style={{\r\n      transform: 'scale(1.5)' \r\n    }} iconName={nombre}  />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    proceso: estado.procesos.filter(i=>i.id===estado.proceso)[0]\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProcess);","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\AddProcess.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Error.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\HelpTutorials.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Help.js",["259","260"],"import React, { useState } from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport Boton from '../componentes/Boton2';\r\nimport Editor from '../componentes/Editor';\r\nimport { EditorState } from 'draft-js';\r\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { \r\n  Card,\r\n  Button,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography\r\n  } from '@material-ui/core';\r\nimport Youtube from 'react-youtube';\r\nimport { connect } from 'react-redux';\r\nimport { NAHelp } from '../componentes/NA';\r\n\r\nconst Help = (props) => {\r\n  const [tutorial, setTutorial] = useState(true);\r\n  const irTutoriales = () => {\r\n  \tsetTutorial(true);\r\n  \tconsole.log(tutorial);\r\n  }\r\n  const irIssues = () => {\r\n  \tsetTutorial(false);\r\n  \tconsole.log(tutorial);\r\n  }\r\n  return (\r\n    <Contenedor>\r\n    \t<Grid container>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t\t<Grid container spacing={2}>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Ver Tutoriales\"} desactivado={props.tutoriales === null} href={\"#\"} clickear={irTutoriales} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Crear Incidencia\"} href={\"#\"} clickear={irIssues} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t</Grid>\r\n    \t\t</Grid>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t\t{tutorial ? \r\n            <>{props.tutoriales === null ?\r\n              <NAHelp mensaje=\"Tutoriales no disponibles\"/>\r\n            :\r\n              <Tutoriales tutoriales={props.tutoriales}/> \r\n            }</>\r\n          : <Issue />}\r\n    \t\t</Grid>\r\n    \t</Grid>\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    color: theme.palette.grisoscuro,\r\n  },\r\n  nombre: {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  descripcion: {\r\n    paddingTop: theme.spacing(4),\r\n\r\n  },\r\n}));\r\n\r\nconst Tutoriales = ({ className, tutoriales }) => {\r\n  const classes = useStyles();\r\n  const youtube_options = {\r\n    height: '360',\r\n    width: '600',\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const data = tutoriales.data;\r\n  console.log(\"Tuto\",data);\r\n  const getVideoId = (string) =>{\r\n    const separador = 'https://www.youtube.com/watch?v=';\r\n    return string.split(separador)[1];\r\n  };\r\n  const _onReady = (event) => {\r\n    // access to player in all event handlers via event.target\r\n    event.target.pauseVideo();\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={12}>\r\n        <Card\r\n          className={classes.card}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              align=\"center\"\r\n              gutterBottom\r\n              variant=\"h1\"\r\n            >\r\n              {\"Tutoriales\"}\r\n            </Typography>\r\n          </CardContent>\r\n          {tutoriales !== null ? \r\n            <>\r\n            {data.map((i,index)=>(\r\n              <CardContent>\r\n                <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Youtube\r\n                      videoId={getVideoId(i.value)}\r\n                      opts={youtube_options}\r\n                      onReady={_onReady}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container>\r\n                      <Grid item xs={12}>\r\n                        <Typography\r\n                          align=\"center\"\r\n                          color=\"textPrimary\"\r\n                          variant=\"h5\"\r\n                          className={classes.nombre}\r\n                        >\r\n                          {i.name}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Typography\r\n                          align=\"center\"\r\n                          color=\"textPrimary\"\r\n                          variant=\"body1\"\r\n                          className={classes.descripcion}\r\n                        >\r\n                          {i.description}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={2}></Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            ))}</>\r\n          :\r\n            <>\"Tutoriales aún no cargados\"</>\r\n          }\r\n          <CardContent>\r\n            <Grid container>\r\n              <Grid item xs={6}>\r\n                <Youtube\r\n                  videoId={\"I-1oJnmr6nk\"}\r\n                  opts={youtube_options}\r\n                  onReady={_onReady}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <Typography\r\n                      align=\"center\"\r\n                      color=\"textPrimary\"\r\n                      variant=\"h5\"\r\n                      className={classes.nombre}\r\n                    >\r\n                      {\"Un tema\"}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography\r\n                      align=\"center\"\r\n                      color=\"textPrimary\"\r\n                      variant=\"body1\"\r\n                      className={classes.descripcion}\r\n                    >\r\n                      {\"Para distraerse\"}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}></Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst Issue = (props) => {\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  return (\r\n  \t<Grid container className={classes.root} spacing={3}>\r\n  \t\t<Grid item xs={1}></Grid>\r\n      <Grid item xs={10}>\r\n        <Card className={classes.card}>\r\n          <Formik\r\n            initialValues={{\r\n              titulo: '',\r\n              email: '',\r\n              modulo: '',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              titulo: Yup.string().max(255).required('Debe definir un titulo para el problema'),\r\n              email: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\r\n              modulo: Yup.string().max(255).required('Debe definir el módulo del error')\r\n            })}\r\n            onSubmit={(values, actions) => {\r\n              const data = {\r\n                \"name\":values.titulo,\r\n                \"user\":values.email,\r\n                \"module\":values.modulo,\r\n                \"code\":\"1\",\r\n                \"summary\":html\r\n              };\r\n              console.log(data);\r\n              axios.post(`http://127.0.0.1:8000/selection/issues/create/`,data).then(r=>{\r\n                console.log(r);\r\n              }).catch(r=>{\r\n                console.log(r);\r\n              });         \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit} >\r\n                <CardContent>\r\n            \t\t\t<Grid container spacing={3}>\r\n            \t\t\t\t<Grid item xs={6}>\r\n                      <TextField\r\n                        error={Boolean(touched.titulo && errors.titulo)}\r\n                        fullWidth\r\n                        helperText={touched.titulo && errors.titulo}\r\n                        label=\"Título del problema\"\r\n                        margin=\"normal\"\r\n                        name=\"titulo\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.titulo}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        error={Boolean(touched.email && errors.email)}\r\n                        fullWidth\r\n                        helperText={touched.email && errors.email}\r\n                        label=\"Email de contacto\"\r\n                        margin=\"normal\"\r\n                        name=\"email\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"email\"\r\n                        value={values.email}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        error={Boolean(touched.modulo && errors.modulo)}\r\n                        fullWidth\r\n                        helperText={touched.modulo && errors.modulo}\r\n                        label=\"Módulo del problema\"\r\n                        margin=\"normal\"\r\n                        name=\"modulo\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.modulo}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n            \t\t\t</Grid>\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Editor editorState={editorState} setEditorState={setEditorState}/>\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Button variant=\"contained\" type=\"submit\" color=\"primary\">\r\n                    {\"Crear incidencia\"}\r\n                  </Button>\r\n                </CardContent>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Card>\r\n  \t\t</Grid>\r\n      <Grid item xs={1}></Grid>\r\n  \t\t\r\n        \r\n  \t</Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    tutoriales: estado.tutoriales,\r\n  }\r\n}\r\nconst mapDispatchToProps = despachar => {\r\n    return {}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Help);","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\ViewProcess.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Process.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\ViewProcessCalendar.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Historic.js",["261","262"],"import React, { useState } from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport { KPI3 as KPI } from '../componentes/KPI';\r\nimport Boton from '../componentes/Boton';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport { Grid } from '@material-ui/core';\r\nimport { DescargaExcelHistorico } from '../componentes/downloads/DescargaExcel';\r\nimport Tabla from '../componentes/table/Historico';\r\nimport { NAHistoric } from '../componentes/NA';\r\nimport { TablaEstilo } from '../estilo/Estilo';\r\n\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\nimport { DataGrid } from '@material-ui/data-grid';\r\n\r\nconst historicData = [\r\n  {\r\n    id: 1,\r\n    ciudad: \"Stgo, Chile\",\r\n    email: \"bgonzalez@myfuture.ai\",\r\n    nombre: \"Benjamín González\",\r\n    profesion: \"Ing. Civil Industrial mención TI\",\r\n    universidad: \"Universidad Adolfo Ibáñez\",\r\n  },\r\n  {\r\n    id: 2,\r\n    ciudad: \"Viña del mar, Chile\",\r\n    email: \"catamuñoz@myfuture.ai\",\r\n    nombre: \"Catalina Muñoz\",\r\n    profesion: \"Ing. Civil Industrial mención TI\",\r\n    universidad: \"Universidad Adolfo Ibáñez\",\r\n  },\r\n  {\r\n    id: 3,\r\n    ciudad: \"Stgo, Chile\",\r\n    email: \"fermaldonado@myfuture.ai\",\r\n    nombre: \"Fernanda Maldonado\",\r\n    profesion: \"Ing. Civil Industrial mención TI\",\r\n    universidad: \"Universidad Adolfo Ibáñez\",\r\n  },\r\n];\r\nconst Historic = (props) => {\r\n  const columnas = {\r\n    \"nombre\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:false},\r\n    \"profesion\":{titulo:\"Profesion\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"universidad\":{titulo:\"Universidad\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"email\":{titulo:\"Email\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    \"ciudad\":{titulo:\"Ciudad\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n  };\r\n  return (\r\n    <>\r\n      {historicData===null ? \r\n        <Contenedor>\r\n          <NAHistoric mensaje={\"Sin registros, no disponible\"} columnas={columnas}>\r\n            <Boton nombre={\"Exportar Excel\"} desactivado={true} href={\"#\"} icon={\"ExcelDocument\"}/>\r\n          </NAHistoric>\r\n        </Contenedor>\r\n      :\r\n        <Contenido />\r\n      }\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst Contenido = (props) => {\r\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\r\n  const columnas = {\r\n    \"nombre\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:false},\r\n    \"profesion\":{titulo:\"Profesion\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"universidad\":{titulo:\"Universidad\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"email\":{titulo:\"Email\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    \"ciudad\":{titulo:\"Ciudad\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n  };\r\n  var cont = document.getElementById(\"contenedor\");\r\n  const icono = <Icon style={{\r\n      transform: 'scale(3)',\r\n      color:\"white\", // Tune it\r\n    }} iconName={\"PlannerLogo\"}  />;\r\n  console.log(cont);\r\n  const colu = [\r\n    { field: 'nombre', headerName: 'Nombre', flex: 1 },\r\n    { field: 'profesion', headerName: 'Profesion', flex: 1 },\r\n    { field: 'universidad', headerName: 'Universidad', flex: 1 },\r\n    { field: 'email', headerName: 'Email', flex: 1 },\r\n    { field: 'ciudad', headerName: 'Ciudad', flex: 1 },\r\n  ];\r\n  const columns = colu.map(i=>Object.assign({},i));\r\n  const columnasExcel = Object.keys(columnas).map(col => ({label:columnas[col].titulo,value:col}));\r\n  const candidatosSeleccionados = idSeleccionados.length === 0 ? [] : historicData.filter((i,index)=>idSeleccionados.includes(index)).map(i=>({nombre:i.nombre,profesion:i.profesion,universidad:i.universidad,email:i.email,ciudad:i.ciudad}));\r\n  \r\n  const onSelectionChange = (e) => {\r\n    definirIdSeleccionados(e.rowIds.map(i=>Number(i)-1));\r\n  }\r\n\r\n  return (\r\n    <Contenedor>\r\n    <div id=\"contenedor\">\r\n      <Grid\r\n          container\r\n          spacing={3}\r\n          \r\n        >\r\n          <Grid\r\n            item\r\n            \r\n            xs={5}\r\n            md={4}\r\n            sm={4}\r\n            lg={3}\r\n          >\r\n          \t<KPI nombre={\"Cantidad de candidatos total\"} cantidad={historicData.length} icon={icono}/>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            \r\n            xs={2}\r\n            md={4}\r\n            sm={4}\r\n            lg={6}\r\n          ></Grid>\r\n          <Grid\r\n            item\r\n            xs={5}\r\n            md={4}\r\n            sm={4}\r\n            lg={3}\r\n          >\r\n            <DescargaExcelHistorico\r\n                boton={<Boton nombre={\"Exportar Excel\"} href={\"#\"} color={\"secondary\"} desactivado={idSeleccionados.length === 0} icon={\"ExcelDocument\"}/>}\r\n                columnas={columnasExcel}\r\n                data={candidatosSeleccionados}\r\n\r\n              />\r\n            \r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            style={{height:\"300px\"}}\r\n          >\r\n            <TablaEstilo>\r\n            \r\n              <DataGrid onSelectionChange={onSelectionChange}\r\n              columns={columns} pageSize={5} autoHeight rows={historicData} checkboxSelection />\r\n            </TablaEstilo>\r\n          </Grid>\r\n          \r\n          \r\n        </Grid>\r\n      </div>\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nexport default Historic;","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\ViewProcessMail.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\Login.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Page.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\rose\\Google.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\rose\\Msal.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\vistas\\WelcomePage.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\account\\Profile.js",["263"],"import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ usuario, className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {usuario.nombre}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {usuario.correo}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Actualizar imagen\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\NA.js",["264","265","266","267"],"import React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  \r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    color: theme.palette.grisoscuro,\r\n  },\r\n  root: {\r\n    height: '100%',\r\n    borderRadius: theme.spacing(4),\r\n    backgroundColor: theme.palette.secondary.light,\r\n\r\n  },\r\n  icono: {\r\n    paddingTop: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst NAHistoric = ({mensaje,columnas,children}) => {\r\n  return (\r\n      <NATarjeta extendida={false} mensaje={mensaje} sizes={{mensaje:\"h6\"}}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={5} md={4} sm={4} lg={3}>\r\n            <NAKPI2 />\r\n          </Grid>\r\n          <Grid item xs={2} md={4} sm={4} lg={6}></Grid>\r\n          <Grid item xs={5} md={4} sm={4} lg={3}>\r\n            {children}\r\n          </Grid>\r\n        </Grid>\r\n        <NATabla  columnas={columnas} />\r\n      </NATarjeta>\r\n  );\r\n}\r\nconst NAHelp = ({mensaje}) => {\r\n  return (\r\n      <NATarjeta mensaje={mensaje}>\r\n        <Typography variant=\"h1\">\r\n          <Skeleton />\r\n        </Typography>\r\n      </NATarjeta>\r\n  );\r\n}\r\n\r\nconst NAKPI = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={8}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n              style={{ color: \"white\"}}\r\n            >\r\n              <Skeleton/>\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h1\"\r\n              style={{ color: \"white\"}}\r\n            >\r\n              <Skeleton/>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4} >\r\n            <Skeleton animation=\"wave\" height=\"100%\"/>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst NAKPI2 = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={8}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"body2\"\r\n              style={{ color: \"white\"}}\r\n            >\r\n              <Skeleton/>\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={4} >\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n              style={{ color: \"white\"}}\r\n            >\r\n              <Skeleton/>\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst NADefaultChildrenKPI = (props) => {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      <Grid item xs={12} sm={4}>\r\n        <NAKPI />\r\n      </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        <NAKPI />\r\n      </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        <NAKPI />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n\r\nconst NATarjeta = ({ className, children=<NADefaultChildrenKPI/>, sizes = {mensaje:\"h2\",esqueleto1:\"h1\",esqueleto2:\"h5\"}, mensaje = \"No disponible actualmente\", extendida=true }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container >\r\n      <Grid item xs={12}>\r\n        <Card\r\n          className={classes.card}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              align=\"center\"\r\n              gutterBottom\r\n              variant={sizes.mensaje}\r\n            >\r\n              {mensaje}\r\n            </Typography>\r\n          </CardContent>\r\n          {extendida ?\r\n            <>            \r\n              <CardContent>\r\n                {children}\r\n              </CardContent>\r\n              <CardContent>\r\n                <Typography\r\n                  align=\"center\"\r\n                  color=\"textPrimary\"\r\n                  variant={sizes.esqueleto1}\r\n                >\r\n                  <Skeleton/>\r\n                </Typography>\r\n              </CardContent>\r\n            </>\r\n          :\r\n            <CardContent>\r\n              {children}\r\n            </CardContent>\r\n          }\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst NATabla = ({ className, columnas }) => {\r\n  \r\n  const [limite, definirLimite] = useState(1);\r\n  const [pagina, definirPagina] = useState(0);\r\n\r\n  const theme = useTheme();\r\n  const cambiarLimite = (evento) => {\r\n    definirLimite(evento.target.value);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n    >\r\n      \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                \r\n                {Object.keys(columnas).map(nombreColumna=>(\r\n                  <TableCell>\r\n                    {columnas[nombreColumna].titulo}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              <TableRow\r\n              >\r\n                {Object.keys(columnas).map(nombreColumna=>(\r\n                  <TableCell>\r\n                    {typeof columnas[nombreColumna].href === 'undefined' ?\r\n                      <>{nombreColumna === \"status\" ?\r\n                        \r\n                          <Typography\r\n                            fontWeight= {400}\r\n                            variant={columnas[nombreColumna].tamano}\r\n                            style={{ color:\"white\", backgroundColor: theme.palette.primary.main }}\r\n\r\n                          >\r\n                            <Box fontWeight=\"fontWeightBold\">\r\n                              <Skeleton />\r\n                            </Box>\r\n                          </Typography>\r\n                      :\r\n                        <>{nombreColumna === \"created_at\"?\r\n                          <Typography\r\n                            color={columnas[nombreColumna].color}\r\n                            variant={columnas[nombreColumna].tamano}\r\n                          >\r\n                            <Skeleton />\r\n                          </Typography>\r\n                        :\r\n                          <Typography\r\n                            color={columnas[nombreColumna].color}\r\n                            variant={columnas[nombreColumna].tamano}\r\n                          >\r\n                            <Skeleton />\r\n                          </Typography>\r\n                        }</>\r\n                      }</>\r\n                      \r\n                    :\r\n                      <Typography\r\n                        color={columnas[nombreColumna].color}\r\n                        variant={columnas[nombreColumna].tamano}\r\n                        style={{ textDecoration: 'none' }}\r\n                        \r\n                      >\r\n                        {nombreColumna!== 'edit' ? \r\n                          <Skeleton animation=\"wave\"/>\r\n                        :\r\n                          <Icon iconName={\"EditNote\"}  />\r\n                        }\r\n                      </Typography>\r\n                    }\r\n                  </TableCell>  \r\n                ))}                  \r\n              </TableRow>\r\n            </TableBody>\r\n          </Table>      \r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport { NATarjeta, NATabla, NAHelp, NAHistoric };","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\AddProcess.js",["268","269","270","271","272","273","274","275"],"import React, { useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\nimport {\r\n  Box,\r\n  FormControlLabel,\r\n  Switch,\r\n  Badge,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from './Page';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { uploadFile } from 'react-s3';\r\nimport AWS from 'aws-sdk';\r\nimport ReactS3Uploader from 'react-s3-uploader';\r\n\r\n\r\n{/*\r\nvar bucketName = 'rosev0';\r\nvar bucketRegion = 'us-east-2';\r\nvar IdentityPoolId = 'us-east-2:38d700f2-c99b-4c9e-9686-6ce21337d610';\r\n\r\nAWS.config.region = bucketRegion; // Region\r\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({IdentityPoolId: IdentityPoolId,});\r\n\r\n\r\nconst s3 = new AWS.S3({\r\n  apiVersion: '2006-03-01',\r\n  params: {Bucket: bucketName}\r\n});*/}\r\n//encodeURIComponent()\r\n\r\nAWS.config.update({\r\n  region : 'us-east-2',\r\n  accessKeyId: 'AKIA5XKDKZ4KRSBLKVGI',\r\n  secretAccessKey: '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',\r\n});\r\n\r\n\r\nconsole.log(\"AWS\",AWS);\r\nconst s3 = new AWS.S3({\r\n accessKeyId: 'AKIAI4IYUCNFNIWHMB4Q',\r\n secretAccessKey: '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',\r\n Bucket: 'rosev0'\r\n});\r\n\r\nconst uploadFile1 = (file,ruta) => {\r\n\r\ns3.upload({\r\n        Key: ruta,\r\n        Bucket: 'rosev0',\r\n        Body: file,\r\n        ACL: 'public-read'\r\n        }, function(err, data) {\r\n        if(err) {\r\n        console.log('error s3',err,data);\r\n        }\r\n        alert('Successfully Uploaded!');\r\n        }).on('httpUploadProgress', function (progress) {\r\n        var uploaded = parseInt((progress.loaded * 100) / progress.total);\r\n        console.log(uploaded);\r\n      });\r\n}\r\n\r\nconst uploadFile22 = (file,ruta) => {\r\n  \r\n  \r\n  var upload = new AWS.S3.ManagedUpload({\r\n    params: {\r\n      Bucket: 'rosev0',\r\n      Key: ruta,\r\n      Body: file,\r\n      ACL: \"public-read\"\r\n    }\r\n  });\r\n\r\n  var promise = upload.promise();\r\n\r\n  promise.then(\r\n    function(data) {\r\n      alert(\"Successfully uploaded photo.\");\r\n    },\r\n    function(err) {\r\n      return alert(\"There was an error uploading your photo: \", err.message);\r\n    }\r\n  );\r\n  \r\n}\r\n\r\nconst uploadFile12 = (file,ruta) => {\r\n  var params = {\r\n    Bucket: 'rosev0',\r\n    Key: ruta,\r\n    Expires: 60,\r\n    ContentType: file.type,\r\n    ACL: \"public-read\"\r\n  };\r\n  s3.getSignedUrl('putObject', params, function(err, signedUrl){\r\n     if (err) {\r\n          console.log(\"error papi\",err);\r\n          return err;\r\n      } else {\r\n          console.log(\"Exito papi\",signedUrl);\r\n\r\n          var instance = axios.create();\r\n          var confi = {\r\n            headers: {\r\n              'Content-Type': file.type,\r\n              'Access-Control-Allow-Origin': 'https://localhost:3000',\r\n            }\r\n          }\r\n\r\n          instance.put(signedUrl, file, confi)\r\n              .then(function (result) {\r\n                  console.log(result);\r\n              })\r\n              .catch(function (err) {\r\n                  console.log(err);\r\n              });\r\n          return signedUrl;\r\n      }\r\n  });\r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\nconst config = (string) => {\r\n  return {\r\n    bucketName: 'rosev0',\r\n    dirName: string, /* optional */\r\n    region: 'us-east-2',\r\n    accessKeyId: 'AKIA5XKDKZ4KRSBLKVGI',\r\n    secretAccessKey: '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',\r\n  }\r\n}\r\n\r\n\r\n\r\nconst fecha = () => {\r\n  let fecha = new Date();\r\n  let dia = fecha.getDate();\r\n  let mes = fecha.getMonth() + 1;\r\n  let ano = fecha.getFullYear();\r\n  if(mes < 10){\r\n    return `${dia}-0${mes}-${ano}`;\r\n  }else{\r\n    return `${dia}-${mes}-${ano}`;\r\n  }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst AddProcess = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const fileInput = useRef();\r\n  const handleFile = evento => {\r\n    evento.preventDefault();\r\n    console.log(fileInput.current.files[0]);\r\n  }\r\n\r\n  const onUpload = (e) =>{\r\n    console.log(e);\r\n  }\r\n\r\n  const [requirements_idioms, setRequirements_idioms] = useState([]);\r\n  const [requirements_skills, setRequirements_skills] = useState([]);\r\n  const [requirements_location, setRequirements_location] = useState([]);\r\n  const [desired_skills, setDesired_skills] = useState([]);\r\n  const [desired_college, setDesired_college] = useState([]);\r\n  const [desired_designation, setDesired_designation] = useState([]);\r\n  const [desired_degree, setDesired_degree] = useState([]);\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Add Process\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"lg\">\r\n          <Formik\r\n            initialValues={{\r\n              name: \"Vamos\",\r\n              description: \"Proceso para desarrollador\",\r\n              vacant: 1,\r\n              \r\n              area: \"Industrial\",\r\n              subarea: \"TI\",\r\n              industry: \"TI\",\r\n              is_remote: false,\r\n              requirements_exp: 1,\r\n              desired_exp: 1,\r\n              file: null,\r\n              \r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                name: Yup.string().max(255).required('Nombre es requerido'),\r\n              })\r\n            }\r\n            onSubmit={(values, actions) => {\r\n              var date = fecha();\r\n              var email_cambiado = props.usuario.correo.replace(\"@\",\"_\");\r\n              var name_cambiado = values.name.replaceAll(\" \",\"_\");\r\n              const cvs = fileInput.current.files[0];\r\n              var ruta = `${email_cambiado}/${date}*${name_cambiado}*input/`;\r\n              var payload = {\r\n                \"name\": values.name,\r\n                \"vacant\": values.vacant,\r\n                \"description\": values.description,\r\n                \"area\": values.area,\r\n                \"subarea\": values.subarea,\r\n                \"industry\": values.industry,\r\n                \"is_remote\": values.is_remote,\r\n                \"status\": \"In progress\",\r\n                \"requirements\":{\r\n                  \"exp\": values.requirements_exp,\r\n                  \"idioms\": requirements_idioms,\r\n                  \"skills\": requirements_skills,\r\n                  \"location\": requirements_location,\r\n                },\r\n                \"desired\":{\r\n                  \"exp\": values.desired_exp,\r\n                  \"skills\": desired_skills,\r\n                  \"college\": desired_college,\r\n                  \"designation\": desired_designation,\r\n                  \"degree\": desired_degree,\r\n                },\r\n                \"kpis\": {},\r\n                \"storage_url\": ruta,\r\n                \"user\": props.usuario.correo,\r\n              };\r\n              \r\n              let configu = config(ruta);\r\n\r\n              console.log(payload);\r\n              uploadFile(cvs,configu).then(e=>{\r\n                console.log(\"then aws bucket\",e);\r\n                axios.post(\"http://127.0.0.1:8000/selection/create/\",payload).then(r=>{\r\n                  console.log(r);\r\n                  history.push('/');\r\n                }).catch(r=>{\r\n                  console.log(r);\r\n                });\r\n              }).catch(e=>console.log(\"catch\",e));\r\n              \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Nuevo Proceso\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Llena los campos\r\n                  </Typography>\r\n                </Box>\r\n                <Grid container direction=\"row\" spacing={3}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      error={Boolean(touched.name && errors.name)}\r\n                      fullWidth\r\n                      helperText={touched.name && errors.name}\r\n                      label=\"Nombre Proceso\"\r\n                      margin=\"normal\"\r\n                      name=\"name\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.name}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      error={Boolean(touched.vacant && errors.vacant)}\r\n                      fullWidth\r\n                      helperText={touched.vacant && errors.vacant}\r\n                      label=\"Vacantes\"\r\n                      type=\"number\"\r\n                      margin=\"normal\"\r\n                      name=\"vacant\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.vacant}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      error={Boolean(touched.description && errors.description)}\r\n                      fullWidth\r\n                      helperText={touched.description && errors.description}\r\n                      label=\"Descripción del proceso\"\r\n                      margin=\"normal\"\r\n                      name=\"description\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.description}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" spacing={3}>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      error={Boolean(touched.area && errors.area)}\r\n                      fullWidth\r\n                      helperText={touched.area && errors.area}\r\n                      label=\"Área\"\r\n                      margin=\"normal\"\r\n                      name=\"area\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.area}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      error={Boolean(touched.subarea && errors.subarea)}\r\n                      fullWidth\r\n                      helperText={touched.subarea && errors.subarea}\r\n                      label=\"Subárea\"\r\n                      margin=\"normal\"\r\n                      name=\"subarea\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.subarea}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      error={Boolean(touched.industry && errors.industry)}\r\n                      fullWidth\r\n                      helperText={touched.industry && errors.industry}\r\n                      label=\"Industria\"\r\n                      margin=\"normal\"\r\n                      name=\"industry\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.industry}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid xs={2}>\r\n                    <FormControlLabel\r\n                      control={<Switch checked={values.is_remote} onChange={handleChange} name=\"is_remote\" />}\r\n                      label=\"¿Es remoto?\"\r\n                      labelPlacement=\"top\"\r\n                    />\r\n\r\n                  </Grid>\r\n                </Grid>\r\n                <br/>\r\n                <Grid container direction=\"row\" spacing={4}>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                      <Grid item>\r\n                        <Typography variant=\"h5\">Requisitos Mínimos</Typography>\r\n                      </Grid>\r\n                      \r\n                      <Grid item>\r\n                        <TextField\r\n                          error={Boolean(touched.requirements_exp && errors.requirements_exp)}\r\n                          fullWidth\r\n                          helperText={touched.requirements_exp && errors.requirements_exp}\r\n                          label=\"Experiencia mínima\"\r\n                          type=\"number\"\r\n                          margin=\"normal\"\r\n                          name=\"requirements_exp\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.requirements_exp}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={requirements_idioms} set={setRequirements_idioms} label={\"Idiomas\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={requirements_skills} set={setRequirements_skills} label={\"Skills\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={requirements_location} set={setRequirements_location} label={\"Lugar\"}/>\r\n                      </Grid>\r\n                                            \r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                      <Grid item>\r\n                        <Typography variant=\"h5\">Requisitos Deseables</Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          error={Boolean(touched.desired_exp && errors.desired_exp)}\r\n                          fullWidth\r\n                          helperText={touched.desired_exp && errors.desired_exp}\r\n                          label=\"Experiencia deseada\"\r\n                          type=\"number\"\r\n                          margin=\"normal\"\r\n                          name=\"desired_exp\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.desired_exp}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_skills} set={setDesired_skills} label={\"Skills\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_designation} set={setDesired_designation} label={\"Cargos\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_college} set={setDesired_college} label={\"Universidades\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_degree} set={setDesired_degree} label={\"Títulos\"}/>\r\n                      </Grid>\r\n                      \r\n                      \r\n                      \r\n                     \r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3} >\r\n                      <br/><br/><br/><br/>\r\n                      <Grid item xs={12}>\r\n                        \r\n                          Subir CV's\r\n                          <input\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            ref={fileInput}\r\n          \r\n                          />\r\n                          {/*<ReactS3Uploader\r\n                            signingUrl=\"/s3/sign\"\r\n                            signingUrlMethod=\"GET\"\r\n                            accept=\".zip,.rar,.7zip\"\r\n                            s3path=\"/uploads/\"\r\n                            onProgress={onUpload}\r\n                            onError={onUpload}\r\n                            onFinish={onUpload}\r\n                            \r\n                            uploadRequestHeaders={{ 'x-amz-acl': 'public-read' }}  // this is the default\r\n                            \r\n                            ref={fileInput}\r\n                            contentDisposition=\"auto\"\r\n                            />*/}\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Box my={2}>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            disabled={false}\r\n                            style={{ \"min-height\": \"100px\" }}\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            \r\n                            variant=\"contained\"\r\n                          >\r\n                            ¡Traeme a los mejores!\r\n                          </Button>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst ArrayInputNumber = ({ data, set, label }) => {\r\n  const [valor, setValor] = useState(1);\r\n  const definir = () => {\r\n    set([...data, Number(valor)]);\r\n    setValor(1);\r\n  }\r\n  const actualizar = (i) => {\r\n    setValor(data[i]);\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const eliminar = (i) => {\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const inputtext = (e) => {\r\n    e.preventDefault();\r\n    setValor(e.target.value);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Grid container direction=\"row\" spacing={0}>\r\n          <Grid item xs={10}>\r\n            <TextField variant=\"outlined\" label={label} type=\"number\" fullWidth value={valor} onChange={inputtext}/>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={definir}>\r\n              <Icono nombre={'CircleAdditionSolid'} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          {data.map((i,index)=>(\r\n            <Grid item>\r\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\r\n              </Badge>\r\n            </Grid>\r\n          ))}\r\n          \r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    \r\n  );\r\n}\r\n\r\nconst ArrayInput = ({ data, set, label }) => {\r\n  const [valor, setValor] = useState(\"\");\r\n  const definir = () => {\r\n    set([...data, valor.toLowerCase()]);\r\n    setValor(\"\");\r\n    console.log(data);\r\n  }\r\n  const actualizar = (i) => {\r\n    setValor(data[i]);\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const eliminar = (i) => {\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const inputtext = (e) => {\r\n    e.preventDefault();\r\n    setValor(e.target.value);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Grid container direction=\"row\" spacing={0}>\r\n          <Grid item xs={10}>\r\n            <TextField variant=\"outlined\" label={label} type=\"text\" fullWidth value={valor} onChange={inputtext}/>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={definir}>\r\n              <Icono nombre={'CircleAdditionSolid'} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {data.length !== 0 && <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          {data.map((i,index)=>(\r\n            <Grid item>\r\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\r\n              </Badge>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>} \r\n      \r\n        \r\n      \r\n    </Grid>\r\n    \r\n  );\r\n}\r\n\r\nconst Icono = ({ nombre }) => {\r\n  return(\r\n    <Icon style={{\r\n      transform: 'scale(1.5)' \r\n    }} iconName={nombre}  />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProcess);","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\downloads\\DescargaExcel.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\welcome\\Bienvenida.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\contenedor\\index.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\contenedor\\TopBar.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\contenedor\\NavBar\\index.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\contenedor\\NavBar\\NavItem.js",["276"],"import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    paddingLeft: theme.spacing(3),\r\n    textTransform: 'none',\r\n    width: '100%',\r\n    '&:hover':{\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst useStylesresp = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0,\r\n  },\r\n  button: {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor: theme.palette.roseclaro,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    paddingLeft: theme.spacing(3),\r\n    margin: theme.spacing(0),\r\n    textTransform: 'none',\r\n    width: '100%',\r\n    borderRadius: theme.spacing(1),\r\n    '&:hover':{\r\n      color: theme.palette.roseclaro,\r\n      backgroundColor:theme.palette.primary.main,\r\n    },\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(2),\r\n\r\n    paddingLeft: theme.spacing(3),\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.secondary.main,\r\n    '&:hover':{\r\n      color: theme.palette.secondary.dark,\r\n    },\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightBold,\r\n      color: theme.palette.secondary.dark,\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.secondary.dark,\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n        startIcon={<Icono nombre={icon} />}\r\n      >\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nconst Icono = ({ nombre }) => {\r\n  return(\r\n    <Icon style={{\r\n      transform: 'scale(1.5)' // Tune it\r\n    }} iconName={nombre}  />\r\n  );\r\n}\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\welcome\\KPIWelcome.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Boton.js",["277"],"import React from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    borderRadius: theme.spacing(4),\r\n  },\r\n  \r\n}));\r\n\r\nconst ProcessButton = ({ nombre, href, color, icon, desactivado=false }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    \r\n    <Button\r\n    variant=\"contained\" color={color}\r\n    to={href}\r\n    component={RouterLink}\r\n    className={classes.root}\r\n    endIcon={<Icon style={{\r\n      transform: 'scale(1.5)' // Tune it\r\n    }} iconName={icon}  />}\r\n    disabled={desactivado}\r\n    >\r\n    {nombre} \r\n    </Button>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProcessButton;","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\KPI.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\table\\Historico.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\table\\Procesos.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\process\\KPIs.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\welcome\\KPIContainer.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\process\\Mail.js",["278","279","280","281"],"import React, { useState } from 'react';\r\nimport Dialogo from '../Dialogo';\r\nimport Editor from '../Editor';\r\nimport { Grid, Container, Button, makeStyles, Card, CardContent, TextField } from '@material-ui/core';\r\nimport { EditorState } from 'draft-js';\r\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Mail = (props) => {\r\n  const { setOpen, open, user, candidatemail, token } = props;\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  return (\r\n    <Dialogo setOpen={setOpen} open={open} titulo={\"Nuevo Mensaje\"} >\r\n    \t<Formulario user={user} candidatemail={candidatemail} token={token} />\r\n  \t</Dialogo>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    color: theme.palette.grisoscuro,\r\n  },\r\n  nombre: {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  descripcion: {\r\n    paddingTop: theme.spacing(4),\r\n\r\n  },\r\n}));\r\n\r\nconst Formulario = (props) => {\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  return (\r\n    <Grid container className={classes.root} spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Card className={classes.card}>\r\n          <Formik\r\n            initialValues={{\r\n              para: props.candidatemail,\r\n              cc: '',\r\n              asunto: '',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              para: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\r\n              cc: Yup.string().email('Debe ser un email válido').max(255),\r\n              asunto: Yup.string().max(255).required('Debe definir el asunto del email')\r\n            })}\r\n            onSubmit={(values, actions) => {\r\n              const datam = {\r\n                type:\"mail\",\r\n                user:props.user.correo,\r\n                info:{\r\n                  \"to\":[values.para],\r\n                  \"cc\":[values.cc],\r\n                  \"subject\":values.asunto,\r\n                  \"content\":html\r\n                },\r\n              };\r\n              const datag = {\r\n                type:\"mail\",\r\n                user:props.user.correo,\r\n                info:{\r\n                  \"sender\":props.user.correo,\r\n                  \"to\":values.para,\r\n                  \"cc\":values.cc,\r\n                  \"subject\":values.asunto,\r\n                  \"message_text\":html\r\n                },\r\n              };\r\n              const data = props.user.type === \"google\" ? datag : datam;\r\n              console.log(data);\r\n              axios.post(`http://127.0.0.1:8000/selection/sendmail/${props.user.token}`,data).then(r=>{\r\n                console.log(r);\r\n                history.push('/');\r\n              }).catch(r=>{\r\n                console.log(r);\r\n              });        \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit} >\r\n                <CardContent>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        error={Boolean(touched.para && errors.para)}\r\n                        fullWidth\r\n                        helperText={touched.para && errors.para}\r\n                        label=\"Destinatario\"\r\n                        margin=\"normal\"\r\n                        name=\"para\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.para}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        error={Boolean(touched.asunto && errors.asunto)}\r\n                        fullWidth\r\n                        helperText={touched.asunto && errors.asunto}\r\n                        label=\"Asunto\"\r\n                        margin=\"normal\"\r\n                        name=\"asunto\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.asunto}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        error={Boolean(touched.cc && errors.cc)}\r\n                        fullWidth\r\n                        helperText={touched.cc && errors.cc}\r\n                        label=\"Con copia\"\r\n                        margin=\"normal\"\r\n                        name=\"cc\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"email\"\r\n                        value={values.cc}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Editor editorState={editorState} setEditorState={setEditorState}/>\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Button variant=\"contained\" type=\"submit\" color=\"primary\">\r\n                    {\"Enviar mail\"}\r\n                  </Button>\r\n                </CardContent>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Card>\r\n      </Grid>\r\n      \r\n        \r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Mail;","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\process\\Calendar.js",["282","283","284","285","286","287"],"import React, { useState } from 'react';\r\nimport Dialogo from '../Dialogo';\r\nimport Editor from '../Editor';\r\nimport { Grid, InputAdornment, Switch, FormControlLabel, IconButton, Container, Button, makeStyles, Card, CardContent, TextField } from '@material-ui/core';\r\nimport { EditorState } from 'draft-js';\r\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\nconst Calendar = (props) => {\r\n  const { setOpen, open, usermail, candidatemail } = props;\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  return (\r\n    <Dialogo setOpen={setOpen} open={open} titulo={\"Nueva calendarización\"} >\r\n    \t<Formulario />\r\n  \t</Dialogo>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    color: theme.palette.grisoscuro,\r\n  },\r\n  nombre: {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  descripcion: {\r\n    paddingTop: theme.spacing(4),\r\n\r\n  },\r\n}));\r\n\r\nconst Formulario = (props) => {\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.root} spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Card className={classes.card}>\r\n          <Formik\r\n            initialValues={{\r\n              nombre: '',\r\n              fecha1: '',\r\n              fecha2: '',\r\n              asunto: '',\r\n              teams: false,\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              nombre: Yup.string().max(255).required('Debe definir el nombre del evento'),\r\n              asunto: Yup.string().max(255).required('Debe definir el asunto del email')\r\n            })}\r\n            onSubmit={(values, actions) => {\r\n              console.log({\"nombre\":values.nombre,\"fecha1\":values.fecha1,\"fecha2\":values.fecha2,\"asunto\":values.asunto,\"teams\":values.teams,\"html\":html});            \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit} >\r\n                <CardContent>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        error={Boolean(touched.nombre && errors.nombre)}\r\n                        fullWidth\r\n                        helperText={touched.nombre && errors.nombre}\r\n                        label=\"Nombre evento\"\r\n                        margin=\"normal\"\r\n                        name=\"nombre\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.nombre}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <TextField\r\n                        error={Boolean(touched.fecha1 && errors.fecha1)}\r\n                        fullWidth\r\n                        helperText={touched.fecha1 && errors.fecha1}\r\n                        InputProps={{\r\n\t\t\t\t            startAdornment: <InputAdornment position=\"start\">Inicio</InputAdornment>,\r\n\t\t\t\t          }}\r\n                        margin=\"normal\"\r\n                        name=\"fecha1\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"time\"\r\n                        value={values.fecha1}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <TextField\r\n                        error={Boolean(touched.fecha2 && errors.fecha2)}\r\n                        fullWidth\r\n                        helperText={touched.fecha2 && errors.fecha2}\r\n                        InputProps={{\r\n\t\t\t\t            startAdornment: <InputAdornment position=\"start\">Fin</InputAdornment>,\r\n\t\t\t\t          }}\r\n                        margin=\"normal\"\r\n                        name=\"fecha2\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"time\"\r\n                        value={values.fecha2}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                    \t<IconButton edge=\"end\" aria-label=\"calendar\"\r\n\t\t                  onClick={()=>console.log(\"Ver horarios\")}\r\n\t\t                >\r\n\t\t                \t<Icon iconName=\"TimelineMatrixView\" style={{transform: 'scale(1.3)'}}/>\r\n\t\t                </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        error={Boolean(touched.asunto && errors.asunto)}\r\n                        fullWidth\r\n                        helperText={touched.asunto && errors.asunto}\r\n                        label=\"Asunto\"\r\n                        margin=\"normal\"\r\n                        name=\"asunto\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.asunto}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Editor editorState={editorState} setEditorState={setEditorState}/>\r\n                </CardContent>\r\n                <CardContent>\r\n                \t<Grid container>\r\n\t                \t<Grid xs={2}>\r\n\t\t                    <FormControlLabel\r\n\t\t                      control={<Switch checked={values.teams} onChange={handleChange} name=\"teams\" />}\r\n\t\t                      label=\"¿En MS Teams?\"\r\n\t\t                      labelPlacement=\"top\"\r\n\t\t                    />\r\n\t                  \t</Grid>\r\n\t                  \t<Grid xs={6}></Grid>\r\n\t                  \t<Grid xs={4}>\r\n\t\t                  <Button variant=\"contained\" fullWidth type=\"submit\" color=\"primary\">\r\n\t\t                    {\"Enviar mail\"}\r\n\t\t                  </Button>\r\n\t\t                </Grid>\r\n\t\t            </Grid>\r\n                </CardContent>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Card>\r\n      </Grid>\r\n      \r\n        \r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Calendar;","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Editor.js",["288"],"import React, { useState } from 'react';\r\n//import { Editor } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\n\r\nconst MyEditor = ({setEditorState,editorState}) => {\r\n  //const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const onEditorStateChange = (editorState) => {\r\n    setEditorState(editorState);\r\n };\r\nreturn (\r\n  <div>\r\n    <Editor \r\n      editorState={editorState}\r\n      wrapperClassName=\"rich-editor demo-wrapper\"\r\n      editorClassName=\"demo-editor\"\r\n      onEditorStateChange={onEditorStateChange}\r\n      placeholder=\"Escriba aquí\" />\r\n  </div>\r\n);\r\n}\r\nexport default MyEditor;","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Boton2.js",["289"],"import React from 'react';\r\nimport {\r\n  Button,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n    borderRadius: theme.spacing(4),\r\n  },\r\n  \r\n}));\r\n\r\nconst ProcessButton = ({ nombre, href, clickear, desactivado=false  }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    \r\n    <Button\r\n    variant=\"contained\" color=\"primary\"\r\n    to={href}\r\n    component={RouterLink}\r\n    className={classes.root}\r\n    onClick={clickear}\r\n    disabled={desactivado}\r\n    >\r\n    {nombre}\r\n    </Button>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProcessButton;","C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\table\\Elementos.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\process\\KPIContainer.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\Dialogo.js",[],"C:\\Users\\Usuario\\Documents\\rose\\frontend\\src\\componentes\\account\\Detalles.js",["290"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Typography,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\n\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst Detalles = ({ usuario, configuracion, className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    threshold: configuracion.threshold,\r\n    timezone: configuracion.timezone,\r\n    primarycolor: '',\r\n    secondarycolor: '',\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"Colores e información de cuenta\"\r\n          title=\"Perfil\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <Typography variant=\"h6\">\r\n                {\"Treshold: \"}{configuracion.threshold}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <Typography variant=\"h6\">\r\n                {\"Zona Horaria: \"}{configuracion.timezone}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Color primario\"\r\n                name=\"primarycolor\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.primarycolor}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Color secundario\"\r\n                name=\"secondarycolor\"\r\n                onChange={handleChange}\r\n                value={values.secondarycolor}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Actualizar colores\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Detalles;\r\n",{"ruleId":"291","replacedBy":"292"},{"ruleId":"293","replacedBy":"294"},{"ruleId":"295","severity":1,"message":"296","line":42,"column":5,"nodeType":"297","endLine":42,"endColumn":20,"suggestions":"298"},{"ruleId":"299","severity":1,"message":"300","line":8,"column":8,"nodeType":"301","messageId":"302","endLine":8,"endColumn":17},{"ruleId":"299","severity":1,"message":"303","line":9,"column":8,"nodeType":"301","messageId":"302","endLine":9,"endColumn":17},{"ruleId":"304","severity":1,"message":"305","line":2,"column":1,"nodeType":"306","endLine":903,"endColumn":3},{"ruleId":"299","severity":1,"message":"307","line":180,"column":7,"nodeType":"301","messageId":"302","endLine":180,"endColumn":21},{"ruleId":"299","severity":1,"message":"308","line":3,"column":3,"nodeType":"301","messageId":"302","endLine":3,"endColumn":12},{"ruleId":"299","severity":1,"message":"309","line":1,"column":17,"nodeType":"301","messageId":"302","endLine":1,"endColumn":23},{"ruleId":"299","severity":1,"message":"310","line":40,"column":10,"nodeType":"301","messageId":"302","endLine":40,"endColumn":26},{"ruleId":"299","severity":1,"message":"311","line":40,"column":28,"nodeType":"301","messageId":"302","endLine":40,"endColumn":47},{"ruleId":"299","severity":1,"message":"312","line":44,"column":10,"nodeType":"301","messageId":"302","endLine":44,"endColumn":21},{"ruleId":"299","severity":1,"message":"313","line":44,"column":23,"nodeType":"301","messageId":"302","endLine":44,"endColumn":37},{"ruleId":"299","severity":1,"message":"314","line":361,"column":7,"nodeType":"301","messageId":"302","endLine":361,"endColumn":23},{"ruleId":"299","severity":1,"message":"315","line":6,"column":25,"nodeType":"301","messageId":"302","endLine":6,"endColumn":40},{"ruleId":"299","severity":1,"message":"316","line":208,"column":9,"nodeType":"301","messageId":"302","endLine":208,"endColumn":16},{"ruleId":"299","severity":1,"message":"317","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":22},{"ruleId":"299","severity":1,"message":"318","line":8,"column":8,"nodeType":"301","messageId":"302","endLine":8,"endColumn":13},{"ruleId":"299","severity":1,"message":"319","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":14},{"ruleId":"299","severity":1,"message":"320","line":203,"column":10,"nodeType":"301","messageId":"302","endLine":203,"endColumn":16},{"ruleId":"299","severity":1,"message":"321","line":204,"column":10,"nodeType":"301","messageId":"302","endLine":204,"endColumn":16},{"ruleId":"299","severity":1,"message":"322","line":204,"column":18,"nodeType":"301","messageId":"302","endLine":204,"endColumn":31},{"ruleId":"299","severity":1,"message":"323","line":207,"column":9,"nodeType":"301","messageId":"302","endLine":207,"endColumn":22},{"ruleId":"299","severity":1,"message":"324","line":24,"column":8,"nodeType":"301","messageId":"302","endLine":24,"endColumn":23},{"ruleId":"325","severity":1,"message":"326","line":27,"column":1,"nodeType":"327","messageId":"328","endLine":39,"endColumn":7},{"ruleId":"299","severity":1,"message":"329","line":56,"column":7,"nodeType":"301","messageId":"302","endLine":56,"endColumn":18},{"ruleId":"299","severity":1,"message":"330","line":74,"column":7,"nodeType":"301","messageId":"302","endLine":74,"endColumn":19},{"ruleId":"299","severity":1,"message":"331","line":99,"column":7,"nodeType":"301","messageId":"302","endLine":99,"endColumn":19},{"ruleId":"299","severity":1,"message":"332","line":180,"column":9,"nodeType":"301","messageId":"302","endLine":180,"endColumn":19},{"ruleId":"299","severity":1,"message":"333","line":185,"column":9,"nodeType":"301","messageId":"302","endLine":185,"endColumn":17},{"ruleId":"299","severity":1,"message":"314","line":536,"column":7,"nodeType":"301","messageId":"302","endLine":536,"endColumn":23},{"ruleId":"299","severity":1,"message":"334","line":47,"column":7,"nodeType":"301","messageId":"302","endLine":47,"endColumn":20},{"ruleId":"299","severity":1,"message":"335","line":4,"column":3,"nodeType":"301","messageId":"302","endLine":4,"endColumn":7},{"ruleId":"299","severity":1,"message":"308","line":4,"column":16,"nodeType":"301","messageId":"302","endLine":4,"endColumn":25},{"ruleId":"299","severity":1,"message":"315","line":6,"column":25,"nodeType":"301","messageId":"302","endLine":6,"endColumn":40},{"ruleId":"299","severity":1,"message":"336","line":14,"column":23,"nodeType":"301","messageId":"302","endLine":14,"endColumn":37},{"ruleId":"299","severity":1,"message":"337","line":15,"column":9,"nodeType":"301","messageId":"302","endLine":15,"endColumn":13},{"ruleId":"299","severity":1,"message":"308","line":4,"column":70,"nodeType":"301","messageId":"302","endLine":4,"endColumn":79},{"ruleId":"299","severity":1,"message":"315","line":6,"column":25,"nodeType":"301","messageId":"302","endLine":6,"endColumn":40},{"ruleId":"299","severity":1,"message":"338","line":12,"column":26,"nodeType":"301","messageId":"302","endLine":12,"endColumn":34},{"ruleId":"299","severity":1,"message":"339","line":12,"column":36,"nodeType":"301","messageId":"302","endLine":12,"endColumn":49},{"ruleId":"299","severity":1,"message":"336","line":13,"column":23,"nodeType":"301","messageId":"302","endLine":13,"endColumn":37},{"ruleId":"299","severity":1,"message":"337","line":14,"column":9,"nodeType":"301","messageId":"302","endLine":14,"endColumn":13},{"ruleId":"299","severity":1,"message":"340","line":1,"column":17,"nodeType":"301","messageId":"302","endLine":1,"endColumn":25},{"ruleId":"299","severity":1,"message":"335","line":4,"column":3,"nodeType":"301","messageId":"302","endLine":4,"endColumn":7},{"ruleId":"299","severity":1,"message":"341","line":3,"column":8,"nodeType":"301","messageId":"302","endLine":3,"endColumn":17},"no-native-reassign",["342"],"no-negated-in-lhs",["343"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.cargarBienvenida', 'props.cargarConfiguracion', 'props.cargarEventos', 'props.cargarHistorico', 'props.cargarProcesos', and 'props.cargarTutoriales'. Either include them or remove the dependency array.","ArrayExpression",["344"],"no-unused-vars","'LoginView' is defined but never used.","Identifier","unusedVar","'MicroSoft' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'EnlaceRegistro' is assigned a value but never used.","'Container' is defined but never used.","'useRef' is defined but never used.","'requirements_exp' is assigned a value but never used.","'setRequirements_exp' is assigned a value but never used.","'desired_exp' is assigned a value but never used.","'setDesired_exp' is assigned a value but never used.","'ArrayInputNumber' is assigned a value but never used.","'convertFromHTML' is defined but never used.","'history' is assigned a value but never used.","'AccessTimeIcon' is defined but never used.","'Tabla' is defined but never used.","'moment' is defined but never used.","'limite' is assigned a value but never used.","'pagina' is assigned a value but never used.","'definirPagina' is assigned a value but never used.","'cambiarLimite' is assigned a value but never used.","'ReactS3Uploader' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'uploadFile1' is assigned a value but never used.","'uploadFile22' is assigned a value but never used.","'uploadFile12' is assigned a value but never used.","'handleFile' is assigned a value but never used.","'onUpload' is assigned a value but never used.","'useStylesresp' is assigned a value but never used.","'Grid' is defined but never used.","'setEditorState' is assigned a value but never used.","'html' is assigned a value but never used.","'usermail' is assigned a value but never used.","'candidatemail' is assigned a value but never used.","'useState' is defined but never used.","'PropTypes' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"345","fix":"346"},"Update the dependencies array to be: [props.cargarBienvenida, props.cargarConfiguracion, props.cargarEventos, props.cargarHistorico, props.cargarProcesos, props.cargarTutoriales, props.usuario]",{"range":"347","text":"348"},[1892,1907],"[props.cargarBienvenida, props.cargarConfiguracion, props.cargarEventos, props.cargarHistorico, props.cargarProcesos, props.cargarTutoriales, props.usuario]"]