[{"/app/frontend/src/index.js":"1","/app/frontend/src/App.js":"2","/app/frontend/src/serviceWorker.js":"3","/app/frontend/src/estilo/Estilo.js":"4","/app/frontend/src/store/index.js":"5","/app/frontend/src/componentes/Cambiador.js":"6","/app/frontend/src/componentes/CambiadorPublico.js":"7","/app/frontend/src/componentes/DataProcesos.js":"8","/app/frontend/src/estilo/Paleta.js":"9","/app/frontend/src/estilo/Tipografia.js":"10","/app/frontend/src/estilo/TipografiaResponsiva.js":"11","/app/frontend/src/estilo/Breakpoints.js":"12","/app/frontend/src/vistas/Vistas.js":"13","/app/frontend/src/auth/LoginView.js":"14","/app/frontend/src/auth/RegisterView.js":"15","/app/frontend/src/rose/Microsoft.js":"16","/app/frontend/src/componentes/account/index.js":"17","/app/frontend/src/rose/Msal.js":"18","/app/frontend/src/componentes/Page.js":"19","/app/frontend/src/rose/Google.js":"20","/app/frontend/src/componentes/account/Detalles.js":"21","/app/frontend/src/componentes/account/Profile.js":"22","/app/frontend/src/contenedor/index.js":"23","/app/frontend/src/contenedor/TopBar.js":"24","/app/frontend/src/contenedor/NavBar/index.js":"25","/app/frontend/src/contenedor/NavBar/NavItem.js":"26","/app/frontend/src/vistas/WelcomePage.js":"27","/app/frontend/src/vistas/ViewProcessMail.js":"28","/app/frontend/src/vistas/ViewProcessCalendar.js":"29","/app/frontend/src/vistas/ViewProcess.js":"30","/app/frontend/src/vistas/Process.js":"31","/app/frontend/src/vistas/Login.js":"32","/app/frontend/src/vistas/HelpTutorials.js":"33","/app/frontend/src/vistas/Historic.js":"34","/app/frontend/src/vistas/Help.js":"35","/app/frontend/src/vistas/Error.js":"36","/app/frontend/src/vistas/EditProcess.js":"37","/app/frontend/src/componentes/NA.js":"38","/app/frontend/src/vistas/AddProcess.js":"39","/app/frontend/src/componentes/welcome/Bienvenida.js":"40","/app/frontend/src/componentes/welcome/KPIWelcome.js":"41","/app/frontend/src/componentes/process/KPIs.js":"42","/app/frontend/src/componentes/process/Mail.js":"43","/app/frontend/src/componentes/process/Calendar.js":"44","/app/frontend/src/componentes/Boton.js":"45","/app/frontend/src/componentes/downloads/DescargaExcel.js":"46","/app/frontend/src/componentes/table/Procesos.js":"47","/app/frontend/src/componentes/table/Historico.js":"48","/app/frontend/src/componentes/KPI.js":"49","/app/frontend/src/componentes/Boton2.js":"50","/app/frontend/src/componentes/Editor.js":"51","/app/frontend/src/componentes/AddProcess.js":"52","/app/frontend/src/componentes/welcome/KPIContainer.js":"53","/app/frontend/src/componentes/process/KPIContainer.js":"54","/app/frontend/src/componentes/Dialogo.js":"55","/app/frontend/src/componentes/table/Elementos.js":"56"},{"size":844,"mtime":1612814198317,"results":"57","hashOfConfig":"58"},{"size":8517,"mtime":1612814198317,"results":"59","hashOfConfig":"58"},{"size":4508,"mtime":1612814198317,"results":"60","hashOfConfig":"58"},{"size":5213,"mtime":1612814198313,"results":"61","hashOfConfig":"58"},{"size":3252,"mtime":1612814198313,"results":"62","hashOfConfig":"58"},{"size":1386,"mtime":1612814198309,"results":"63","hashOfConfig":"58"},{"size":395,"mtime":1612814198309,"results":"64","hashOfConfig":"58"},{"size":38832,"mtime":1612814198309,"results":"65","hashOfConfig":"58"},{"size":463,"mtime":1612814198313,"results":"66","hashOfConfig":"58"},{"size":546,"mtime":1612814198313,"results":"67","hashOfConfig":"58"},{"size":1624,"mtime":1612814198313,"results":"68","hashOfConfig":"58"},{"size":117,"mtime":1612814198313,"results":"69","hashOfConfig":"58"},{"size":624,"mtime":1612814198317,"results":"70","hashOfConfig":"58"},{"size":5755,"mtime":1612814198309,"results":"71","hashOfConfig":"58"},{"size":6847,"mtime":1612814198309,"results":"72","hashOfConfig":"58"},{"size":1960,"mtime":1612814198313,"results":"73","hashOfConfig":"58"},{"size":1472,"mtime":1612814198309,"results":"74","hashOfConfig":"58"},{"size":3594,"mtime":1612814198313,"results":"75","hashOfConfig":"58"},{"size":361,"mtime":1612814198313,"results":"76","hashOfConfig":"58"},{"size":2044,"mtime":1612814198313,"results":"77","hashOfConfig":"58"},{"size":3452,"mtime":1612814198309,"results":"78","hashOfConfig":"58"},{"size":2619,"mtime":1612814198309,"results":"79","hashOfConfig":"58"},{"size":1490,"mtime":1612814198313,"results":"80","hashOfConfig":"58"},{"size":1863,"mtime":1612814198313,"results":"81","hashOfConfig":"58"},{"size":2957,"mtime":1612814198313,"results":"82","hashOfConfig":"58"},{"size":2877,"mtime":1612814198313,"results":"83","hashOfConfig":"58"},{"size":1064,"mtime":1612814198317,"results":"84","hashOfConfig":"58"},{"size":161,"mtime":1612814198317,"results":"85","hashOfConfig":"58"},{"size":173,"mtime":1612814198317,"results":"86","hashOfConfig":"58"},{"size":11919,"mtime":1612814198317,"results":"87","hashOfConfig":"58"},{"size":5561,"mtime":1612814198317,"results":"88","hashOfConfig":"58"},{"size":3218,"mtime":1612814198313,"results":"89","hashOfConfig":"58"},{"size":214,"mtime":1612814198313,"results":"90","hashOfConfig":"58"},{"size":9754,"mtime":1612814198313,"results":"91","hashOfConfig":"58"},{"size":10260,"mtime":1612814198313,"results":"92","hashOfConfig":"58"},{"size":131,"mtime":1612814198313,"results":"93","hashOfConfig":"58"},{"size":17555,"mtime":1612814198313,"results":"94","hashOfConfig":"58"},{"size":7427,"mtime":1612814198313,"results":"95","hashOfConfig":"58"},{"size":283,"mtime":1612814198313,"results":"96","hashOfConfig":"58"},{"size":1140,"mtime":1612814198309,"results":"97","hashOfConfig":"58"},{"size":979,"mtime":1612814198309,"results":"98","hashOfConfig":"58"},{"size":1276,"mtime":1612814198309,"results":"99","hashOfConfig":"58"},{"size":6027,"mtime":1612814198309,"results":"100","hashOfConfig":"58"},{"size":7430,"mtime":1612814198309,"results":"101","hashOfConfig":"58"},{"size":860,"mtime":1612814198309,"results":"102","hashOfConfig":"58"},{"size":2207,"mtime":1612814198309,"results":"103","hashOfConfig":"58"},{"size":7360,"mtime":1612814198309,"results":"104","hashOfConfig":"58"},{"size":4465,"mtime":1612814198309,"results":"105","hashOfConfig":"58"},{"size":3626,"mtime":1612814198309,"results":"106","hashOfConfig":"58"},{"size":716,"mtime":1612814198309,"results":"107","hashOfConfig":"58"},{"size":613,"mtime":1612814198309,"results":"108","hashOfConfig":"58"},{"size":19808,"mtime":1612814198309,"results":"109","hashOfConfig":"58"},{"size":487,"mtime":1612814198309,"results":"110","hashOfConfig":"58"},{"size":1561,"mtime":1612814198309,"results":"111","hashOfConfig":"58"},{"size":437,"mtime":1612814198309,"results":"112","hashOfConfig":"58"},{"size":3288,"mtime":1612814198309,"results":"113","hashOfConfig":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xj9bcq",{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"119"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"119"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"119"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"119"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"119"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"119"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"119"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"119"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"119"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"119"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"119"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"119"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"214","usedDeprecatedRules":"119"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217","usedDeprecatedRules":"119"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"220","usedDeprecatedRules":"119"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"119"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"119"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"119"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"119"},"/app/frontend/src/index.js",[],"/app/frontend/src/App.js",["247","248"],"import React, { useEffect } from 'react';\nimport Cambiador from './componentes/Cambiador';\nimport CambiadorPublico from './componentes/CambiadorPublico';\nimport { connect } from 'react-redux';\n//import obtenerEstadoUsuarioTest from './funciones/login/obtenerEstadoUsuarioTest';\n//import { useHistory } from \"react-router-dom\";\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport axios from 'axios';\nimport data from './componentes/DataProcesos';\nimport './App.css';\nimport '../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport { initializeIcons } from '@uifabric/icons';\nimport AWS from 'aws-sdk';\ninitializeIcons();\n\nAWS.config.update({\n  region : 'us-east-2',\n  accessKeyId: 'AKIA5XKDKZ4KRSBLKVGI',\n  secretAccessKey: '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',\n});\n\nconst s3 = new AWS.S3({\n accessKeyId: 'AKIA5XKDKZ4KRSBLKVGI',\n secretAccessKey: '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',\n Bucket: 'rosev0',\n region : 'us-east-2',\n});\n\nconsole.log(\"AWS\",AWS);\n\n\nconst App = (props) => {\n  //let history = useHistory();\n  const a = \"a\";//Para hacer de nuevo el commit y el push\n  useEffect(()=>{\n    console.log(\"useEffect App 1\");\n    //obtenerEstadoUsuarioTest(props);\n    if(props.usuario!==null){\n      requestsProcesos(props.usuario,props.cargarProcesos).then(response=>{\n        console.log(\"Respuesta verdadera\",response);\n      }).catch(e=>console.log(e));\n      requestBienvenida(props.usuario.correo,props.cargarBienvenida).then(response=>{\n        console.log(\"Respuesta verdadera\",response);\n      }).catch(e=>console.log(e));\n      requestConfiguracion(props.usuario.correo,props.cargarConfiguracion).then(response=>{\n        console.log(\"Respuesta verdadera\",response);\n      }).catch(e=>console.log(e));\n      requestTutoriales(props.cargarTutoriales).then(response=>{\n        console.log(\"Respuesta verdadera\",response);\n      }).catch(e=>console.log(e));\n      requestEventos(props.usuario.correo,props.usuario.token,props.cargarEventos).then(response=>{\n        console.log(\"Respuesta verdadera\",response);\n      }).catch(e=>console.log(e));\n      requestHistorico(props.usuario.correo,props.cargarHistorico).then(response=>{\n        console.log(\"Respuesta verdadera\",response);\n      }).catch(e=>console.log(e));\n      obtenerLogo(props.usuario.correo,props.cargarLogo).then(response=>{\n        console.log(\"Respuesta verdadera logo\",response);\n      }).catch(e=>console.log(\"error logo\",e));\n    }\n    \n  },[props.usuario]);\n  return (\n    <>\n      \n      <CssBaseline />\n      \n      <Casos usuario={props.usuario} privado={props.usuario !== null} actualizarUser={props.actualizarUser} />\n      \n      \n\n    </>\n    \n  );\n}\n\nconst Casos = (props) => {\n  const privado = [<Cambiador usuario={props.usuario} actualizarUser={props.actualizarUser}/>];\n  const publico = [<CambiadorPublico usuario={props.usuario} actualizarUser={props.actualizarUser}/>];\n  return (\n    <>\n      {props.privado && privado}\n      {!props.privado && publico}\n    </>\n  );\n}\n\nconst actualizarUsuario = (usuario) => {\n  return {\n    type: 'ACTUALIZAR_USUARIO',\n    usuario: usuario,\n  }\n}\n\nconst cargarEventos = (newState) => {\n  return {\n      type: 'CARGAR_EVENTOS',\n      newState: newState,\n    }  \n}\nconst cargarProcesos = (newState) => {\n  return {\n      type: 'CARGAR_PROCESOS',\n      newState: newState,\n    }  \n}\nconst cargarBienvenida = (newState) => {\n  return {\n      type: 'CARGAR_BIENVENIDA',\n      newState: newState,\n    }  \n}\nconst cargarConfiguracion = (newState) => {\n  return {\n      type: 'CARGAR_CONFIGURACION',\n      newState: newState,\n    }  \n}\nconst cargarHistorico = (newState) => {\n  return {\n      type: 'CARGAR_HISTORICO',\n      newState: newState,\n    }  \n}\nconst cargarTutoriales = (newState) => {\n  return {\n      type: 'CARGAR_TUTORIALES',\n      newState: newState,\n    }  \n}\nconst cargarLogo = (newState) => {\n  return {\n      type: 'CARGAR_LOGO',\n      newState: newState,\n    }  \n}\n\nconst requestsProcesos = (usuario, cargarProcesos) => {\n    return new Promise((resolve, reject)=>{\n      var state = data;\n      axios.get(`https://rosev0-dev-api.myfuture.ai/selection/list/${usuario.correo}/`)\n      .then(response=>{\n        console.log(response);\n        state = response.data.data;\n        state = state.map((i, index)=>{\n          var salida = i;\n          requestsCandidatosProceso(i.id).then(res=>{\n            salida = Object.assign(i,{candidatos:res});\n          }).catch(er=>console.log(er));\n          return salida;\n        });\n        cargarProcesos(state);\n        resolve(true);\n      })\n      .catch(error=>{\n        console.log(error);\n        reject(false);\n      });\n    });\n}\n\nconst requestsCandidatosProceso = (idProceso) => {\n    return new Promise((resolve, reject)=>{\n      var candidatos;\n      axios.get(`https://rosev0-dev-api.myfuture.ai/selection/${idProceso}/candidates/`)\n      .then(response=>{\n        console.log(response);\n        candidatos = response.data.data;\n        resolve(candidatos);\n      })\n      .catch(error=>{\n        console.log(error);\n        reject(error);\n      });\n    });\n}\n\nconst requestHistorico = (correo, cargar) => {\n    return new Promise((resolve, reject)=>{\n      axios.get(`https://rosev0-dev-api.myfuture.ai/selection​/${correo}​/candidates​/`).then(response=>{\n        console.log(response);\n        cargar(response.data);\n\n        resolve(true);\n      })\n      .catch(error=>{\n        console.log(false);\n        reject(\"No se pudo cargar historico\");\n      });\n    });\n}\n\nconst requestEventos = (correo, token, cargar) => {\n    return new Promise((resolve, reject)=>{\n      axios.get(`https://rosev0-dev-api.myfuture.ai/selection/events/${encodeURIComponent(correo)}/${encodeURIComponent(token)}`).then(response=>{\n        console.log(response);\n        cargar(response.data);\n\n        resolve(true);\n      })\n      .catch(error=>{\n        console.log(false);\n        reject(\"No se pudo cargar eventos\");\n      });\n    });\n}\n\nconst requestBienvenida = (correo, cargar) => {\n    return new Promise((resolve, reject)=>{\n      axios.get(`https://rosev0-dev-api.myfuture.ai/selection/home/${correo}/`).then(response=>{\n        console.log(response);\n        cargar(response.data);\n\n        resolve(true);\n      })\n      .catch(error=>{\n        console.log(false);\n        reject(\"bienvenida\");\n      });\n    });\n}\n\nconst requestConfiguracion = (correo, cargar) => {\n    return new Promise((resolve, reject)=>{\n      axios.get(`https://rosev0-dev-api.myfuture.ai/selection/config/${correo}/`).then(response=>{\n        console.log(response);\n        cargar(response.data);\n\n        resolve(true);\n      })\n      .catch(error=>{\n        console.log(false);\n        reject(\"config\");\n      });\n    });\n}\n\nconst requestTutoriales = (cargar) => {\n    return new Promise((resolve, reject)=>{\n      axios.get(`https://rosev0-dev-api.myfuture.ai/selection/tutorials/`).then(response=>{\n        console.log(response);\n        cargar(response.data);\n        resolve(true);\n      })\n      .catch(error=>{\n        console.log(false);\n        reject(error);\n      });\n    });\n}\n\nconst obtenerLogo = (correo, cargar) => {\n  console.log(\"obtlogo\",correo);\n  var email_cambiado = correo.replace(\"@\",\"_\");\n  console.log(email_cambiado);\n  var ruta = email_cambiado+'/icono';\n  return new Promise((resolve, reject)=>{\n    //s3.getObject({Key: ruta, Bucket:'rosev0'}, function(err, data) {\n    s3.listObjects({Prefix: ruta, Bucket:'rosev0'}, function(err, data) {\n      if (err) {\n        console.log(err);\n        reject(err);\n      }else{\n        console.log(data);\n        resolve(data);\n      }\n    });\n  });\n}\n\nconst mapStateToProps = estado => {\n  return {\n    usuario: estado.usuario,\n    procesos: estado.procesos,\n    estilo: estado.estilo,\n  }\n}\n\nconst mapDispatchToProps = despachar => {\n    return {\n        actualizarUser: (usuario) => despachar(actualizarUsuario(usuario)),\n        cargarProcesos: (newState) => despachar(cargarProcesos(newState)),\n        cargarBienvenida: (newState) => despachar(cargarBienvenida(newState)),\n        cargarConfiguracion: (newState) => despachar(cargarConfiguracion(newState)),\n        cargarTutoriales: (newState) => despachar(cargarTutoriales(newState)),\n        cargarEventos: (newState) => despachar(cargarEventos(newState)),\n        cargarHistorico: (newState) => despachar(cargarHistorico(newState)),\n        cargarLogo: (newState) => despachar(cargarLogo(newState)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);",["249","250"],"/app/frontend/src/serviceWorker.js",[],"/app/frontend/src/estilo/Estilo.js",[],"/app/frontend/src/store/index.js",[],"/app/frontend/src/componentes/Cambiador.js",["251","252"],"import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { AddProcess, EditProcess, Error, Help,\n HelpTutorials, Historic, Login, Process, ViewProcess,\n  ViewProcessCalendar, ViewProcessMail, WelcomePage } from '../vistas/Vistas';\n\n\nimport LoginView from '../auth/LoginView';\nimport MicroSoft from '../rose/Microsoft';\n\nimport AccountView from './account';\n\n\nconst Cambiador = (props) => {\n  return (\n    <Switch>\n      <Route exact path={\"/Perfil\"} component={AccountView}/>\n\n      <Route exact path={\"/AddProcess\"} component={AddProcess}/>\n      <Route exact path={\"/EditProcess\"} component={EditProcess}/>\n      <Route exact path={\"/Error\"} component={Error}/>\n      <Route exact path={\"/Ayuda\"} component={Help}/>\n      <Route exact path={\"/HelpTutorials\"} component={HelpTutorials}/>\n      <Route exact path={\"/Historic\"} component={Historic}/>\n      <Route exact path={\"/Logi\"} component={Login}/>\n      <Route exact path={\"/Process\"} component={Process}/>\n      <Route exact path={\"/ViewProcess\"} component={ViewProcess}/>\n      <Route exact path={\"/ViewProcessCalendar\"} component={ViewProcessCalendar}/>\n      <Route exact path={\"/ViewProcessMail\"} component={ViewProcessMail}/>\n      <Route exact path={\"/\"} component={WelcomePage}/>\n      <Route exact path={\"/WelcomePage\"} component={WelcomePage}/>\n    </Switch>\n  );\n}\n\n\nexport default Cambiador;","/app/frontend/src/componentes/CambiadorPublico.js",[],"/app/frontend/src/componentes/DataProcesos.js",["253"],"\nexport default [\n  {\n    id: 1,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    createdAt: 1555016400000,\n    nombre: 'Ingeniero TI',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"catamuñoz@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"fermaldonado@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n  {\n    id: 2,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    createdAt: 1555016400000,\n    nombre: 'Marketing',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n  {\n    id: 3,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    \n    createdAt: 1555016400000,\n    nombre: 'Obras Civiles',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n  {\n    id: 4,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    createdAt: 1555016400000,\n    nombre: 'Ingeniero TI',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n  {\n    id: 5,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    createdAt: 1555016400000,\n    nombre: 'Marketing',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n  {\n    id: 6,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    \n    createdAt: 1555016400000,\n    nombre: 'Obras Civiles',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n  {\n    id: 7,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    createdAt: 1555016400000,\n    nombre: 'Ingeniero TI',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n  {\n    id: 8,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    createdAt: 1555016400000,\n    nombre: 'Marketing',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n  {\n    id: 9,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    \n    createdAt: 1555016400000,\n    nombre: 'Obras Civiles',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },{\n    id: 10,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    createdAt: 1555016400000,\n    nombre: 'Ingeniero TI',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n  {\n    id: 11,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    createdAt: 1555016400000,\n    nombre: 'Marketing',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n  {\n    id: 12,\n    status: \"status\",\n    below: \"5\",\n    normal: \"6\",\n    outstanding: \"7\",\n    \n    createdAt: 1555016400000,\n    nombre: 'Obras Civiles',\n    candidatos: [\n      {\n        nombre:\"Benjamín González\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Catalina Muñoz\",\n        ciudad:\"Viña del mar, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n      {\n        nombre:\"Fernanda Maldonado\",\n        ciudad:\"Stgo, Chile\",\n        profesion:\"Ing. Civil Industrial mención TI\",\n        experiencia:\"Exp: 3.5 años\",\n        email:\"bgonzalez@myfuture.ai\",\n        universidad:\"Universidad Adolfo Ibáñez\",\n        numero:\"+569 54191544\",\n        egreso:\"Egreso: 2017\",\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\n        idiomas:[\"Inglés avanzado\",\"Español\"],\n        certificaciones:[\"Diplomado en transformación digital\"],\n      },\n    ],\n  },\n];\n","/app/frontend/src/estilo/Paleta.js",[],"/app/frontend/src/estilo/Tipografia.js",[],"/app/frontend/src/estilo/TipografiaResponsiva.js",[],"/app/frontend/src/estilo/Breakpoints.js",[],"/app/frontend/src/vistas/Vistas.js",[],"/app/frontend/src/auth/LoginView.js",["254"],"import React from 'react';\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport {\n  Box,\n  Button,\n  Container,\n  Grid,\n  Link,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'axios';\nimport MicroSoft from '../rose/Microsoft';\nimport Google from '../rose/Google';\nimport { connect } from 'react-redux';\nimport rosee from '../images/rose_title.png';\n\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    backgroundColor: \"white\",\n    padding: theme.spacing(5),\n    borderRadius: theme.spacing(7),\n    [theme.breakpoints.down('sm')]: {\n      paddingTop: theme.spacing(4),\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      borderRadius: theme.spacing(5),\n    },\n  },\n  container: {\n    backgroundColor: theme.palette.grisclaro,\n    height: window.innerHeight,\n  },\n}));\n\n\nconst LoginView = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n  return (\n    \n    <Box\n      display=\"flex\"\n      flexDirection=\"column\"\n      justifyContent=\"center\"\n      className={classes.container}\n    >\n      <Container maxWidth=\"sm\" className={classes.form} >\n        <Formik\n          initialValues={{\n            email: '',\n            password: ''\n          }}\n          validationSchema={Yup.object().shape({\n            email: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\n            password: Yup.string().max(255).required('La contraseña es requerida')\n          })}\n          onSubmit={(values, actions) => {\n            console.log({\"email\":values.email,\"password\":values.password});\n            axios.post(\"https://rosev0-dev-api.myfuture.ai/auth/login/\",\n              {\"email\":values.email,\"password\":values.password}\n            ).then(r=>{\n              console.log(r);\n              props.actualizarUser({\n                nombre:r.data.username,\n                correo: r.data.email,\n                response: r,\n              });\n              history.push('/WelcomePage');\n            }).catch(r=>{console.log(r);history.push('/');});\n            \n          }}\n        >\n          {({\n            errors,\n            handleBlur,\n            handleChange,\n            handleSubmit,\n            isSubmitting,\n            touched,\n            values\n          }) => (\n            <form onSubmit={handleSubmit} >\n              <Box mb={3}>\n                <img src={rosee} alt=\"rose\" width=\"100%\"/>\n              </Box>\n              <TextField\n                error={Boolean(touched.email && errors.email)}\n                fullWidth\n                helperText={touched.email && errors.email}\n                label=\"Correo\"\n                margin=\"normal\"\n                name=\"email\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"email\"\n                value={values.email}\n                variant=\"outlined\"\n              />\n              <TextField\n                error={Boolean(touched.password && errors.password)}\n                fullWidth\n                helperText={touched.password && errors.password}\n                label=\"Contraseña\"\n                margin=\"normal\"\n                name=\"password\"\n                onBlur={handleBlur}\n                onChange={handleChange}\n                type=\"password\"\n                value={values.password}\n                variant=\"outlined\"\n              />\n              <Box my={2}>\n                <Button\n                  color=\"primary\"\n                  disabled={isSubmitting}\n                  fullWidth\n                  size=\"large\"\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Ingresar\n                </Button>\n              </Box>\n              <Box\n                mt={3}\n                mb={1}\n              >\n                <Typography\n                  align=\"center\"\n                  color=\"textSecondary\"\n                  variant=\"body1\"\n                >\n                  o ingresa con\n                </Typography>\n              </Box>\n              <Grid\n                container\n                spacing={3}\n              >\n                <Grid\n                  item\n                  xs={2}\n                  md={4}\n                ></Grid>\n                <Grid\n                  item\n                  xs={4}\n                  md={2}\n                >\n                  <MicroSoft actualizarUser={props.actualizarUser}/>\n                </Grid>\n                \n                <Grid\n                  item\n                  xs={4}\n                  md={2}\n                >\n                  <Google actualizarUser={props.actualizarUser}/>\n                </Grid>\n                <Grid\n                  item\n                  xs={2}\n                  md={4}\n                ></Grid>\n              </Grid>\n              \n            </form>\n          )}\n        </Formik>\n      </Container>\n    </Box>\n  );\n};\n\nconst EnlaceRegistro = (props) => {\n  return(\n    <Typography\n      color=\"textSecondary\"\n      variant=\"body1\"\n    >\n      ¿No tienes cuenta?\n      {' '}\n      <Link\n        component={RouterLink}\n        to=\"/registro\"\n        variant=\"h6\"\n      >\n        Registrate\n      </Link>\n    </Typography>\n  );\n}\nconst actualizarUsuario = (usuario) => {\n  return {\n    type: 'ACTUALIZAR_USUARIO',\n    usuario: usuario,\n  }\n}\n\n\nconst mapStateToProps = estado => {\n  return {\n    usuario: estado.usuario,\n  }\n}\n\nconst mapDispatchToProps = despachar => {\n    return {\n        actualizarUser: (usuario) => despachar(actualizarUsuario(usuario)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);\n\n","/app/frontend/src/auth/RegisterView.js",[],"/app/frontend/src/rose/Microsoft.js",[],"/app/frontend/src/componentes/account/index.js",["255"],"import React from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../Page';\nimport Profile from './Profile';\nimport Detalles from './Detalles';\nimport Contenedor from '../../contenedor';\nimport { connect } from 'react-redux';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(7)\n  }\n}));\n\nconst Perfil = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Page\n      \n      title=\"Account\"\n    >\n      <Contenedor>\n        <Grid\n          container\n          spacing={3}\n          className={classes.root}\n        >\n          <Grid\n            item\n            lg={4}\n            md={6}\n            xs={12}\n          >\n            <Profile usuario={props.usuario} />\n          </Grid>\n          <Grid\n            item\n            lg={8}\n            md={6}\n            xs={12}\n          >\n            <Detalles usuario={props.usuario} configuracion={props.configuracion} despachar={props.dispatch}/>\n          </Grid>\n        </Grid>\n      </Contenedor>\n    </Page>\n  );\n};\n\nconst mapStateToProps = estado => {\n  return {\n    usuario: estado.usuario,\n    configuracion: estado.configuracion,\n  }\n}\nconst mapDispatchToProps = despachar => {\n    return {\n        dispatch: (i) => despachar(i),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Perfil);","/app/frontend/src/rose/Msal.js",[],"/app/frontend/src/componentes/Page.js",[],"/app/frontend/src/rose/Google.js",[],"/app/frontend/src/componentes/account/Detalles.js",["256"],"import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography,\n  Divider,\n  Grid,\n  TextField,\n  makeStyles\n} from '@material-ui/core';\nimport axios from 'axios';\n\n\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst Detalles = ({ usuario, configuracion, despachar, className, ...rest }) => {\n  const classes = useStyles();\n  const [values, setValues] = useState({\n    threshold: configuracion.threshold,\n    timezone: configuracion.timezone,\n    primarycolor: configuracion.primary_color===undefined ? '' : configuracion.primary_color,\n    secondarycolor: configuracion.secondary_color===undefined ? '' : configuracion.secondary_color,\n  });\n\n  const handleChange = (event) => {\n    setValues({\n      ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const actualizarColores = () => {\n    axios.post(\"https://rosev0-dev-api.myfuture.ai/selection/colors/\",\n      {\"primary_color\":values.primarycolor,\"secondary_color\":values.secondarycolor,\"user_mail\":usuario.correo}\n    ).then(r=>{\n      console.log(r);\n      despachar({\n        type: 'CARGAR_CONFIGURACION',\n        newState: Object.assign({},configuracion,{primary_color:values.primarycolor,secondary_color:values.secondarycolor}),\n      });\n    }).catch(r=>{console.log(r);});\n  }\n\n  return (\n    <form\n      autoComplete=\"off\"\n      noValidate\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <Card>\n        <CardHeader\n          subheader=\"Colores e información de cuenta\"\n          title=\"Perfil\"\n        />\n        <Divider />\n        <CardContent>\n          <Grid\n            container\n            spacing={3}\n          >\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography variant=\"h6\">\n                {\"Treshold: \"}{configuracion.threshold}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <Typography variant=\"h6\">\n                {\"Zona Horaria: \"}{configuracion.timezone}\n              </Typography>\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Color primario\"\n                name=\"primarycolor\"\n                onChange={handleChange}\n                required\n                value={values.primarycolor}\n                variant=\"outlined\"\n              />\n            </Grid>\n            <Grid\n              item\n              md={6}\n              xs={12}\n            >\n              <TextField\n                fullWidth\n                label=\"Color secundario\"\n                name=\"secondarycolor\"\n                onChange={handleChange}\n                value={values.secondarycolor}\n                variant=\"outlined\"\n              />\n            </Grid>\n            \n          </Grid>\n        </CardContent>\n        <Divider />\n        <Box\n          display=\"flex\"\n          justifyContent=\"flex-end\"\n          p={2}\n        >\n          <Button\n            color=\"primary\"\n            variant=\"contained\"\n            onClick={actualizarColores}\n          >\n            Actualizar colores\n          </Button>\n        </Box>\n      </Card>\n    </form>\n  );\n};\n\nexport default Detalles;\n","/app/frontend/src/componentes/account/Profile.js",["257","258","259"],"import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport {\n  Avatar,\n  Box,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  Divider,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport { uploadFile } from 'react-s3';\n\nconst config = (mail) => {\n  return {\n    bucketName: 'rosev0',\n    dirName: mail, \n    region: 'us-east-2',\n    accessKeyId: 'AKIA5XKDKZ4KRSBLKVGI',\n    secretAccessKey: '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',\n  }\n}\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    height: 100,\n    width: 100\n  }\n}));\n\nconst Profile = ({ usuario, className, ...rest }) => {\n  const classes = useStyles();\n  const logo = useRef();\n  var email_cambiado = usuario.correo.replace(\"@\",\"_\");\n  const booleano = logo !== undefined;\n  const subir = (e) => {\n    const st = email_cambiado + \"/icono\";\n    const configu = config(st);\n    uploadFile(logo.current.files[0],configu)\n    .then(e=>{\n      console.log(\"Subido\",logo.current.files[0].name);\n    })\n    .catch(e=>{\n      console.log(\"Error\",logo.current.files[0].name);\n    });\n  }\n  return (\n    <Card\n      className={clsx(classes.root, className)}\n      {...rest}\n    >\n      <CardContent>\n        <Box\n          alignItems=\"center\"\n          display=\"flex\"\n          flexDirection=\"column\"\n        >\n          <Avatar\n            className={classes.avatar}\n          />\n          <Typography\n            color=\"textPrimary\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {usuario.nombre}\n          </Typography>\n          <Typography\n            color=\"textSecondary\"\n            variant=\"body1\"\n          >\n            {usuario.correo}\n          </Typography>\n        </Box>\n      </CardContent>\n      <Divider />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"text\"\n          component=\"label\"\n        >\n          Actualizar imagen\n          <input\n            type=\"file\"\n            name=\"file\"\n            multiple=\"multiple\"\n            hidden\n            ref={logo}\n            onChange={subir}\n          />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n};\n\nconst Cargarimagen = (logo) => {\n  return(\n    <Button\n      color=\"primary\"\n      fullWidth\n      variant=\"text\"\n      component=\"label\"\n    >\n      Actualizar imagen\n      <input\n        type=\"file\"\n        name=\"file\"\n        multiple=\"multiple\"\n        hidden\n        ref={logo}\n      />\n    </Button>\n  );\n}\n\nProfile.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Profile;\n","/app/frontend/src/contenedor/index.js",[],"/app/frontend/src/contenedor/TopBar.js",[],"/app/frontend/src/contenedor/NavBar/index.js",[],"/app/frontend/src/contenedor/NavBar/NavItem.js",["260"],"import React from 'react';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport {\n  Button,\n  ListItem,\n  makeStyles\n} from '@material-ui/core';\nimport { Icon } from '@fluentui/react/lib/Icon';\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  button: {\n    color: theme.palette.text.secondary,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    paddingLeft: theme.spacing(3),\n    textTransform: 'none',\n    width: '100%',\n    '&:hover':{\n      color: theme.palette.text.primary,\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(1)\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.primary.main,\n    '& $title': {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    '& $icon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nconst useStylesresp = makeStyles((theme) => ({\n  item: {\n    display: 'flex',\n    paddingTop: 0,\n    paddingBottom: 0,\n  },\n  button: {\n    color: theme.palette.primary.main,\n    backgroundColor: theme.palette.roseclaro,\n    fontWeight: theme.typography.fontWeightMedium,\n    justifyContent: 'flex-start',\n    letterSpacing: 0,\n    padding: '10px 8px',\n    paddingLeft: theme.spacing(3),\n    margin: theme.spacing(0),\n    textTransform: 'none',\n    width: '100%',\n    borderRadius: theme.spacing(1),\n    '&:hover':{\n      color: theme.palette.roseclaro,\n      backgroundColor:theme.palette.primary.main,\n    },\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n\n    paddingLeft: theme.spacing(3),\n  },\n  title: {\n    marginRight: 'auto'\n  },\n  active: {\n    color: theme.palette.secondary.main,\n    '&:hover':{\n      color: theme.palette.secondary.dark,\n    },\n    '& $title': {\n      fontWeight: theme.typography.fontWeightBold,\n      color: theme.palette.secondary.dark,\n    },\n    '& $icon': {\n      color: theme.palette.secondary.dark,\n    }\n  }\n}));\n\nconst NavItem = ({\n  className,\n  href,\n  icon,\n  title,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <ListItem\n      className={clsx(classes.item, className)}\n      disableGutters\n      {...rest}\n    >\n      <Button\n        activeClassName={classes.active}\n        className={classes.button}\n        component={RouterLink}\n        to={href}\n        startIcon={<Icono nombre={icon} />}\n      >\n        <span className={classes.title}>\n          {title}\n        </span>\n      </Button>\n    </ListItem>\n  );\n};\n\nconst Icono = ({ nombre }) => {\n  return(\n    <Icon style={{\n      transform: 'scale(1.5)' // Tune it\n    }} iconName={nombre}  />\n  );\n}\n\nNavItem.propTypes = {\n  className: PropTypes.string,\n  href: PropTypes.string,\n  icon: PropTypes.elementType,\n  title: PropTypes.string\n};\n\nexport default NavItem;\n","/app/frontend/src/vistas/WelcomePage.js",[],"/app/frontend/src/vistas/ViewProcessMail.js",[],"/app/frontend/src/vistas/ViewProcessCalendar.js",[],"/app/frontend/src/vistas/ViewProcess.js",[],"/app/frontend/src/vistas/Process.js",["261","262"],"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Contenedor from '../contenedor';\nimport {\n  Grid,\n} from '@material-ui/core';\nimport Tabla from '../componentes/table/Procesos';\nimport Boton from '../componentes/Boton';\nimport { NATabla, NATarjeta } from '../componentes/NA';\nimport { DescargaExcelProcesos } from '../componentes/downloads/DescargaExcel';\n\n\nconst Dashboard = (props) => {\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\n  const columnas = {\n    \"name\": { titulo: \"Nombre\", color: \"primary\", tamano: \"h6\", link: true, href: \"/ViewProcess\" },\n    \"created_at\": { titulo: \"Creado\", color: \"textPrimary\", tamano: \"body2\", link: false, },\n    \"status\": { titulo: \"Status\", color: \"textHint\", tamano: \"subtitle2\", link: false, },\n    \"low\": { titulo: \"Below\", color: \"textPrimary\", tamano: \"caption\", link: false, },\n    \"medium\": { titulo: \"Normal\", color: \"textPrimary\", tamano: \"caption\", link: false, },\n    \"high\": { titulo: \"Outstanding\", color: \"textPrimary\", tamano: \"caption\", link: false, },\n    \"edit\": { titulo: \"Editar\", color: \"secondary\", tamano: \"h6\", link: true, href: \"/EditProcess\" },\n  };\n  const columnasExcel = Object.keys(columnas).map(col => ({ label: columnas[col].titulo, value: col }));\n  const procesosSeleccionados = idSeleccionados.length === 0\n    ? []\n    : props.procesos.filter((process, index) => (\n      idSeleccionados.includes(process.id)).map(item => ({\n        name: item.name,\n        created_at: item.created_at,\n        status: item.status,\n        low: item.kpis.low,\n        medium: item.kpis.medium,\n        high: item.kpis.high\n      }))\n    )\n  \n\n  const [filtrados, definirFiltrados] = useState([]);\n  const Filtrar = (filtros, data) => {\n    var salida = data;\n    var aux = [];\n    for (let filtro of filtros) {\n      var indice = 0;\n      for (let elemento of data) {\n        if(elemento[filtro.variable].includes(filtro.valor)){\n          aux.push(indice);\n        }\n        indice = indice + 1;\n      }\n      salida = salida.filter((i,index)=>aux.includes(index));\n      aux = [];\n    }\n    console.log(salida);\n    definirIdSeleccionados([]);\n    return salida;\n  }\n  useEffect(()=>{\n    const f = Filtrar(props.filtros,props.procesos);\n    definirFiltrados(f);\n  },[props.filtros]);\n  return (\n    \n        <Grid\n          container\n          spacing={3}\n        >\n          <Grid\n            item\n            xs={12}\n          >\n          {props.procesos === null ?\n            <>\n              <NATarjeta extendida={false} mensaje={\"Sin registros, no disponible\"} sizes={{mensaje:\"h6\"}}>\n                <NATabla  columnas={columnas} />\n              </NATarjeta>\n            </>\n          :\n            <Tabla filtros={props.filtros} anadirFiltro={props.anadirFiltro} eliminarFiltro={props.eliminarFiltro} data={filtrados} columnas={columnas} idSeleccionados={idSeleccionados} definirIdSeleccionados={definirIdSeleccionados} seleccionarProceso={seleccionarProceso}/>\n          }\n          </Grid>\n\n          <Grid\n            item\n            \n            xs={6}\n            md={6}\n            sm={4}\n            lg={3}\n          ></Grid>\n          <Grid\n            item\n            \n            xs={6}\n            md={6}\n            sm={4}\n            lg={3}\n          >\n            <Boton nombre={\"Nuevo Proceso\"} href={\"/AddProcess\"} color={\"secondary\"} icon={\"CircleAddition\"}/>\n          </Grid>\n          <Grid\n            item\n            xs={6}\n            md={6}\n            sm={4}\n            lg={3}\n          >\n            <DescargaExcelProcesos\n              boton={\n                <Boton \n                  desactivado={props.procesos === null && idSeleccionados.length === 0} \n                  nombre={\"Exportar Excel\"} \n                  href={\"#\"} \n                  color={\"secondary\"} \n                  icon={\"ExcelDocument\"}\n                />\n              }\n              columnas={columnasExcel}\n              data={procesosSeleccionados}\n\n            />\n              \n            \n          </Grid>\n          \n        </Grid>\n  );\n};\n\nconst Process = (props) => {\n  \n  return (\n    <Contenedor>\n      <Dashboard procesosExportarExcel={props.procesosExportarExcel} procesos_exportar_excel={props.procesos_exportar_excel}\n      procesos={props.procesos} filtros={props.filtros} anadirFiltro={props.anadirFiltro} eliminarFiltro={props.eliminarFiltro}/>\n    </Contenedor>\n  );\n}\nconst seleccionarProceso = (newIndex) => {\n  return {\n    type: 'SELECCIONAR_PROCESO',\n    newIndex: newIndex,\n  }\n}\nconst anadirFiltro = (nuevoFiltro) => {\n  return {\n    type: 'ANADIR_FILTRO',\n    nuevoFiltro: nuevoFiltro,\n  }\n}\n\nconst eliminarFiltro = (index) => {\n  return {\n    type: 'ELIMINAR_FILTRO',\n    indice: index,\n  }\n}\nconst procesosExportarExcel = (newState) => {\n  return {\n    type: 'DEFINIR_PROCESOS_EXPORTAR_EXCEL',\n    newIndex: newState,\n  }\n}\n\nconst mapStateToProps = estado => {\n  return {\n    procesos: estado.procesos.map((i,index)=>(Object.assign({},i,{index:index}))),\n    procesos_exportar_excel: estado.procesos_exportar_excel,\n    filtros: estado.filtrosprocesos.map((i,index)=>(Object.assign({},i,{index:index}))),\n  }\n}\n\nconst mapDispatchToProps = despachar => {\n    return {\n        procesosExportarExcel: (newState) => despachar(procesosExportarExcel(newState)),\n        anadirFiltro: (nuevoFiltro) => despachar(anadirFiltro(nuevoFiltro)),\n        eliminarFiltro: (index) => despachar(eliminarFiltro(index)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Process);","/app/frontend/src/vistas/Login.js",[],"/app/frontend/src/vistas/HelpTutorials.js",[],"/app/frontend/src/vistas/Historic.js",["263","264","265"],"import React, { useState } from 'react';\nimport Contenedor from '../contenedor';\nimport { KPI3 as KPI } from '../componentes/KPI';\nimport Boton from '../componentes/Boton';\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\nimport { Grid } from '@material-ui/core';\nimport { DescargaExcelHistorico } from '../componentes/downloads/DescargaExcel';\nimport Tabla from '../componentes/table/Historico';\nimport { NAHistoric } from '../componentes/NA';\nimport { TablaEstilo } from '../estilo/Estilo';\nimport { connect } from 'react-redux';\nimport { Icon } from '@fluentui/react/lib/Icon';\n\nimport { DataGrid } from '@material-ui/data-grid';\n\nconst d = {\n  \"data\": [\n    {\n      \"id\": 1528,\n      \"created_at\": \"2020-12-30T15:02:49.358279-03:00\",\n      \"updated_at\": \"2020-12-30T15:02:49.358362-03:00\",\n      \"name\": \"DANIEL ENRIQUE FARIAS ARAVENA\",\n      \"mail\": \"dan.fariasa@alumnos.duoc.cl\",\n      \"info\": {\n        \"data\": {\n          \"exp\": 7,\n          \"mail\": [\n            \"dan.fariasa@alumnos.duoc.cl\"\n          ],\n          \"type\": [\n            \"Técnico\"\n          ],\n          \"phone\": [\n            \"+56933993898 - 232189552\"\n          ],\n          \"degree\": [\n            \"analista programador computacional con conocimientos en desarrollo en java aplicándolo tanto en ide netbeans como\",\n            \"tecnico de nivel medio en telecomunicaciones\",\n            \"ing. en informatica\",\n            \"analista programador computacional\"\n          ],\n          \"idioms\": [\n            \"inglés ( intermedio )\",\n            \"inglés medio ( intermedio )\"\n          ],\n          \"skills\": [\n            \"wpf, windows form, metroframework, mvc.net, entity framework, linq,wcf services), motor de base de datos como oracle (pl/sql), mysql, sqlserver(transact-sql\"\n          ],\n          \"college\": [\n            \"duoc uc\"\n          ],\n          \"location\": [\n            \"La Pintana, La Pintana\"\n          ],\n          \"companies\": [\n            \"SHIFT SPA\",\n            \"DEIRA COMPUTACIÓN Y SERVICIOS\"\n          ],\n          \"graduation\": [\n            \"2015\",\n            \"2017\"\n          ],\n          \"designation\": [\n            \"ayudante de proyectos\",\n            \"analista  programador\"\n          ],\n          \"certficiations\": []\n        },\n        \"rank\": 4.9\n      },\n      \"selection\": 66\n    },\n    {\n      \"id\": 1529,\n      \"created_at\": \"2020-12-30T15:02:49.562702-03:00\",\n      \"updated_at\": \"2020-12-30T15:02:49.562850-03:00\",\n      \"name\": \"Desconocido\",\n      \"mail\": \"fernandez.chl@gmail.com\",\n      \"info\": {\n        \"data\": {\n          \"exp\": 10,\n          \"mail\": [\n            \"fernandez.chl@gmail.com\"\n          ],\n          \"type\": [\n            \"-\"\n          ],\n          \"phone\": [\n            \"+56966877041\"\n          ],\n          \"degree\": [\n            \"ingeniría civil informática\"\n          ],\n          \"idioms\": [\n            \"back-end developer, beetrack, santiago, chile.\\n\",\n            \"español nativo\",\n            \"inglés\",\n            \"intermedio (hablado y escrito\"\n          ],\n          \"skills\": [\n            \"system administrator\",\n            \"conocimientos informáticos\",\n            \"ruby on rails, react, docker, capistrano, circleci, aws (s3, ec2, ecs, ecr, eb\",\n            \"web\",\n            \"sistemas linux, osx\",\n            \"complementario\"\n          ],\n          \"college\": [\n            \"universidad técnica federico santa maría\"\n          ],\n          \"location\": [],\n          \"companies\": [],\n          \"graduation\": [],\n          \"designation\": [\n            \"software developer\"\n          ],\n          \"certficiations\": []\n        },\n        \"rank\": 6.5\n      },\n      \"selection\": 66\n    },\n    {\n      \"id\": 1530,\n      \"created_at\": \"2020-12-30T15:02:49.768156-03:00\",\n      \"updated_at\": \"2020-12-30T15:02:49.768248-03:00\",\n      \"name\": \"Patricio Antonio Cabrera Vera\",\n      \"mail\": \"​patriciocabreravera@gmail.com\",\n      \"info\": {\n        \"data\": {\n          \"exp\": 3,\n          \"mail\": [\n            \"​patriciocabreravera@gmail.com\"\n          ],\n          \"type\": [\n            \"-\"\n          ],\n          \"phone\": [\n            \"+56 9 64755804\"\n          ],\n          \"degree\": [],\n          \"idioms\": [],\n          \"skills\": [\n            \"windows,linux (preferentemente linux mint/ubuntu)\",\n            \"jquery: manejo avanzado de jquery y vainilla js\",\n            \"mysql. postgresql, sqlserver (2008), mongo db, amazon rds, mongo db, firebase real time\",\n            \"graphql\",\n            \"lenguajes de programación: python,c++,javascript,php,c#,ruby,typescript\"\n          ],\n          \"college\": [],\n          \"location\": [\n            \"Ignacio Carrera Pinto 4666 depto 2, Macul\"\n          ],\n          \"companies\": [\n            \"Go Technology\",\n            \"Sáltala\",\n            \"Redcapital\",\n            \"GIT\"\n          ],\n          \"graduation\": [],\n          \"designation\": [],\n          \"certficiations\": []\n        },\n        \"rank\": 3.8\n      },\n      \"selection\": 66\n    },\n  ],\n} \n\nconst historicData = [\n  {\n    id: 1,\n    ciudad: \"Stgo, Chile\",\n    email: \"bgonzalez@myfuture.ai\",\n    nombre: \"Benjamín González\",\n    profesion: \"Ing. Civil Industrial mención TI\",\n    universidad: \"Universidad Adolfo Ibáñez\",\n  },\n  {\n    id: 2,\n    ciudad: \"Viña del mar, Chile\",\n    email: \"catamuñoz@myfuture.ai\",\n    nombre: \"Catalina Muñoz\",\n    profesion: \"Ing. Civil Industrial mención TI\",\n    universidad: \"Universidad Adolfo Ibáñez\",\n  },\n  {\n    id: 3,\n    ciudad: \"Stgo, Chile\",\n    email: \"fermaldonado@myfuture.ai\",\n    nombre: \"Fernanda Maldonado\",\n    profesion: \"Ing. Civil Industrial mención TI\",\n    universidad: \"Universidad Adolfo Ibáñez\",\n  },\n];\nconst Historic = (props) => {\n  const columnas = {\n    \"nombre\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:false},\n    \"profesion\":{titulo:\"Profesion\",color:\"textPrimary\",tamano:\"body2\",link:false, },\n    \"universidad\":{titulo:\"Universidad\",color:\"textPrimary\",tamano:\"body2\",link:false, },\n    \"email\":{titulo:\"Email\",color:\"textPrimary\",tamano:\"caption\",link:false, },\n    \"ciudad\":{titulo:\"Ciudad\",color:\"textPrimary\",tamano:\"caption\",link:false, },\n  };\n  return (\n    <>\n      {historicData===null ? \n        <Contenedor>\n          <NAHistoric mensaje={\"Sin registros, no disponible\"} columnas={columnas}>\n            <Boton nombre={\"Exportar Excel\"} desactivado={true} href={\"#\"} icon={\"ExcelDocument\"}/>\n          </NAHistoric>\n        </Contenedor>\n      :\n        <Contenido configuracion={props.configuracion} />\n      }\n    </>\n  );\n}\n\n\nconst Contenido = (props) => {\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\n  const columnas = {\n    \"nombre\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:false},\n    \"profesion\":{titulo:\"Profesion\",color:\"textPrimary\",tamano:\"body2\",link:false, },\n    \"universidad\":{titulo:\"Universidad\",color:\"textPrimary\",tamano:\"body2\",link:false, },\n    \"email\":{titulo:\"Email\",color:\"textPrimary\",tamano:\"caption\",link:false, },\n    \"ciudad\":{titulo:\"Ciudad\",color:\"textPrimary\",tamano:\"caption\",link:false, },\n  };\n  var cont = document.getElementById(\"contenedor\");\n  const icono = <Icon style={{\n      transform: 'scale(3)',\n      color:\"white\", // Tune it\n    }} iconName={\"PlannerLogo\"}  />;\n  console.log(cont);\n  const colu = [\n    { field: 'nombre', headerName: 'Nombre', flex: 1 },\n    { field: 'profesion', headerName: 'Profesion', flex: 1 },\n    { field: 'universidad', headerName: 'Universidad', flex: 1 },\n    { field: 'email', headerName: 'Email', flex: 1 },\n    { field: 'ciudad', headerName: 'Ciudad', flex: 1 },\n  ];\n  const columns = colu.map(i=>Object.assign({},i));\n  const columnasExcel = Object.keys(columnas).map(col => ({label:columnas[col].titulo,value:col}));\n  const candidatosSeleccionados = idSeleccionados.length === 0 ? [] : historicData.filter((i,index)=>idSeleccionados.includes(index)).map(i=>({nombre:i.nombre,profesion:i.profesion,universidad:i.universidad,email:i.email,ciudad:i.ciudad}));\n  \n  const onSelectionChange = (e) => {\n    definirIdSeleccionados(e.rowIds.map(i=>Number(i)-1));\n  }\n\n  return (\n    <Contenedor>\n    <div id=\"contenedor\">\n      <Grid\n          container\n          spacing={3}\n          \n        >\n          <Grid\n            item\n            \n            xs={5}\n            md={4}\n            sm={4}\n            lg={3}\n          >\n          \t<KPI nombre={\"Cantidad de candidatos total\"} cantidad={historicData.length} icon={icono}/>\n          </Grid>\n          <Grid\n            item\n            \n            xs={2}\n            md={4}\n            sm={4}\n            lg={6}\n          ></Grid>\n          <Grid\n            item\n            xs={5}\n            md={4}\n            sm={4}\n            lg={3}\n          >\n            <DescargaExcelHistorico\n                boton={<Boton nombre={\"Exportar Excel\"} href={\"#\"} color={\"secondary\"} desactivado={idSeleccionados.length === 0} icon={\"ExcelDocument\"}/>}\n                columnas={columnasExcel}\n                data={candidatosSeleccionados}\n\n              />\n            \n          </Grid>\n          <Grid\n            item\n            xs={12}\n            style={{height:\"300px\"}}\n          >\n            <TablaEstilo configuracion={props.configuracion}>\n            \n              <DataGrid onSelectionChange={onSelectionChange}\n              columns={columns} pageSize={5} autoHeight rows={historicData} checkboxSelection />\n            </TablaEstilo>\n          </Grid>\n          \n          \n        </Grid>\n      </div>\n    </Contenedor>\n  );\n}\n\nconst mapStateToProps = estado => {\n  return {\n    configuracion: estado.configuracion,\n  }\n}\n\nconst mapDispatchToProps = despachar => {\n    return {\n        \n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Historic);","/app/frontend/src/vistas/Help.js",["266","267"],"import React, { useState } from 'react';\nimport Contenedor from '../contenedor';\nimport Boton from '../componentes/Boton2';\nimport Editor from '../componentes/Editor';\nimport { EditorState } from 'draft-js';\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\nimport { \n  Card,\n  Button,\n  CardContent,\n  Grid,\n  makeStyles,\n  TextField,\n  Typography\n  } from '@material-ui/core';\nimport Youtube from 'react-youtube';\nimport { connect } from 'react-redux';\nimport { NAHelp } from '../componentes/NA';\n\nconst Help = (props) => {\n  const [tutorial, setTutorial] = useState(true);\n  const irTutoriales = () => {\n  \tsetTutorial(true);\n  \tconsole.log(tutorial);\n  }\n  const irIssues = () => {\n  \tsetTutorial(false);\n  \tconsole.log(tutorial);\n  }\n  return (\n    <Contenedor>\n    \t<Grid container>\n    \t\t<Grid item xs={12}>\n    \t\t\t<Grid container spacing={2}>\n    \t\t\t\t<Grid item xs={3}></Grid>\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Ver Tutoriales\"} desactivado={props.tutoriales === null} href={\"#\"} clickear={irTutoriales} /></Grid>\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Crear Incidencia\"} href={\"#\"} clickear={irIssues} /></Grid>\n    \t\t\t\t<Grid item xs={3}></Grid>\n    \t\t\t</Grid>\n    \t\t</Grid>\n    \t\t<Grid item xs={12}>\n    \t\t\t{tutorial ? \n            <>{props.tutoriales === null ?\n              <NAHelp mensaje=\"Tutoriales no disponibles\"/>\n            :\n              <Tutoriales tutoriales={props.tutoriales}/> \n            }</>\n          : <Issue />}\n    \t\t</Grid>\n    \t</Grid>\n    </Contenedor>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(3),\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: theme.palette.grisoscuro,\n  },\n  nombre: {\n    paddingTop: theme.spacing(5),\n  },\n  descripcion: {\n    paddingTop: theme.spacing(4),\n\n  },\n}));\n\nconst Tutoriales = ({ className, tutoriales }) => {\n  const classes = useStyles();\n  const youtube_options = {\n    height: '360',\n    width: '600',\n    playerVars: {\n      // https://developers.google.com/youtube/player_parameters\n      autoplay: 1,\n    },\n  };\n  const data = tutoriales.data;\n  console.log(\"Tuto\",data);\n  const getVideoId = (string) =>{\n    const separador = 'https://www.youtube.com/watch?v=';\n    return string.split(separador)[1];\n  };\n  const _onReady = (event) => {\n    // access to player in all event handlers via event.target\n    event.target.pauseVideo();\n  };\n\n  return (\n    <Grid container className={classes.root}>\n      <Grid item xs={12}>\n        <Card\n          className={classes.card}\n        >\n          <CardContent>\n            <Typography\n              align=\"center\"\n              gutterBottom\n              variant=\"h1\"\n            >\n              {\"Tutoriales\"}\n            </Typography>\n          </CardContent>\n          {tutoriales !== null ? \n            <>\n            {data.map((i,index)=>(\n              <CardContent>\n                <Grid container>\n                  <Grid item xs={6}>\n                    <Youtube\n                      videoId={getVideoId(i.value)}\n                      opts={youtube_options}\n                      onReady={_onReady}\n                    />\n                  </Grid>\n                  <Grid item xs={1}>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Grid container>\n                      <Grid item xs={12}>\n                        <Typography\n                          align=\"center\"\n                          color=\"textPrimary\"\n                          variant=\"h5\"\n                          className={classes.nombre}\n                        >\n                          {i.name}\n                        </Typography>\n                      </Grid>\n                      <Grid item xs={12}>\n                        <Typography\n                          align=\"center\"\n                          color=\"textPrimary\"\n                          variant=\"body1\"\n                          className={classes.descripcion}\n                        >\n                          {i.description}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  <Grid item xs={2}></Grid>\n                </Grid>\n              </CardContent>\n            ))}</>\n          :\n            <>\"Tutoriales aún no cargados\"</>\n          }\n          <CardContent>\n            <Grid container>\n              <Grid item xs={6}>\n                <Youtube\n                  videoId={\"I-1oJnmr6nk\"}\n                  opts={youtube_options}\n                  onReady={_onReady}\n                />\n              </Grid>\n              <Grid item xs={1}>\n              </Grid>\n              <Grid item xs={4}>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"h5\"\n                      className={classes.nombre}\n                    >\n                      {\"Un tema\"}\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={12}>\n                    <Typography\n                      align=\"center\"\n                      color=\"textPrimary\"\n                      variant=\"body1\"\n                      className={classes.descripcion}\n                    >\n                      {\"Para distraerse\"}\n                    </Typography>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={2}></Grid>\n            </Grid>\n          </CardContent>\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\n\n\nconst Issue = (props) => {\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\n  const html = convertToHTML(editorState.getCurrentContent());\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n  \t<Grid container className={classes.root} spacing={3}>\n  \t\t<Grid item xs={1}></Grid>\n      <Grid item xs={10}>\n        <Card className={classes.card}>\n          <Formik\n            initialValues={{\n              titulo: '',\n              email: '',\n              modulo: '',\n            }}\n            validationSchema={Yup.object().shape({\n              titulo: Yup.string().max(255).required('Debe definir un titulo para el problema'),\n              email: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\n              modulo: Yup.string().max(255).required('Debe definir el módulo del error')\n            })}\n            onSubmit={(values, actions) => {\n              const data = {\n                \"name\":values.titulo,\n                \"user\":values.email,\n                \"module\":values.modulo,\n                \"code\":\"1\",\n                \"summary\":html\n              };\n              console.log(data);\n              axios.post(`https://rosev0-dev-api.myfuture.ai/selection/issues/create/`,data).then(r=>{\n                console.log(r);\n              }).catch(r=>{\n                console.log(r);\n              });         \n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit} >\n                <CardContent>\n            \t\t\t<Grid container spacing={3}>\n            \t\t\t\t<Grid item xs={6}>\n                      <TextField\n                        error={Boolean(touched.titulo && errors.titulo)}\n                        fullWidth\n                        helperText={touched.titulo && errors.titulo}\n                        label=\"Título del problema\"\n                        margin=\"normal\"\n                        name=\"titulo\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.titulo}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField\n                        error={Boolean(touched.email && errors.email)}\n                        fullWidth\n                        helperText={touched.email && errors.email}\n                        label=\"Email de contacto\"\n                        margin=\"normal\"\n                        name=\"email\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"email\"\n                        value={values.email}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField\n                        error={Boolean(touched.modulo && errors.modulo)}\n                        fullWidth\n                        helperText={touched.modulo && errors.modulo}\n                        label=\"Módulo del problema\"\n                        margin=\"normal\"\n                        name=\"modulo\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.modulo}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n            \t\t\t</Grid>\n                </CardContent>\n                <CardContent>\n                  <Editor editorState={editorState} setEditorState={setEditorState}/>\n                </CardContent>\n                <CardContent>\n                  <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                    {\"Crear incidencia\"}\n                  </Button>\n                </CardContent>\n              </form>\n            )}\n          </Formik>\n        </Card>\n  \t\t</Grid>\n      <Grid item xs={1}></Grid>\n  \t\t\n        \n  \t</Grid>\n  );\n}\n\nconst mapStateToProps = estado => {\n  return {\n    tutoriales: estado.tutoriales,\n  }\n}\nconst mapDispatchToProps = despachar => {\n    return {}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Help);","/app/frontend/src/vistas/Error.js",[],"/app/frontend/src/vistas/EditProcess.js",["268","269","270","271","272","273"],"import React, { useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Icon } from '@fluentui/react/lib/Icon';\nimport {\n  Box,\n  FormControlLabel,\n  Switch,\n  Badge,\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from '../componentes/Page';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport Contenedor from '../contenedor';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst AddProcess = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const [requirements_exp, setRequirements_exp] = useState(props.proceso[\"requirements\"][\"exp\"]);\n  const [requirements_idioms, setRequirements_idioms] = useState(props.proceso[\"requirements\"][\"idioms\"]);\n  const [requirements_skills, setRequirements_skills] = useState(props.proceso[\"requirements\"][\"skills\"]);\n  const [requirements_location, setRequirements_location] = useState(props.proceso[\"requirements\"][\"location\"]);\n  const [desired_exp, setDesired_exp] = useState(props.proceso[\"desired\"][\"exp\"]);\n  const [desired_skills, setDesired_skills] = useState(props.proceso[\"desired\"][\"skills\"]);\n  const [desired_college, setDesired_college] = useState(props.proceso[\"desired\"][\"college\"]);\n  const [desired_designation, setDesired_designation] = useState(props.proceso[\"desired\"][\"designation\"]);\n  const [desired_degree, setDesired_degree] = useState(props.proceso[\"desired\"][\"degree\"]);\n  return (\n    <Contenedor >\n      <Page\n        className={classes.root}\n        title=\"Add Process\"\n      >\n        <Box\n          display=\"flex\"\n          flexDirection=\"column\"\n          height=\"100%\"\n          justifyContent=\"center\"\n        >\n          <Container maxWidth=\"md\">\n            <Formik\n              initialValues={{\n                name: props.proceso[\"name\"],\n                description: props.proceso[\"description\"],\n                vacant: props.proceso[\"vacant\"],\n                \n                area: props.proceso[\"area\"],\n                subarea: props.proceso[\"subarea\"],\n                industry: props.proceso[\"industry\"],\n                is_remote: props.proceso[\"is_remote\"],\n                requirements_exp: props.proceso[\"requirements\"][\"exp\"],\n                desired_exp: props.proceso[\"desired\"][\"exp\"],\n                \n                \n                \n                \n              }}\n              validationSchema={\n                Yup.object().shape({\n                  name: Yup.string().max(255).required('Nombre es requerido'),\n                })\n              }\n              onSubmit={(values, actions) => {\n                \n                var payload = {\n                  \"name\": values.name,\n                  \"vacant\": values.vacant,\n                  \"description\": values.description,\n                  \"area\": values.area,\n                  \"subarea\": values.subarea,\n                  \"industry\": values.industry,\n                  \"is_remote\": values.is_remote,\n                  \"status\": props.proceso[\"status\"],\n                  \"requirements\":{\n                    \"exp\": values.requirements_exp,\n                    \"idioms\": requirements_idioms,\n                    \"skills\": requirements_skills,\n                    \"location\": requirements_location,\n                  },\n                  \"desired\":{\n                    \"exp\": values.desired_exp,\n                    \"skills\": desired_skills,\n                    \"college\": desired_college,\n                    \"designation\": desired_designation,\n                    \"degree\": desired_degree,\n                  },\n                  \"kpis\": props.proceso[\"kpis\"],\n                  \"storage_url\": props.proceso[\"storage_url\"],\n                  \"user\": props.proceso[\"user\"],\n                };\n                \n                console.log(payload);\n                axios.patch(`https://rosev0-dev-api.myfuture.ai/selection/${props.proceso[\"id\"]}/`,payload).then(r=>{\n                  console.log(r);\n                  history.push('/');\n                }).catch(r=>{\n                  console.log(r);\n                });\n                console.log(props.proceso);\n                \n                \n              }}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                isSubmitting,\n                touched,\n                values\n              }) => (\n                <form onSubmit={handleSubmit}>\n                  <Box mb={3}>\n                    <Typography\n                      color=\"textPrimary\"\n                      variant=\"h2\"\n                    >\n                      Editar Proceso\n                    </Typography>\n                    <Typography\n                      color=\"textSecondary\"\n                      gutterBottom\n                      variant=\"body2\"\n                    >\n                      Llena los campos\n                    </Typography>\n                  </Box>\n                  <Grid container direction=\"row\" spacing={3}>\n                    <Grid item xs={4}>\n                      <TextField\n                        error={Boolean(touched.name && errors.name)}\n                        fullWidth\n                        helperText={touched.name && errors.name}\n                        label=\"Nombre Proceso\"\n                        margin=\"normal\"\n                        name=\"name\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.name}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                      <TextField\n                        error={Boolean(touched.vacant && errors.vacant)}\n                        fullWidth\n                        helperText={touched.vacant && errors.vacant}\n                        label=\"Vacantes\"\n                        type=\"number\"\n                        margin=\"normal\"\n                        name=\"vacant\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.vacant}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={6}>\n                      <TextField\n                        error={Boolean(touched.description && errors.description)}\n                        fullWidth\n                        helperText={touched.description && errors.description}\n                        label=\"Descripción del proceso\"\n                        margin=\"normal\"\n                        name=\"description\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.description}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  </Grid>\n                  <Grid container direction=\"row\" spacing={3}>\n                    <Grid item xs={3}>\n                      <TextField\n                        error={Boolean(touched.area && errors.area)}\n                        fullWidth\n                        helperText={touched.area && errors.area}\n                        label=\"Área\"\n                        margin=\"normal\"\n                        name=\"area\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.area}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField\n                        error={Boolean(touched.subarea && errors.subarea)}\n                        fullWidth\n                        helperText={touched.subarea && errors.subarea}\n                        label=\"Subárea\"\n                        margin=\"normal\"\n                        name=\"subarea\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.subarea}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={4}>\n                      <TextField\n                        error={Boolean(touched.industry && errors.industry)}\n                        fullWidth\n                        helperText={touched.industry && errors.industry}\n                        label=\"Industria\"\n                        margin=\"normal\"\n                        name=\"industry\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        value={values.industry}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid xs={2}>\n                      <FormControlLabel\n                        control={<Switch checked={values.is_remote} onChange={handleChange} name=\"is_remote\" />}\n                        label=\"¿Es remoto?\"\n                        labelPlacement=\"top\"\n                      />\n\n                    </Grid>\n                  </Grid>\n                  <br/>\n                  <Grid container direction=\"row\" spacing={4}>\n                    <Grid item xs={4}>\n                      <Grid container direction=\"column\" spacing={3}>\n                        <Grid item>\n                          <Typography variant=\"h5\">Requisitos Mínimos</Typography>\n                        </Grid>\n                        \n                        <Grid item>\n                          <TextField\n                            error={Boolean(touched.requirements_exp && errors.requirements_exp)}\n                            fullWidth\n                            helperText={touched.requirements_exp && errors.requirements_exp}\n                            label=\"Experiencia mínima\"\n                            type=\"number\"\n                            margin=\"normal\"\n                            name=\"requirements_exp\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.requirements_exp}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n                        <Grid item>\n                          <ArrayInput data={requirements_idioms} set={setRequirements_idioms} label={\"Idiomas\"}/>\n                        </Grid>\n                        <Grid item>\n                          <ArrayInput data={requirements_skills} set={setRequirements_skills} label={\"Skills\"}/>\n                        </Grid>\n                        <Grid item>\n                          <ArrayInput data={requirements_location} set={setRequirements_location} label={\"Lugar\"}/>\n                        </Grid>\n                                              \n                      </Grid>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Grid container direction=\"column\" spacing={3}>\n                        <Grid item>\n                          <Typography variant=\"h5\">Requisitos Deseables</Typography>\n                        </Grid>\n                        <Grid item>\n                          <TextField\n                            error={Boolean(touched.desired_exp && errors.desired_exp)}\n                            fullWidth\n                            helperText={touched.desired_exp && errors.desired_exp}\n                            label=\"Experiencia deseada\"\n                            type=\"number\"\n                            margin=\"normal\"\n                            name=\"desired_exp\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            value={values.desired_exp}\n                            variant=\"outlined\"\n                          />\n                        </Grid>\n                        <Grid item>\n                          <ArrayInput data={desired_skills} set={setDesired_skills} label={\"Skills\"}/>\n                        </Grid>\n                        <Grid item>\n                          <ArrayInput data={desired_designation} set={setDesired_designation} label={\"Cargos\"}/>\n                        </Grid>\n                        <Grid item>\n                          <ArrayInput data={desired_college} set={setDesired_college} label={\"Universidades\"}/>\n                        </Grid>\n                        <Grid item>\n                          <ArrayInput data={desired_degree} set={setDesired_degree} label={\"Títulos\"}/>\n                        </Grid>\n                        \n                        \n                        \n                       \n                      </Grid>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3} >\n                        <Grid item>\n                          <Box my={2}>\n                            <Button\n                              color=\"primary\"\n                              disabled={false}\n                              style={{ \"min-height\": \"100px\" }}\n                              fullWidth\n                              size=\"large\"\n                              type=\"submit\"\n                              \n                              variant=\"contained\"\n                            >\n                              ¡Traeme a los mejores!\n                            </Button>\n                          </Box>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                  \n                </form>\n              )}\n            </Formik>\n          </Container>\n        </Box>\n      </Page>\n    </Contenedor>\n  );\n};\n\nconst ArrayInputNumber = ({ data, set, label }) => {\n  const [valor, setValor] = useState(1);\n  const definir = () => {\n    set([...data, Number(valor)]);\n    setValor(1);\n  }\n  const actualizar = (i) => {\n    setValor(data[i]);\n    set([...data.slice(0,i), ...data.slice(i+1)]);\n  }\n  const eliminar = (i) => {\n    set([...data.slice(0,i), ...data.slice(i+1)]);\n  }\n  const inputtext = (e) => {\n    e.preventDefault();\n    setValor(e.target.value);\n  }\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item xs={12}>\n        <Grid container direction=\"row\" spacing={0}>\n          <Grid item xs={10}>\n            <TextField variant=\"outlined\" label={label} type=\"number\" fullWidth value={valor} onChange={inputtext}/>\n          </Grid>\n          <Grid item xs={2}>\n            <IconButton onClick={definir}>\n              <Icono nombre={'CircleAdditionSolid'} />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container spacing={2}>\n          {data.map((i,index)=>(\n            <Grid item>\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\n              </Badge>\n            </Grid>\n          ))}\n          \n        </Grid>\n      </Grid>\n    </Grid>\n    \n  );\n}\n\nconst ArrayInput = ({ data, set, label }) => {\n  const [valor, setValor] = useState(\"\");\n  const definir = () => {\n    set([...data, valor.toLowerCase()]);\n    setValor(\"\");\n    console.log(data);\n  }\n  const actualizar = (i) => {\n    setValor(data[i]);\n    set([...data.slice(0,i), ...data.slice(i+1)]);\n  }\n  const eliminar = (i) => {\n    set([...data.slice(0,i), ...data.slice(i+1)]);\n  }\n  const inputtext = (e) => {\n    e.preventDefault();\n    setValor(e.target.value);\n  }\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item xs={12}>\n        <Grid container direction=\"row\" spacing={0}>\n          <Grid item xs={10}>\n            <TextField variant=\"outlined\" label={label} type=\"text\" fullWidth value={valor} onChange={inputtext}/>\n          </Grid>\n          <Grid item xs={2}>\n            <IconButton onClick={definir}>\n              <Icono nombre={'CircleAdditionSolid'} />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n      {data.length !== 0 && <Grid item xs={12}>\n        <Grid container spacing={2}>\n          {data.map((i,index)=>(\n            <Grid item>\n              <Badge color=\"primary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\n                <Button variant=\"contained\" color=\"secondary\" onClick={()=>actualizar(index)}>{i}</Button>\n              </Badge>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>} \n      \n        \n      \n    </Grid>\n    \n  );\n}\n\nconst Icono = ({ nombre }) => {\n  return(\n    <Icon style={{\n      transform: 'scale(1.5)' \n    }} iconName={nombre}  />\n  );\n}\n\nconst mapStateToProps = estado => {\n  return {\n    proceso: estado.procesos.filter(i=>i.id===estado.proceso)[0]\n  }\n}\n\nconst mapDispatchToProps = despachar => {\n    return {}\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProcess);","/app/frontend/src/componentes/NA.js",["274","275","276","277"],"import React, { useState } from 'react';\nimport {\n  Box,\n  Card,\n  CardContent,\n  Grid,\n  makeStyles,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Typography,\n} from '@material-ui/core';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { Icon } from '@fluentui/react/lib/Icon';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  \n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: theme.palette.grisoscuro,\n  },\n  root: {\n    height: '100%',\n    borderRadius: theme.spacing(4),\n    backgroundColor: theme.palette.secondary.light,\n\n  },\n  icono: {\n    paddingTop: theme.spacing(6),\n  },\n}));\n\nconst NAHistoric = ({mensaje,columnas,children}) => {\n  return (\n      <NATarjeta extendida={false} mensaje={mensaje} sizes={{mensaje:\"h6\"}}>\n        <Grid container spacing={3}>\n          <Grid item xs={5} md={4} sm={4} lg={3}>\n            <NAKPI2 />\n          </Grid>\n          <Grid item xs={2} md={4} sm={4} lg={6}></Grid>\n          <Grid item xs={5} md={4} sm={4} lg={3}>\n            {children}\n          </Grid>\n        </Grid>\n        <NATabla  columnas={columnas} />\n      </NATarjeta>\n  );\n}\nconst NAHelp = ({mensaje}) => {\n  return (\n      <NATarjeta mensaje={mensaje}>\n        <Typography variant=\"h1\">\n          <Skeleton />\n        </Typography>\n      </NATarjeta>\n  );\n}\n\nconst NAKPI = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={classes.root}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item xs={8}>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"h6\"\n              style={{ color: \"white\"}}\n            >\n              <Skeleton/>\n            </Typography>\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h1\"\n              style={{ color: \"white\"}}\n            >\n              <Skeleton/>\n            </Typography>\n          </Grid>\n          <Grid item xs={4} >\n            <Skeleton animation=\"wave\" height=\"100%\"/>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst NAKPI2 = (props) => {\n  const classes = useStyles();\n\n  return (\n    <Card\n      className={classes.root}\n    >\n      <CardContent>\n        <Grid\n          container\n          justify=\"space-between\"\n          spacing={3}\n        >\n          <Grid item xs={8}>\n            <Typography\n              color=\"textSecondary\"\n              gutterBottom\n              variant=\"body2\"\n              style={{ color: \"white\"}}\n            >\n              <Skeleton/>\n            </Typography>\n          </Grid>\n          <Grid item xs={4} >\n            <Typography\n              color=\"textPrimary\"\n              variant=\"h3\"\n              style={{ color: \"white\"}}\n            >\n              <Skeleton/>\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n};\n\nconst NADefaultChildrenKPI = (props) => {\n  return (\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={4}>\n        <NAKPI />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <NAKPI />\n      </Grid>\n      <Grid item xs={12} sm={4}>\n        <NAKPI />\n      </Grid>\n    </Grid>\n  );\n}\n\n\nconst NATarjeta = ({ className, children=<NADefaultChildrenKPI/>, sizes = {mensaje:\"h2\",esqueleto1:\"h1\",esqueleto2:\"h5\"}, mensaje = \"No disponible actualmente\", extendida=true }) => {\n  const classes = useStyles();\n\n  return (\n    <Grid container >\n      <Grid item xs={12}>\n        <Card\n          className={classes.card}\n        >\n          <CardContent>\n            <Typography\n              align=\"center\"\n              gutterBottom\n              variant={sizes.mensaje}\n            >\n              {mensaje}\n            </Typography>\n          </CardContent>\n          {extendida ?\n            <>            \n              <CardContent>\n                {children}\n              </CardContent>\n              <CardContent>\n                <Typography\n                  align=\"center\"\n                  color=\"textPrimary\"\n                  variant={sizes.esqueleto1}\n                >\n                  <Skeleton/>\n                </Typography>\n              </CardContent>\n            </>\n          :\n            <CardContent>\n              {children}\n            </CardContent>\n          }\n        </Card>\n      </Grid>\n    </Grid>\n  );\n};\n\nconst NATabla = ({ className, columnas }) => {\n  \n  const [limite, definirLimite] = useState(1);\n  const [pagina, definirPagina] = useState(0);\n\n  const theme = useTheme();\n  const cambiarLimite = (evento) => {\n    definirLimite(evento.target.value);\n  };\n\n  return (\n    <Card\n    >\n      \n          <Table>\n            <TableHead>\n              <TableRow>\n                \n                {Object.keys(columnas).map(nombreColumna=>(\n                  <TableCell>\n                    {columnas[nombreColumna].titulo}\n                  </TableCell>\n                ))}\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              <TableRow\n              >\n                {Object.keys(columnas).map(nombreColumna=>(\n                  <TableCell>\n                    {typeof columnas[nombreColumna].href === 'undefined' ?\n                      <>{nombreColumna === \"status\" ?\n                        \n                          <Typography\n                            fontWeight= {400}\n                            variant={columnas[nombreColumna].tamano}\n                            style={{ color:\"white\", backgroundColor: theme.palette.primary.main }}\n\n                          >\n                            <Box fontWeight=\"fontWeightBold\">\n                              <Skeleton />\n                            </Box>\n                          </Typography>\n                      :\n                        <>{nombreColumna === \"created_at\"?\n                          <Typography\n                            color={columnas[nombreColumna].color}\n                            variant={columnas[nombreColumna].tamano}\n                          >\n                            <Skeleton />\n                          </Typography>\n                        :\n                          <Typography\n                            color={columnas[nombreColumna].color}\n                            variant={columnas[nombreColumna].tamano}\n                          >\n                            <Skeleton />\n                          </Typography>\n                        }</>\n                      }</>\n                      \n                    :\n                      <Typography\n                        color={columnas[nombreColumna].color}\n                        variant={columnas[nombreColumna].tamano}\n                        style={{ textDecoration: 'none' }}\n                        \n                      >\n                        {nombreColumna!== 'edit' ? \n                          <Skeleton animation=\"wave\"/>\n                        :\n                          <Icon iconName={\"EditNote\"}  />\n                        }\n                      </Typography>\n                    }\n                  </TableCell>  \n                ))}                  \n              </TableRow>\n            </TableBody>\n          </Table>      \n    </Card>\n  );\n};\n\n\nexport { NATarjeta, NATabla, NAHelp, NAHistoric };","/app/frontend/src/vistas/AddProcess.js",[],"/app/frontend/src/componentes/welcome/Bienvenida.js",[],"/app/frontend/src/componentes/welcome/KPIWelcome.js",[],"/app/frontend/src/componentes/process/KPIs.js",[],"/app/frontend/src/componentes/process/Mail.js",["278","279","280","281"],"import React, { useState } from 'react';\nimport Dialogo from '../Dialogo';\nimport Editor from '../Editor';\nimport { Grid, Container, Button, makeStyles, Card, CardContent, TextField } from '@material-ui/core';\nimport { EditorState } from 'draft-js';\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { useHistory } from 'react-router-dom';\nimport axios from 'axios';\n\nconst Mail = (props) => {\n  const { setOpen, open, user, candidatemail, token } = props;\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\n  const html = convertToHTML(editorState.getCurrentContent());\n  return (\n    <Dialogo setOpen={setOpen} open={open} titulo={\"Nuevo Mensaje\"} >\n    \t<Formulario user={user} candidatemail={candidatemail} token={token} />\n  \t</Dialogo>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(1),\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: theme.palette.grisoscuro,\n  },\n  nombre: {\n    paddingTop: theme.spacing(5),\n  },\n  descripcion: {\n    paddingTop: theme.spacing(4),\n\n  },\n}));\n\nconst Formulario = (props) => {\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\n  const html = convertToHTML(editorState.getCurrentContent());\n  const classes = useStyles();\n  const history = useHistory();\n  return (\n    <Grid container className={classes.root} spacing={3}>\n      <Grid item xs={12}>\n        <Card className={classes.card}>\n          <Formik\n            initialValues={{\n              para: props.candidatemail,\n              cc: '',\n              asunto: '',\n            }}\n            validationSchema={Yup.object().shape({\n              para: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\n              cc: Yup.string().email('Debe ser un email válido').max(255),\n              asunto: Yup.string().max(255).required('Debe definir el asunto del email')\n            })}\n            onSubmit={(values, actions) => {\n              const datam = {\n                type:\"mail\",\n                user:props.user.correo,\n                info:{\n                  \"to\":[values.para],\n                  \"cc\":[values.cc],\n                  \"subject\":values.asunto,\n                  \"content\":html\n                },\n              };\n              const datag = {\n                type:\"mail\",\n                user:props.user.correo,\n                info:{\n                  \"sender\":props.user.correo,\n                  \"to\":values.para,\n                  \"cc\":values.cc,\n                  \"subject\":values.asunto,\n                  \"message_text\":html\n                },\n              };\n              const data = props.user.type === \"google\" ? datag : datam;\n              console.log(data);\n              axios.post(`https://rosev0-dev-api.myfuture.ai/selection/sendmail/${props.user.token}`,data).then(r=>{\n                console.log(r);\n                history.push('/');\n              }).catch(r=>{\n                console.log(r);\n              });        \n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit} >\n                <CardContent>\n                  <Grid container spacing={0}>\n                    <Grid item xs={12}>\n                      <TextField\n                        error={Boolean(touched.para && errors.para)}\n                        fullWidth\n                        helperText={touched.para && errors.para}\n                        label=\"Destinatario\"\n                        margin=\"normal\"\n                        name=\"para\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.para}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        error={Boolean(touched.asunto && errors.asunto)}\n                        fullWidth\n                        helperText={touched.asunto && errors.asunto}\n                        label=\"Asunto\"\n                        margin=\"normal\"\n                        name=\"asunto\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.asunto}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        error={Boolean(touched.cc && errors.cc)}\n                        fullWidth\n                        helperText={touched.cc && errors.cc}\n                        label=\"Con copia\"\n                        margin=\"normal\"\n                        name=\"cc\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"email\"\n                        value={values.cc}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  </Grid>\n                </CardContent>\n                <CardContent>\n                  <Editor editorState={editorState} setEditorState={setEditorState}/>\n                </CardContent>\n                <CardContent>\n                  <Button variant=\"contained\" type=\"submit\" color=\"primary\">\n                    {\"Enviar mail\"}\n                  </Button>\n                </CardContent>\n              </form>\n            )}\n          </Formik>\n        </Card>\n      </Grid>\n      \n        \n    </Grid>\n  );\n}\n\nexport default Mail;","/app/frontend/src/componentes/process/Calendar.js",["282","283","284","285","286","287","288","289","290"],"import React, { useState } from 'react';\nimport Dialogo from '../Dialogo';\nimport Editor from '../Editor';\nimport { Grid, InputAdornment, Switch, FormControlLabel, IconButton, Container, Button, makeStyles, Card, CardContent, TextField } from '@material-ui/core';\nimport { EditorState } from 'draft-js';\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Icon } from '@fluentui/react/lib/Icon';\n\nconst Calendar = (props) => {\n  const { setOpen, open, usermail, candidatemail } = props;\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\n  const html = convertToHTML(editorState.getCurrentContent());\n  return (\n    <Dialogo setOpen={setOpen} open={open} titulo={\"Nueva calendarización\"} >\n    \t<Formulario />\n  \t</Dialogo>\n  );\n}\n\nconst fecha = () => {\n  let fecha = new Date();\n  let dia = fecha.getDate();\n  let mes = fecha.getMonth() + 1;\n  let ano = fecha.getFullYear();\n  if(mes < 10){\n    if(dia < 10){\n      return `${ano}-0${mes}-0${dia}T10:00:00`;\n    }else{\n      return `${ano}-0${mes}-${dia}T10:00:00`;\n    }\n  }else{\n    return `${ano}-${mes}-${dia}T10:00:00`;\n  }\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    paddingTop: theme.spacing(1),\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    color: theme.palette.grisoscuro,\n  },\n  nombre: {\n    paddingTop: theme.spacing(5),\n  },\n  descripcion: {\n    paddingTop: theme.spacing(4),\n\n  },\n}));\n\nconst Formulario = (props) => {\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\n  const html = convertToHTML(editorState.getCurrentContent());\n  const classes = useStyles();\n  const fechaa = fecha();\n  return (\n    <Grid container className={classes.root} spacing={3}>\n      <Grid item xs={12}>\n        <Card className={classes.card}>\n          <Formik\n            initialValues={{\n              nombre: '',\n              fecha1: '',\n              fecha2: '',\n              asunto: '',\n            }}\n            validationSchema={Yup.object().shape({\n              nombre: Yup.string().max(255).required('Debe definir el nombre del evento'),\n              asunto: Yup.string().max(255).required('Debe definir el asunto del email')\n            })}\n            onSubmit={(values, actions) => {\n              console.log({\"nombre\":values.nombre,\"fecha1\":values.fecha1,\"fecha2\":values.fecha2,\"asunto\":values.asunto,\"teams\":values.teams,\"html\":html});            \n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit} >\n                <CardContent>\n                  <Grid container spacing={0}>\n                    <Grid item xs={12}>\n                      <TextField\n                        error={Boolean(touched.nombre && errors.nombre)}\n                        fullWidth\n                        helperText={touched.nombre && errors.nombre}\n                        label=\"Nombre evento\"\n                        margin=\"normal\"\n                        name=\"nombre\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.nombre}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField\n                        error={Boolean(touched.fecha1 && errors.fecha1)}\n                        fullWidth\n                        helperText={touched.fecha1 && errors.fecha1}\n                        InputProps={{\n\t\t\t\t            startAdornment: <InputAdornment position=\"start\">Inicio</InputAdornment>,\n\t\t\t\t          }}\n                        \n                        margin=\"normal\"\n                        name=\"fecha1\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"datetime-local\"\n                        value={values.fecha1}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={3}>\n                      <TextField\n                        error={Boolean(touched.fecha2 && errors.fecha2)}\n                        fullWidth\n                        helperText={touched.fecha2 && errors.fecha2}\n                        InputProps={{\n\t\t\t\t            startAdornment: <InputAdornment position=\"start\">Fin</InputAdornment>,\n\t\t\t\t          }}\n                        margin=\"normal\"\n                        name=\"fecha2\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"datetime-local\"\n                        value={values.fecha2}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                    <Grid item xs={2}>\n                    \t<IconButton edge=\"end\" aria-label=\"calendar\"\n\t\t                  onClick={()=>console.log(\"Ver horarios\")}\n\t\t                >\n\t\t                \t<Icon iconName=\"TimelineMatrixView\" style={{transform: 'scale(1.3)'}}/>\n\t\t                </IconButton>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <TextField\n                        error={Boolean(touched.asunto && errors.asunto)}\n                        fullWidth\n                        helperText={touched.asunto && errors.asunto}\n                        label=\"Asunto\"\n                        margin=\"normal\"\n                        name=\"asunto\"\n                        onBlur={handleBlur}\n                        onChange={handleChange}\n                        type=\"text\"\n                        value={values.asunto}\n                        variant=\"outlined\"\n                      />\n                    </Grid>\n                  </Grid>\n                </CardContent>\n                <CardContent>\n                  <Editor editorState={editorState} setEditorState={setEditorState}/>\n                </CardContent>\n                <CardContent>\n                \t<Grid container>\n\t                  \t<Grid xs={6}></Grid>\n\t                  \t<Grid xs={6}>\n\t\t                  <Button variant=\"contained\" fullWidth type=\"submit\" color=\"primary\">\n\t\t                    {\"Agendar\"}\n\t\t                  </Button>\n\t\t                </Grid>\n\t\t            </Grid>\n                </CardContent>\n              </form>\n            )}\n          </Formik>\n        </Card>\n      </Grid>\n      \n        \n    </Grid>\n  );\n}\n\nexport default Calendar;","/app/frontend/src/componentes/Boton.js",["291"],"import React from 'react';\nimport {\n  Button,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport { NavLink as RouterLink } from 'react-router-dom';\nimport { Icon } from '@fluentui/react/lib/Icon';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    height: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    borderRadius: theme.spacing(4),\n  },\n  \n}));\n\nconst ProcessButton = ({ nombre, href, color, icon, desactivado=false }) => {\n  const classes = useStyles();\n\n  return (\n    \n    <Button\n    variant=\"contained\" color={color}\n    to={href}\n    component={RouterLink}\n    className={classes.root}\n    endIcon={<Icon style={{\n      transform: 'scale(1.5)' // Tune it\n    }} iconName={icon}  />}\n    disabled={desactivado}\n    >\n    {nombre} \n    </Button>\n  );\n};\n\n\n\nexport default ProcessButton;","/app/frontend/src/componentes/downloads/DescargaExcel.js",[],"/app/frontend/src/componentes/table/Procesos.js",[],"/app/frontend/src/componentes/table/Historico.js",[],"/app/frontend/src/componentes/KPI.js",[],"/app/frontend/src/componentes/Boton2.js",["292"],"import React from 'react';\nimport {\n  Button,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport { NavLink as RouterLink } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    paddingTop: theme.spacing(3),\n    paddingBottom: theme.spacing(3),\n    borderRadius: theme.spacing(4),\n  },\n  \n}));\n\nconst ProcessButton = ({ nombre, href, clickear, desactivado=false  }) => {\n  const classes = useStyles();\n\n  return (\n    \n    <Button\n    variant=\"contained\" color=\"primary\"\n    to={href}\n    component={RouterLink}\n    className={classes.root}\n    onClick={clickear}\n    disabled={desactivado}\n    >\n    {nombre}\n    </Button>\n  );\n};\n\n\n\nexport default ProcessButton;","/app/frontend/src/componentes/Editor.js",["293"],"import React, { useState } from 'react';\n//import { Editor } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\n\nconst MyEditor = ({setEditorState,editorState}) => {\n  //const [editorState, setEditorState] =useState(EditorState.createEmpty());\n  const onEditorStateChange = (editorState) => {\n    setEditorState(editorState);\n };\nreturn (\n  <div>\n    <Editor \n      editorState={editorState}\n      wrapperClassName=\"rich-editor demo-wrapper\"\n      editorClassName=\"demo-editor\"\n      onEditorStateChange={onEditorStateChange}\n      placeholder=\"Escriba aquí\" />\n  </div>\n);\n}\nexport default MyEditor;","/app/frontend/src/componentes/AddProcess.js",["294","295","296","297","298","299","300"],"import React, { useRef, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { Icon } from '@fluentui/react/lib/Icon';\nimport {\n  Box,\n  FormControlLabel,\n  Switch,\n  Badge,\n  Button,\n  Container,\n  Grid,\n  IconButton,\n  TextField,\n  Typography,\n  makeStyles\n} from '@material-ui/core';\nimport Page from './Page';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { uploadFile } from 'react-s3';\n\n\n\n\nconst subirIterativo = (archivos,configu,iteracion,errores,payload) => {\n  if(iteracion<archivos.length){\n    uploadFile(archivos[iteracion],configu)\n      .then(e=>{\n        console.log(\"Subido\",archivos[iteracion].name);\n        subirIterativo(archivos,configu,iteracion+1,errores,payload);\n      })\n      .catch(e=>{\n        console.log(\"Error\",archivos[iteracion].name);\n        errores.push(archivos[iteracion].name);\n        subirIterativo(archivos,configu,iteracion,errores,payload);\n      });\n  }else{\n    console.log(\"Todos subidos\",errores);\n    axios.post(\"https://rosev0-dev-api.myfuture.ai/selection/create/\",payload).then(r=>{\n      console.log(r);\n    }).catch(r=>{\n      console.log(r);\n    });\n  }\n}\n\n\n \nconst config = (string) => {\n  return {\n    bucketName: 'rosev0',\n    dirName: string, /* optional */\n    region: 'us-east-2',\n    accessKeyId: 'AKIA5XKDKZ4KRSBLKVGI',\n    secretAccessKey: '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',\n  }\n}\n\n\n\nconst fecha = () => {\n  let fecha = new Date();\n  let dia = fecha.getDate();\n  let mes = fecha.getMonth() + 1;\n  let ano = fecha.getFullYear();\n  if(mes < 10){\n    if(dia < 10){\n      return `0${dia}-0${mes}-${ano}`;\n    }else{\n      return `${dia}-0${mes}-${ano}`;\n    }\n  }else{\n    return `${dia}-${mes}-${ano}`;\n  }\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    height: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst AddProcess = (props) => {\n  const classes = useStyles();\n  let history = useHistory();\n  const fileInput = useRef();\n  const handleFile = evento => {\n    evento.preventDefault();\n    console.log(fileInput.current.files[0]);\n  }\n\n  const onUpload = (e) =>{\n    console.log(e);\n  }\n\n  const [hacerSubida, definirS] = useState(false);\n  const [hacerRequest, definirR] = useState(false);\n\n  const [requirements_idioms, setRequirements_idioms] = useState([]);\n  const [requirements_skills, setRequirements_skills] = useState([]);\n  const [requirements_location, setRequirements_location] = useState([]);\n  const [desired_skills, setDesired_skills] = useState([]);\n  const [desired_college, setDesired_college] = useState([]);\n  const [desired_designation, setDesired_designation] = useState([]);\n  const [desired_degree, setDesired_degree] = useState([]);\n  return (\n    <Page\n      className={classes.root}\n      title=\"Add Process\"\n    >\n      <Box\n        display=\"flex\"\n        flexDirection=\"column\"\n        height=\"100%\"\n        justifyContent=\"center\"\n      >\n        <Container maxWidth=\"lg\">\n          <Formik\n            initialValues={{\n              name: \"Vamos\",\n              description: \"Proceso para desarrollador\",\n              vacant: 1,\n              \n              area: \"Industrial\",\n              subarea: \"TI\",\n              industry: \"TI\",\n              is_remote: false,\n              requirements_exp: 1,\n              desired_exp: 1,\n              file: null,\n              \n            }}\n            validationSchema={\n              Yup.object().shape({\n                name: Yup.string().max(255).required('Nombre es requerido'),\n              })\n            }\n            onSubmit={(values, actions) => {\n              var date = fecha();\n              var email_cambiado = props.usuario.correo.replace(\"@\",\"_\");\n              var name_cambiado = values.name.replaceAll(\" \",\"_\");\n              const cvs = fileInput.current.files;\n              var ruta = `${email_cambiado}/${date}*${name_cambiado}*input`;\n              var payload = {\n                \"name\": values.name,\n                \"vacant\": values.vacant,\n                \"description\": values.description,\n                \"area\": values.area,\n                \"subarea\": values.subarea,\n                \"industry\": values.industry,\n                \"is_remote\": values.is_remote,\n                \"status\": \"In progress\",\n                \"requirements\":{\n                  \"exp\": values.requirements_exp,\n                  \"idioms\": requirements_idioms,\n                  \"skills\": requirements_skills,\n                  \"location\": requirements_location,\n                },\n                \"desired\":{\n                  \"exp\": values.desired_exp,\n                  \"skills\": desired_skills,\n                  \"college\": desired_college,\n                  \"designation\": desired_designation,\n                  \"degree\": desired_degree,\n                },\n                \"kpis\": {},\n                \"storage_url\": ruta,\n                \"user\": props.usuario.correo,\n              };\n              \n              let configu = config(ruta);\n              definirS(true);\n              subirIterativo(cvs,configu,0,[],payload);\n              \n              \n              \n            }}\n          >\n            {({\n              errors,\n              handleBlur,\n              handleChange,\n              handleSubmit,\n              isSubmitting,\n              touched,\n              values\n            }) => (\n              <form onSubmit={handleSubmit}>\n                <Box mb={3}>\n                  <Typography\n                    color=\"textPrimary\"\n                    variant=\"h2\"\n                  >\n                    Nuevo Proceso\n                  </Typography>\n                  <Typography\n                    color=\"textSecondary\"\n                    gutterBottom\n                    variant=\"body2\"\n                  >\n                    Llena los campos\n                  </Typography>\n                </Box>\n                <Grid container direction=\"row\" spacing={3}>\n                  <Grid item xs={4}>\n                    <TextField\n                      error={Boolean(touched.name && errors.name)}\n                      fullWidth\n                      helperText={touched.name && errors.name}\n                      label=\"Nombre Proceso\"\n                      margin=\"normal\"\n                      name=\"name\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.name}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={2}>\n                    <TextField\n                      error={Boolean(touched.vacant && errors.vacant)}\n                      fullWidth\n                      helperText={touched.vacant && errors.vacant}\n                      label=\"Vacantes\"\n                      type=\"number\"\n                      margin=\"normal\"\n                      name=\"vacant\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.vacant}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={6}>\n                    <TextField\n                      error={Boolean(touched.description && errors.description)}\n                      fullWidth\n                      helperText={touched.description && errors.description}\n                      label=\"Descripción del proceso\"\n                      margin=\"normal\"\n                      name=\"description\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.description}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                </Grid>\n                <Grid container direction=\"row\" spacing={3}>\n                  <Grid item xs={3}>\n                    <TextField\n                      error={Boolean(touched.area && errors.area)}\n                      fullWidth\n                      helperText={touched.area && errors.area}\n                      label=\"Área\"\n                      margin=\"normal\"\n                      name=\"area\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.area}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={3}>\n                    <TextField\n                      error={Boolean(touched.subarea && errors.subarea)}\n                      fullWidth\n                      helperText={touched.subarea && errors.subarea}\n                      label=\"Subárea\"\n                      margin=\"normal\"\n                      name=\"subarea\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.subarea}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid item xs={4}>\n                    <TextField\n                      error={Boolean(touched.industry && errors.industry)}\n                      fullWidth\n                      helperText={touched.industry && errors.industry}\n                      label=\"Industria\"\n                      margin=\"normal\"\n                      name=\"industry\"\n                      onBlur={handleBlur}\n                      onChange={handleChange}\n                      value={values.industry}\n                      variant=\"outlined\"\n                    />\n                  </Grid>\n                  <Grid xs={2}>\n                    <FormControlLabel\n                      control={<Switch checked={values.is_remote} onChange={handleChange} name=\"is_remote\" />}\n                      label=\"¿Es remoto?\"\n                      labelPlacement=\"top\"\n                    />\n\n                  </Grid>\n                </Grid>\n                <br/>\n                <Grid container direction=\"row\" spacing={4}>\n                  <Grid item xs={4}>\n                    <Grid container direction=\"column\" spacing={3}>\n                      <Grid item>\n                        <Typography variant=\"h5\">Requisitos Mínimos</Typography>\n                      </Grid>\n                      \n                      <Grid item>\n                        <TextField\n                          error={Boolean(touched.requirements_exp && errors.requirements_exp)}\n                          fullWidth\n                          helperText={touched.requirements_exp && errors.requirements_exp}\n                          label=\"Experiencia mínima\"\n                          type=\"number\"\n                          margin=\"normal\"\n                          name=\"requirements_exp\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.requirements_exp}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid item>\n                        <ArrayInput data={requirements_idioms} set={setRequirements_idioms} label={\"Idiomas\"}/>\n                      </Grid>\n                      <Grid item>\n                        <ArrayInput data={requirements_skills} set={setRequirements_skills} label={\"Skills\"}/>\n                      </Grid>\n                      <Grid item>\n                        <ArrayInput data={requirements_location} set={setRequirements_location} label={\"Lugar\"}/>\n                      </Grid>\n                                            \n                    </Grid>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Grid container direction=\"column\" spacing={3}>\n                      <Grid item>\n                        <Typography variant=\"h5\">Requisitos Deseables</Typography>\n                      </Grid>\n                      <Grid item>\n                        <TextField\n                          error={Boolean(touched.desired_exp && errors.desired_exp)}\n                          fullWidth\n                          helperText={touched.desired_exp && errors.desired_exp}\n                          label=\"Experiencia deseada\"\n                          type=\"number\"\n                          margin=\"normal\"\n                          name=\"desired_exp\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          value={values.desired_exp}\n                          variant=\"outlined\"\n                        />\n                      </Grid>\n                      <Grid item>\n                        <ArrayInput data={desired_skills} set={setDesired_skills} label={\"Skills\"}/>\n                      </Grid>\n                      <Grid item>\n                        <ArrayInput data={desired_designation} set={setDesired_designation} label={\"Cargos\"}/>\n                      </Grid>\n                      <Grid item>\n                        <ArrayInput data={desired_college} set={setDesired_college} label={\"Universidades\"}/>\n                      </Grid>\n                      <Grid item>\n                        <ArrayInput data={desired_degree} set={setDesired_degree} label={\"Títulos\"}/>\n                      </Grid>\n                      \n                      \n                      \n                     \n                    </Grid>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3} >\n                      <br/><br/><br/><br/>\n                      <Grid item xs={12}>\n                        \n                          \n                          <Button\n                            color=\"primary\"\n                            fullWidth\n                            variant=\"contained\"\n                            component=\"label\"\n                            size=\"large\"\n                            style={{ \"min-height\": \"150px\", \"min-width\": \"200px\" }}\n                          >\n                            Subir CV's\n                            <input\n                              type=\"file\"\n                              name=\"file\"\n                              hidden\n                              multiple=\"multiple\"\n                              ref={fileInput}\n            \n                            />\n                          </Button>\n                          {/*<ReactS3Uploader\n                            signingUrl=\"/s3/sign\"\n                            signingUrlMethod=\"GET\"\n                            accept=\".zip,.rar,.7zip\"\n                            s3path=\"/uploads/\"\n                            onProgress={onUpload}\n                            onError={onUpload}\n                            onFinish={onUpload}\n                            \n                            uploadRequestHeaders={{ 'x-amz-acl': 'public-read' }}  // this is the default\n                            \n                            ref={fileInput}\n                            contentDisposition=\"auto\"\n                            />*/}\n                      </Grid>\n                      <Grid item>\n                        <Box my={2}>\n                          <Button\n                            color=\"primary\"\n                            disabled={false}\n                            style={{ \"min-height\": \"100px\" }}\n                            fullWidth\n                            size=\"large\"\n                            type=\"submit\"\n                            \n                            variant=\"contained\"\n                          >\n                            ¡Traeme a los mejores!\n                          </Button>\n                        </Box>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n                \n                \n                \n                \n                \n                \n                \n                \n                \n                \n              </form>\n            )}\n          </Formik>\n        </Container>\n      </Box>\n    </Page>\n  );\n};\n\nconst ArrayInputNumber = ({ data, set, label }) => {\n  const [valor, setValor] = useState(1);\n  const definir = () => {\n    set([...data, Number(valor)]);\n    setValor(1);\n  }\n  const actualizar = (i) => {\n    setValor(data[i]);\n    set([...data.slice(0,i), ...data.slice(i+1)]);\n  }\n  const eliminar = (i) => {\n    set([...data.slice(0,i), ...data.slice(i+1)]);\n  }\n  const inputtext = (e) => {\n    e.preventDefault();\n    setValor(e.target.value);\n  }\n  return (\n    <Grid container direction=\"column\" spacing={1}>\n      <Grid item xs={12}>\n        <Grid container direction=\"row\" spacing={0}>\n          <Grid item xs={10}>\n            <TextField variant=\"outlined\" label={label} type=\"number\" fullWidth value={valor} onChange={inputtext}/>\n          </Grid>\n          <Grid item xs={2}>\n            <IconButton onClick={definir}>\n              <Icono nombre={'CircleAdditionSolid'} />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid container spacing={0}>\n          {data.map((i,index)=>(\n            <Grid item>\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\n              </Badge>\n            </Grid>\n          ))}\n          \n        </Grid>\n      </Grid>\n    </Grid>\n    \n  );\n}\n\nconst ArrayInput = ({ data, set, label }) => {\n  const [valor, setValor] = useState(\"\");\n  const definir = () => {\n    set([...data, valor.toLowerCase()]);\n    setValor(\"\");\n    console.log(data);\n  }\n  const actualizar = (i) => {\n    setValor(data[i]);\n    set([...data.slice(0,i), ...data.slice(i+1)]);\n  }\n  const eliminar = (i) => {\n    set([...data.slice(0,i), ...data.slice(i+1)]);\n  }\n  const inputtext = (e) => {\n    e.preventDefault();\n    setValor(e.target.value);\n  }\n  return (\n    <Grid container direction=\"column\" spacing={3}>\n      <Grid item xs={12}>\n        <Grid container direction=\"row\" spacing={0}>\n          <Grid item xs={10}>\n            <TextField variant=\"outlined\" label={label} type=\"text\" fullWidth value={valor} onChange={inputtext}/>\n          </Grid>\n          <Grid item xs={2}>\n            <IconButton onClick={definir}>\n              <Icono nombre={'CircleAdditionSolid'} />\n            </IconButton>\n          </Grid>\n        </Grid>\n      </Grid>\n      {data.length !== 0 && <Grid item xs={12}>\n        <Grid container spacing={2}>\n          {data.map((i,index)=>(\n            <Grid item>\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\n              </Badge>\n            </Grid>\n          ))}\n        </Grid>\n      </Grid>} \n      \n        \n      \n    </Grid>\n    \n  );\n}\n\nconst Icono = ({ nombre }) => {\n  return(\n    <Icon style={{\n      transform: 'scale(1.5)' \n    }} iconName={nombre}  />\n  );\n}\n\nconst mapStateToProps = estado => {\n  return {\n    usuario: estado.usuario,\n  }\n}\n\nconst mapDispatchToProps = despachar => {\n    return {}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProcess);","/app/frontend/src/componentes/welcome/KPIContainer.js",[],"/app/frontend/src/componentes/process/KPIContainer.js",[],"/app/frontend/src/componentes/Dialogo.js",[],"/app/frontend/src/componentes/table/Elementos.js",["301","302","303"],"import React, { useState } from 'react';\nimport {\n  Checkbox,\n  TableCell,\n  TableRow,\n  Grid,\n  TablePagination,\n  Badge,\n  Button,\n  Typography,\n  TextField,\n  Select,\n  MenuItem,\n} from '@material-ui/core';\n\nconst Filtro = ({ variable, mostrar, filtros, anadirFiltro, eliminarFiltro }) => {\n  const [texto, setTexto] = useState(\"\");\n  return (\n\n    <>{mostrar ? <Grid container>\n      <Grid item>\n        <Grid container>\n          <Grid item xs={8}>\n            <TextField\n              label={\"Filtro\"}\n              variant=\"outlined\"\n              size=\"small\"\n              onChange={(e)=>setTexto(e.target.value)}\n              value={texto}\n            />\n          </Grid>\n          <Grid item xs={4}>\n            <Button\n              autoWidth={true}\n              variant=\"contained\"\n              onClick={(e)=>{anadirFiltro({valor:texto,variable:variable});setTexto(\"\");}}\n              color=\"primary\"\n            >+\n            </Button>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item style={{ paddingTop: \"12px\"}}>\n        <Grid container>\n          {filtros.map((i,index)=>(\n            <Opcion valor={i.valor} indice={i.index} eliminarFiltro={eliminarFiltro} />\n          ))}\n        </Grid>\n      </Grid>\n    </Grid>\n    :\n      <></>\n    }</>\n  );\n}\n\nconst Opcion = ({ valor, eliminarFiltro, indice }) => {\n  \n  return(\n  <Grid item >\n    <Badge color=\"secondary\" as=\"button\" badgeContent={\"X\"} color=\"primary\"\n      onClick={()=>eliminarFiltro(indice)}>\n      <Button variant=\"contained\" color=\"secondary\">\n        <Typography variant=\"caption\" >{valor}</Typography>\n      </Button>\n    </Badge>\n  </Grid>\n  );\n}\nconst FilaFiltros = ({ col, mostrar, setMostrar, filtros, anadirFiltro, eliminarFiltro }) => {\n  \n  return (\n    <TableRow\n      hover\n      key={\"filtros\"}\n    >\n      <TableCell>\n        <Checkbox\n          checked={mostrar}\n          onChange={()=>setMostrar(!mostrar)}\n          value={mostrar}\n        />\n      </TableCell>\n      {col.map((i,index)=>(\n        <TableCell>{i===\"edit\" ?\n          <></>\n        :\n          <Filtro variable={i} mostrar={mostrar} filtros={filtros.filter(f => f[\"variable\"] === i)} anadirFiltro={anadirFiltro} eliminarFiltro={eliminarFiltro}/>\n        }</TableCell>\n        \n      ))}\n      \n    </TableRow>\n  );\n};\n\nconst CeldaColumnaSeleccionador = ({ seleccion, chequeado }) => {\n  return (\n    <TableCell padding=\"checkbox\">\n      <Checkbox\n        checked={chequeado}\n        onChange={seleccion}\n        value=\"true\"\n      />\n    </TableCell>\n  );\n};\n\nconst TituloColumnaSeleccionador = ({ chequeado, indeterminado, seleccionarTodos}) => {\n  return (\n    <TableCell padding=\"checkbox\">\n      <Checkbox\n        checked={chequeado}\n        color=\"primary\"\n        indeterminate={indeterminado}\n        onChange={seleccionarTodos}\n      />\n    </TableCell>\n  );\n};\n\n\nconst Paginacion = ({ actual, cambiarPagina, cambiarLimite, pagina, limite}) => {\n  return (\n    <TablePagination\n      component=\"div\"\n      count={actual}\n      onChangePage={cambiarPagina}\n      onChangeRowsPerPage={cambiarLimite}\n      page={pagina}\n      rowsPerPage={limite}\n      rowsPerPageOptions={[7, 15, 50]}\n    />\n  );\n};\n\nexport { Paginacion, TituloColumnaSeleccionador, CeldaColumnaSeleccionador, FilaFiltros };\n\n\n",{"ruleId":"304","severity":1,"message":"305","line":34,"column":9,"nodeType":"306","messageId":"307","endLine":34,"endColumn":10},{"ruleId":"308","severity":1,"message":"309","line":62,"column":5,"nodeType":"310","endLine":62,"endColumn":20,"suggestions":"311"},{"ruleId":"312","replacedBy":"313"},{"ruleId":"314","replacedBy":"315"},{"ruleId":"304","severity":1,"message":"316","line":8,"column":8,"nodeType":"306","messageId":"307","endLine":8,"endColumn":17},{"ruleId":"304","severity":1,"message":"317","line":9,"column":8,"nodeType":"306","messageId":"307","endLine":9,"endColumn":17},{"ruleId":"318","severity":1,"message":"319","line":2,"column":1,"nodeType":"320","endLine":903,"endColumn":3},{"ruleId":"304","severity":1,"message":"321","line":180,"column":7,"nodeType":"306","messageId":"307","endLine":180,"endColumn":21},{"ruleId":"304","severity":1,"message":"322","line":3,"column":3,"nodeType":"306","messageId":"307","endLine":3,"endColumn":12},{"ruleId":"304","severity":1,"message":"323","line":3,"column":8,"nodeType":"306","messageId":"307","endLine":3,"endColumn":17},{"ruleId":"304","severity":1,"message":"324","line":4,"column":8,"nodeType":"306","messageId":"307","endLine":4,"endColumn":14},{"ruleId":"304","severity":1,"message":"325","line":40,"column":9,"nodeType":"306","messageId":"307","endLine":40,"endColumn":17},{"ruleId":"304","severity":1,"message":"326","line":104,"column":7,"nodeType":"306","messageId":"307","endLine":104,"endColumn":19},{"ruleId":"304","severity":1,"message":"327","line":47,"column":7,"nodeType":"306","messageId":"307","endLine":47,"endColumn":20},{"ruleId":"328","severity":1,"message":"329","line":51,"column":30,"nodeType":"330","messageId":"331","endLine":51,"endColumn":60},{"ruleId":"308","severity":1,"message":"332","line":61,"column":5,"nodeType":"310","endLine":61,"endColumn":20,"suggestions":"333"},{"ruleId":"304","severity":1,"message":"334","line":5,"column":8,"nodeType":"306","messageId":"307","endLine":5,"endColumn":22},{"ruleId":"304","severity":1,"message":"335","line":8,"column":8,"nodeType":"306","messageId":"307","endLine":8,"endColumn":13},{"ruleId":"304","severity":1,"message":"336","line":16,"column":7,"nodeType":"306","messageId":"307","endLine":16,"endColumn":8},{"ruleId":"304","severity":1,"message":"337","line":6,"column":25,"nodeType":"306","messageId":"307","endLine":6,"endColumn":40},{"ruleId":"304","severity":1,"message":"338","line":208,"column":9,"nodeType":"306","messageId":"307","endLine":208,"endColumn":16},{"ruleId":"304","severity":1,"message":"339","line":1,"column":17,"nodeType":"306","messageId":"307","endLine":1,"endColumn":23},{"ruleId":"304","severity":1,"message":"340","line":40,"column":10,"nodeType":"306","messageId":"307","endLine":40,"endColumn":26},{"ruleId":"304","severity":1,"message":"341","line":40,"column":28,"nodeType":"306","messageId":"307","endLine":40,"endColumn":47},{"ruleId":"304","severity":1,"message":"342","line":44,"column":10,"nodeType":"306","messageId":"307","endLine":44,"endColumn":21},{"ruleId":"304","severity":1,"message":"343","line":44,"column":23,"nodeType":"306","messageId":"307","endLine":44,"endColumn":37},{"ruleId":"304","severity":1,"message":"344","line":361,"column":7,"nodeType":"306","messageId":"307","endLine":361,"endColumn":23},{"ruleId":"304","severity":1,"message":"345","line":203,"column":10,"nodeType":"306","messageId":"307","endLine":203,"endColumn":16},{"ruleId":"304","severity":1,"message":"346","line":204,"column":10,"nodeType":"306","messageId":"307","endLine":204,"endColumn":16},{"ruleId":"304","severity":1,"message":"347","line":204,"column":18,"nodeType":"306","messageId":"307","endLine":204,"endColumn":31},{"ruleId":"304","severity":1,"message":"348","line":207,"column":9,"nodeType":"306","messageId":"307","endLine":207,"endColumn":22},{"ruleId":"304","severity":1,"message":"322","line":4,"column":16,"nodeType":"306","messageId":"307","endLine":4,"endColumn":25},{"ruleId":"304","severity":1,"message":"337","line":6,"column":25,"nodeType":"306","messageId":"307","endLine":6,"endColumn":40},{"ruleId":"304","severity":1,"message":"349","line":14,"column":23,"nodeType":"306","messageId":"307","endLine":14,"endColumn":37},{"ruleId":"304","severity":1,"message":"350","line":15,"column":9,"nodeType":"306","messageId":"307","endLine":15,"endColumn":13},{"ruleId":"304","severity":1,"message":"351","line":4,"column":32,"nodeType":"306","messageId":"307","endLine":4,"endColumn":38},{"ruleId":"304","severity":1,"message":"352","line":4,"column":40,"nodeType":"306","messageId":"307","endLine":4,"endColumn":56},{"ruleId":"304","severity":1,"message":"322","line":4,"column":70,"nodeType":"306","messageId":"307","endLine":4,"endColumn":79},{"ruleId":"304","severity":1,"message":"337","line":6,"column":25,"nodeType":"306","messageId":"307","endLine":6,"endColumn":40},{"ruleId":"304","severity":1,"message":"353","line":12,"column":26,"nodeType":"306","messageId":"307","endLine":12,"endColumn":34},{"ruleId":"304","severity":1,"message":"354","line":12,"column":36,"nodeType":"306","messageId":"307","endLine":12,"endColumn":49},{"ruleId":"304","severity":1,"message":"349","line":13,"column":23,"nodeType":"306","messageId":"307","endLine":13,"endColumn":37},{"ruleId":"304","severity":1,"message":"350","line":14,"column":9,"nodeType":"306","messageId":"307","endLine":14,"endColumn":13},{"ruleId":"304","severity":1,"message":"355","line":60,"column":9,"nodeType":"306","messageId":"307","endLine":60,"endColumn":15},{"ruleId":"304","severity":1,"message":"356","line":4,"column":3,"nodeType":"306","messageId":"307","endLine":4,"endColumn":7},{"ruleId":"304","severity":1,"message":"356","line":4,"column":3,"nodeType":"306","messageId":"307","endLine":4,"endColumn":7},{"ruleId":"304","severity":1,"message":"357","line":1,"column":17,"nodeType":"306","messageId":"307","endLine":1,"endColumn":25},{"ruleId":"304","severity":1,"message":"338","line":91,"column":7,"nodeType":"306","messageId":"307","endLine":91,"endColumn":14},{"ruleId":"304","severity":1,"message":"358","line":93,"column":9,"nodeType":"306","messageId":"307","endLine":93,"endColumn":19},{"ruleId":"304","severity":1,"message":"359","line":98,"column":9,"nodeType":"306","messageId":"307","endLine":98,"endColumn":17},{"ruleId":"304","severity":1,"message":"360","line":102,"column":10,"nodeType":"306","messageId":"307","endLine":102,"endColumn":21},{"ruleId":"304","severity":1,"message":"361","line":103,"column":10,"nodeType":"306","messageId":"307","endLine":103,"endColumn":22},{"ruleId":"304","severity":1,"message":"362","line":103,"column":24,"nodeType":"306","messageId":"307","endLine":103,"endColumn":32},{"ruleId":"304","severity":1,"message":"344","line":457,"column":7,"nodeType":"306","messageId":"307","endLine":457,"endColumn":23},{"ruleId":"304","severity":1,"message":"363","line":12,"column":3,"nodeType":"306","messageId":"307","endLine":12,"endColumn":9},{"ruleId":"304","severity":1,"message":"364","line":13,"column":3,"nodeType":"306","messageId":"307","endLine":13,"endColumn":11},{"ruleId":"365","severity":1,"message":"366","line":61,"column":61,"nodeType":"367","endLine":61,"endColumn":76},"no-unused-vars","'a' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.cargarBienvenida', 'props.cargarConfiguracion', 'props.cargarEventos', 'props.cargarHistorico', 'props.cargarLogo', 'props.cargarProcesos', and 'props.cargarTutoriales'. Either include them or remove the dependency array.","ArrayExpression",["368"],"no-native-reassign",["369"],"no-negated-in-lhs",["370"],"'LoginView' is defined but never used.","'MicroSoft' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'EnlaceRegistro' is assigned a value but never used.","'Container' is defined but never used.","'PropTypes' is defined but never used.","'moment' is defined but never used.","'booleano' is assigned a value but never used.","'Cargarimagen' is assigned a value but never used.","'useStylesresp' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'aux'.","ArrowFunctionExpression","unsafeRefs","React Hook useEffect has a missing dependency: 'props.procesos'. Either include it or remove the dependency array.",["371"],"'AccessTimeIcon' is defined but never used.","'Tabla' is defined but never used.","'d' is assigned a value but never used.","'convertFromHTML' is defined but never used.","'history' is assigned a value but never used.","'useRef' is defined but never used.","'requirements_exp' is assigned a value but never used.","'setRequirements_exp' is assigned a value but never used.","'desired_exp' is assigned a value but never used.","'setDesired_exp' is assigned a value but never used.","'ArrayInputNumber' is assigned a value but never used.","'limite' is assigned a value but never used.","'pagina' is assigned a value but never used.","'definirPagina' is assigned a value but never used.","'cambiarLimite' is assigned a value but never used.","'setEditorState' is assigned a value but never used.","'html' is assigned a value but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","'usermail' is assigned a value but never used.","'candidatemail' is assigned a value but never used.","'fechaa' is assigned a value but never used.","'Grid' is defined but never used.","'useState' is defined but never used.","'handleFile' is assigned a value but never used.","'onUpload' is assigned a value but never used.","'hacerSubida' is assigned a value but never used.","'hacerRequest' is assigned a value but never used.","'definirR' is assigned a value but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",{"desc":"372","fix":"373"},"no-global-assign","no-unsafe-negation",{"desc":"374","fix":"375"},"Update the dependencies array to be: [props.cargarBienvenida, props.cargarConfiguracion, props.cargarEventos, props.cargarHistorico, props.cargarLogo, props.cargarProcesos, props.cargarTutoriales, props.usuario]",{"range":"376","text":"377"},"Update the dependencies array to be: [props.filtros, props.procesos]",{"range":"378","text":"379"},[2463,2478],"[props.cargarBienvenida, props.cargarConfiguracion, props.cargarEventos, props.cargarHistorico, props.cargarLogo, props.cargarProcesos, props.cargarTutoriales, props.usuario]",[2299,2314],"[props.filtros, props.procesos]"]