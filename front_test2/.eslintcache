[{"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\index.js":"1","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\serviceWorker.js":"2","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\App.js":"3","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Estilo.js":"4","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\store\\index.js":"5","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Cambiador.js":"6","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Navegacion.js":"7","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Tipografia.js":"8","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Breakpoints.js":"9","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Paleta.js":"10","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\TipografiaResponsiva.js":"11","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\funciones\\login\\obtenerEstadoUsuarioTest.js":"12","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Vistas.js":"13","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\WelcomePage.js":"14","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcessCalendar.js":"15","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcess.js":"16","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcessMail.js":"17","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Process.js":"18","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Historic.js":"19","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Login.js":"20","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\HelpTutorials.js":"21","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Error.js":"22","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\EditProcess.js":"23","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\AddProcess.js":"24","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\routes.js":"25","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Microsoft.js":"26","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Google.js":"27","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\index.js":"28","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\TopBar.js":"29","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\NavBar\\index.js":"30","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\NavBar\\NavItem.js":"31","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Procesos.js":"32","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\DataProcesos.js":"33","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\AddProcess.js":"34","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\Bienvenida.js":"35","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\KPIWelcome.js":"36","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\KPIContainer.js":"37","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\index.js":"38","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Elementos.js":"39","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Boton.js":"40","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\store\\dataProcesos.js":"41","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Procesos.js":"42","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\downloads\\DescargaExcel.js":"43","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\KPI.js":"44","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\KPIs.js":"45","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\KPIContainer.js":"46","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Msal.js":"47","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\Calendar.js":"48","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\Mail.js":"49","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Dialogo.js":"50","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Editor.js":"51","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\CambiadorPublico.js":"52","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Historico.js":"53","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Help.js":"54","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Boton2.js":"55","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\auth\\LoginView.js":"56","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\auth\\RegisterView.js":"57","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\index.js":"58","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Page.js":"59","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\Profile.js":"60","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\ProfileDetails.js":"61","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\GlobalStyles.js":"62"},{"size":875,"mtime":1608757100530,"results":"63","hashOfConfig":"64"},{"size":4636,"mtime":1607281121876,"results":"65","hashOfConfig":"64"},{"size":4956,"mtime":1609703439726,"results":"66","hashOfConfig":"64"},{"size":2222,"mtime":1609702274281,"results":"67","hashOfConfig":"64"},{"size":1782,"mtime":1609704910698,"results":"68","hashOfConfig":"64"},{"size":1440,"mtime":1609703120077,"results":"69","hashOfConfig":"64"},{"size":759,"mtime":1609702961870,"results":"70","hashOfConfig":"64"},{"size":304,"mtime":1609702214272,"results":"71","hashOfConfig":"64"},{"size":127,"mtime":1609702298687,"results":"72","hashOfConfig":"64"},{"size":465,"mtime":1609702250407,"results":"73","hashOfConfig":"64"},{"size":1707,"mtime":1609702178322,"results":"74","hashOfConfig":"64"},{"size":1020,"mtime":1609702078137,"results":"75","hashOfConfig":"64"},{"size":640,"mtime":1608319706904,"results":"76","hashOfConfig":"64"},{"size":1007,"mtime":1609701303537,"results":"77","hashOfConfig":"64"},{"size":184,"mtime":1607367986789,"results":"78","hashOfConfig":"64"},{"size":10169,"mtime":1609710806909,"results":"79","hashOfConfig":"64"},{"size":172,"mtime":1607367975169,"results":"80","hashOfConfig":"64"},{"size":3915,"mtime":1609705301585,"results":"81","hashOfConfig":"64"},{"size":3155,"mtime":1608318978615,"results":"82","hashOfConfig":"64"},{"size":3334,"mtime":1607621896545,"results":"83","hashOfConfig":"64"},{"size":227,"mtime":1607779768850,"results":"84","hashOfConfig":"64"},{"size":142,"mtime":1607367859744,"results":"85","hashOfConfig":"64"},{"size":15745,"mtime":1609706163332,"results":"86","hashOfConfig":"64"},{"size":299,"mtime":1609701748162,"results":"87","hashOfConfig":"64"},{"size":2355,"mtime":1607627343692,"results":"88","hashOfConfig":"64"},{"size":1708,"mtime":1609701975225,"results":"89","hashOfConfig":"64"},{"size":2025,"mtime":1609702021275,"results":"90","hashOfConfig":"64"},{"size":1552,"mtime":1609179644722,"results":"91","hashOfConfig":"64"},{"size":1731,"mtime":1609702410147,"results":"92","hashOfConfig":"64"},{"size":2997,"mtime":1609702431681,"results":"93","hashOfConfig":"64"},{"size":2256,"mtime":1609181173810,"results":"94","hashOfConfig":"64"},{"size":5478,"mtime":1609702835714,"results":"95","hashOfConfig":"64"},{"size":39735,"mtime":1609703021437,"results":"96","hashOfConfig":"64"},{"size":20354,"mtime":1609727877445,"results":"97","hashOfConfig":"64"},{"size":1197,"mtime":1609179928197,"results":"98","hashOfConfig":"64"},{"size":1006,"mtime":1609269476540,"results":"99","hashOfConfig":"64"},{"size":514,"mtime":1609702446849,"results":"100","hashOfConfig":"64"},{"size":5317,"mtime":1608071117729,"results":"101","hashOfConfig":"64"},{"size":1130,"mtime":1609702714099,"results":"102","hashOfConfig":"64"},{"size":797,"mtime":1609703161811,"results":"103","hashOfConfig":"64"},{"size":28824,"mtime":1608073434208,"results":"104","hashOfConfig":"64"},{"size":6846,"mtime":1609706261653,"results":"105","hashOfConfig":"64"},{"size":2265,"mtime":1609702791860,"results":"106","hashOfConfig":"64"},{"size":1336,"mtime":1609702998431,"results":"107","hashOfConfig":"64"},{"size":818,"mtime":1608316788472,"results":"108","hashOfConfig":"64"},{"size":885,"mtime":1608316877826,"results":"109","hashOfConfig":"64"},{"size":3691,"mtime":1609701840870,"results":"110","hashOfConfig":"64"},{"size":6823,"mtime":1609711113692,"results":"111","hashOfConfig":"64"},{"size":4969,"mtime":1609709762811,"results":"112","hashOfConfig":"64"},{"size":451,"mtime":1608297776236,"results":"113","hashOfConfig":"64"},{"size":638,"mtime":1608298103404,"results":"114","hashOfConfig":"64"},{"size":413,"mtime":1609703087796,"results":"115","hashOfConfig":"64"},{"size":4609,"mtime":1609702640322,"results":"116","hashOfConfig":"64"},{"size":9842,"mtime":1609708653718,"results":"117","hashOfConfig":"64"},{"size":669,"mtime":1609703198162,"results":"118","hashOfConfig":"64"},{"size":5964,"mtime":1609703298878,"results":"119","hashOfConfig":"64"},{"size":7049,"mtime":1608336374031,"results":"120","hashOfConfig":"64"},{"size":1081,"mtime":1608334762874,"results":"121","hashOfConfig":"64"},{"size":385,"mtime":1609702877033,"results":"122","hashOfConfig":"64"},{"size":1930,"mtime":1607622928103,"results":"123","hashOfConfig":"64"},{"size":4618,"mtime":1607622928103,"results":"124","hashOfConfig":"64"},{"size":707,"mtime":1608334577070,"results":"125","hashOfConfig":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},"58sal0",{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"128"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"128"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"128"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"144"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"128"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"128"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"212"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"215"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"128"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"128"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"236","usedDeprecatedRules":"128"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"128"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"128"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"247","usedDeprecatedRules":"128"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"128"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"255","usedDeprecatedRules":"128"},{"filePath":"256","messages":"257","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"128"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"128"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"128"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"272"},"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\index.js",[],["273","274"],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\serviceWorker.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\App.js",["275"],"import React, { useEffect } from 'react';\r\nimport Cambiador from './componentes/Cambiador';\r\nimport CambiadorPublico from './componentes/CambiadorPublico';\r\nimport { connect } from 'react-redux';\r\n//import obtenerEstadoUsuarioTest from './funciones/login/obtenerEstadoUsuarioTest';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport axios from 'axios';\r\nimport data from './componentes/DataProcesos';\r\nimport './App.css';\r\nimport '../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { initializeIcons } from '@uifabric/icons';\r\ninitializeIcons();\r\n\r\n\r\nconst App = (props) => {\r\n  //let history = useHistory();\r\n  useEffect(()=>{\r\n    console.log(\"useEffect App 1\");\r\n    //obtenerEstadoUsuarioTest(props);\r\n    if(props.usuario!==null){\r\n      requestsProcesos(props.usuario,props.cargarProcesos).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n      requestBienvenida(props.usuario.correo,props.cargarBienvenida).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n      requestTutoriales(props.cargarTutoriales).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n    }\r\n    \r\n  },[props.usuario]);\r\n  return (\r\n    <>\r\n      \r\n      <CssBaseline />\r\n      \r\n      <Casos usuario={props.usuario} privado={props.usuario !== null} actualizarUser={props.actualizarUser} />\r\n      \r\n      \r\n\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nconst Casos = (props) => {\r\n  const privado = [<Cambiador usuario={props.usuario} actualizarUser={props.actualizarUser}/>];\r\n  const publico = [<CambiadorPublico usuario={props.usuario} actualizarUser={props.actualizarUser}/>];\r\n  return (\r\n    <>\r\n      {props.privado && privado}\r\n      {!props.privado && publico}\r\n    </>\r\n  );\r\n}\r\n\r\nconst actualizarUsuario = (usuario) => {\r\n  return {\r\n    type: 'ACTUALIZAR_USUARIO',\r\n    usuario: usuario,\r\n  }\r\n}\r\nconst cargarProcesos = (newState) => {\r\n  return {\r\n      type: 'CARGAR_PROCESOS',\r\n      newState: newState,\r\n    }  \r\n}\r\nconst cargarBienvenida = (newState) => {\r\n  return {\r\n      type: 'CARGAR_BIENVENIDA',\r\n      newState: newState,\r\n    }  \r\n}\r\nconst cargarTutoriales = (newState) => {\r\n  return {\r\n      type: 'CARGAR_TUTORIALES',\r\n      newState: newState,\r\n    }  \r\n}\r\n\r\nconst requestsProcesos = (usuario, cargarProcesos) => {\r\n    return new Promise((resolve, reject)=>{\r\n      var state = data;\r\n      axios.get(`http://127.0.0.1:8000/selection/list/${usuario.correo}/`)\r\n      .then(response=>{\r\n        console.log(response);\r\n        state = response.data.data;\r\n        state = state.map((i, index)=>{\r\n          var salida = i;\r\n          requestsCandidatosProceso(i.id).then(res=>{\r\n            salida = Object.assign(i,{candidatos:res});\r\n          }).catch(er=>console.log(er));\r\n          return salida;\r\n        });\r\n        cargarProcesos(state);\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(error);\r\n        cargarProcesos(state);\r\n        reject(false);\r\n      });\r\n    });\r\n}\r\n\r\nconst requestsCandidatosProceso = (idProceso) => {\r\n    return new Promise((resolve, reject)=>{\r\n      var candidatos;\r\n      axios.get(`http://127.0.0.1:8000/selection/${idProceso}/candidates/`)\r\n      .then(response=>{\r\n        console.log(response);\r\n        candidatos = response.data.data;\r\n        resolve(candidatos);\r\n      })\r\n      .catch(error=>{\r\n        console.log(error);\r\n        reject(error);\r\n      });\r\n    });\r\n}\r\n\r\nconst requestBienvenida = (correo, cargar) => {\r\n    return new Promise((resolve, reject)=>{\r\n      axios.get(`http://127.0.0.1:8000/selection/home/${correo}/`).then(response=>{\r\n        console.log(response);\r\n        cargar(response.data);\r\n\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(false);\r\n        reject(\"bienvenida\");\r\n      });\r\n    });\r\n}\r\n\r\nconst requestTutoriales = (cargar) => {\r\n    return new Promise((resolve, reject)=>{\r\n      axios.get(`http://127.0.0.1:8000/selection/tutorials/`).then(response=>{\r\n        console.log(response);\r\n        cargar(response.data);\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(false);\r\n        reject(error);\r\n      });\r\n    });\r\n}\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n    procesos: estado.procesos,\r\n    estilo: estado.estilo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        actualizarUser: (usuario) => despachar(actualizarUsuario(usuario)),\r\n        cargarProcesos: (newState) => despachar(cargarProcesos(newState)),\r\n        cargarBienvenida: (newState) => despachar(cargarBienvenida(newState)),\r\n        cargarTutoriales: (newState) => despachar(cargarTutoriales(newState)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Estilo.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\store\\index.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Cambiador.js",["276"],"import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { AddProcess, EditProcess, Error, Help,\r\n HelpTutorials, Historic, Login, Process, ViewProcess,\r\n  ViewProcessCalendar, ViewProcessMail, WelcomePage } from '../vistas/Vistas';\r\n\r\n\r\nimport LoginView from '../auth/LoginView';\r\nimport RegisterView from '../auth/RegisterView';\r\nimport MicroSoft from '../rose/Microsoft';\r\n\r\nimport AccountView from '../componentes/account';\r\n\r\n\r\nconst Cambiador = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={\"/AccountView\"} component={AccountView}/>\r\n\r\n      <Route exact path={\"/login/microsoft\"} component={MicroSoft}/>\r\n      <Route exact path={\"/LoginView\"} component={LoginView}/>\r\n      <Route exact path={\"/AddProcess\"} component={AddProcess}/>\r\n      <Route exact path={\"/EditProcess\"} component={EditProcess}/>\r\n      <Route exact path={\"/Error\"} component={Error}/>\r\n      <Route exact path={\"/Ayuda\"} component={Help}/>\r\n      <Route exact path={\"/HelpTutorials\"} component={HelpTutorials}/>\r\n      <Route exact path={\"/Historic\"} component={Historic}/>\r\n      <Route exact path={\"/Logi\"} component={Login}/>\r\n      <Route exact path={\"/Process\"} component={Process}/>\r\n      <Route exact path={\"/ViewProcess\"} component={ViewProcess}/>\r\n      <Route exact path={\"/ViewProcessCalendar\"} component={ViewProcessCalendar}/>\r\n      <Route exact path={\"/ViewProcessMail\"} component={ViewProcessMail}/>\r\n      <Route exact path={\"/\"} component={WelcomePage}/>\r\n      <Route exact path={\"/WelcomePage\"} component={WelcomePage}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n\r\nexport default Cambiador;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Navegacion.js",["277","278"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport { Build as BuildI } from '@material-ui/icons';\r\n\r\n\r\nconst Navegacion = (props) => {\r\n  let history = useHistory();\r\n  const handleClick = (ruta) => {\r\n    history.push(ruta);\r\n  }\r\n  return(\r\n    <div>\r\n      <AppBar color=\"white\" position=\"static\" >\r\n        <Toolbar>\r\n          <Typography variant=\"h2\" color=\"primary\" onClick={() => handleClick(\"/\")} >\r\n           {\"Rose\"}\r\n          </Typography>\r\n          {/*<IconButton edge=\"start\" color=\"primary\" aria-label=\"menu\" onClick={() => handleClick(\"Ruta\")}>\r\n            {\"Ruta\"}<BuildI/>\r\n          </IconButton>*/}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Navegacion;",["279","280"],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Tipografia.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Breakpoints.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Paleta.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\TipografiaResponsiva.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\funciones\\login\\obtenerEstadoUsuarioTest.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Vistas.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\WelcomePage.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcessCalendar.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcess.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcessMail.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Process.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Historic.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Login.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\HelpTutorials.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Error.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\EditProcess.js",["281","282","283"],"import React, { useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\nimport {\r\n  Box,\r\n  FormControlLabel,\r\n  Switch,\r\n  Badge,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../componentes/Page';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst AddProcess = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const [requirements_exp, setRequirements_exp] = useState(props.proceso[\"requirements\"][\"exp\"]);\r\n  const [requirements_idioms, setRequirements_idioms] = useState(props.proceso[\"requirements\"][\"idioms\"]);\r\n  const [requirements_skills, setRequirements_skills] = useState(props.proceso[\"requirements\"][\"skills\"]);\r\n  const [requirements_location, setRequirements_location] = useState(props.proceso[\"requirements\"][\"location\"]);\r\n  const [desired_exp, setDesired_exp] = useState(props.proceso[\"desired\"][\"exp\"]);\r\n  const [desired_skills, setDesired_skills] = useState(props.proceso[\"desired\"][\"skills\"]);\r\n  const [desired_college, setDesired_college] = useState(props.proceso[\"desired\"][\"college\"]);\r\n  const [desired_designation, setDesired_designation] = useState(props.proceso[\"desired\"][\"designation\"]);\r\n  const [desired_degree, setDesired_degree] = useState(props.proceso[\"desired\"][\"degree\"]);\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Add Process\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Formik\r\n            initialValues={{\r\n              name: props.proceso[\"name\"],\r\n              description: props.proceso[\"description\"],\r\n              vacant: props.proceso[\"vacant\"],\r\n              \r\n              area: props.proceso[\"area\"],\r\n              subarea: props.proceso[\"subarea\"],\r\n              industry: props.proceso[\"industry\"],\r\n              is_remote: props.proceso[\"is_remote\"],\r\n              \r\n              \r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                name: Yup.string().max(255).required('Nombre es requerido'),\r\n              })\r\n            }\r\n            onSubmit={(values, actions) => {\r\n              \r\n              var payload = {\r\n                \"name\": values.name,\r\n                \"vacant\": values.vacant,\r\n                \"description\": values.description,\r\n                \"area\": values.area,\r\n                \"subarea\": values.subarea,\r\n                \"industry\": values.industry,\r\n                \"is_remote\": values.is_remote,\r\n                \"status\": props.proceso[\"status\"],\r\n                \"requirements\":{\r\n                  \"exp\": requirements_exp,\r\n                  \"idioms\": requirements_idioms,\r\n                  \"skills\": requirements_skills,\r\n                  \"location\": requirements_location,\r\n                },\r\n                \"desired\":{\r\n                  \"exp\": desired_exp,\r\n                  \"skills\": desired_skills,\r\n                  \"college\": desired_college,\r\n                  \"designation\": desired_designation,\r\n                  \"degree\": desired_degree,\r\n                },\r\n                \"kpis\": props.proceso[\"kpis\"],\r\n                \"storage_url\": props.proceso[\"storage_url\"],\r\n                \"user\": props.proceso[\"user\"],\r\n              };\r\n              \r\n              console.log(payload);\r\n              \r\n              \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Editar Proceso\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Llena los campos\r\n                  </Typography>\r\n                </Box>\r\n                <Grid container direction=\"row\" spacing={3}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      error={Boolean(touched.name && errors.name)}\r\n                      fullWidth\r\n                      helperText={touched.name && errors.name}\r\n                      label=\"Nombre Proceso\"\r\n                      margin=\"normal\"\r\n                      name=\"name\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.name}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      error={Boolean(touched.vacant && errors.vacant)}\r\n                      fullWidth\r\n                      helperText={touched.vacant && errors.vacant}\r\n                      label=\"Vacantes\"\r\n                      type=\"number\"\r\n                      margin=\"normal\"\r\n                      name=\"vacant\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.vacant}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      error={Boolean(touched.description && errors.description)}\r\n                      fullWidth\r\n                      helperText={touched.description && errors.description}\r\n                      label=\"Descripción del proceso\"\r\n                      margin=\"normal\"\r\n                      name=\"description\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.description}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" spacing={3}>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      error={Boolean(touched.area && errors.area)}\r\n                      fullWidth\r\n                      helperText={touched.area && errors.area}\r\n                      label=\"Área\"\r\n                      margin=\"normal\"\r\n                      name=\"area\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.area}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      error={Boolean(touched.subarea && errors.subarea)}\r\n                      fullWidth\r\n                      helperText={touched.subarea && errors.subarea}\r\n                      label=\"Subárea\"\r\n                      margin=\"normal\"\r\n                      name=\"subarea\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.subarea}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      error={Boolean(touched.industry && errors.industry)}\r\n                      fullWidth\r\n                      helperText={touched.industry && errors.industry}\r\n                      label=\"Industria\"\r\n                      margin=\"normal\"\r\n                      name=\"industry\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.industry}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid xs={2}>\r\n                    <FormControlLabel\r\n                      control={<Switch checked={values.is_remote} onChange={handleChange} name=\"is_remote\" />}\r\n                      label=\"¿Es remoto?\"\r\n                      labelPlacement=\"top\"\r\n                    />\r\n\r\n                  </Grid>\r\n                </Grid>\r\n                <br/>\r\n                <Grid container direction=\"row\" spacing={4}>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                      <Grid item>\r\n                        <Typography variant=\"h5\">Requisitos Mínimos</Typography>\r\n                      </Grid>\r\n                      \r\n                      <Grid item>\r\n                        <ArrayInputNumber data={requirements_exp} set={setRequirements_exp} label={\"Experiencia\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={requirements_idioms} set={setRequirements_idioms} label={\"Idiomas\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={requirements_skills} set={setRequirements_skills} label={\"Skills\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={requirements_location} set={setRequirements_location} label={\"Lugar\"}/>\r\n                      </Grid>\r\n                                            \r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                      <Grid item>\r\n                        <Typography variant=\"h5\">Requisitos Deseables</Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInputNumber data={desired_exp} set={setDesired_exp} label={\"Experiencia\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_skills} set={setDesired_skills} label={\"Skills\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_designation} set={setDesired_designation} label={\"Cargos\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_college} set={setDesired_college} label={\"Universidades\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_degree} set={setDesired_degree} label={\"Títulos\"}/>\r\n                      </Grid>\r\n                      \r\n                      \r\n                      \r\n                     \r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3} >\r\n                      <Grid item>\r\n                        <Box my={2}>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            disabled={false}\r\n                            style={{ \"min-height\": \"100px\" }}\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            \r\n                            variant=\"contained\"\r\n                          >\r\n                            ¡Traeme a los mejores!\r\n                          </Button>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst ArrayInputNumber = ({ data, set, label }) => {\r\n  const [valor, setValor] = useState(1);\r\n  const definir = () => {\r\n    set([...data, Number(valor)]);\r\n    setValor(1);\r\n  }\r\n  const actualizar = (i) => {\r\n    setValor(data[i]);\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const eliminar = (i) => {\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const inputtext = (e) => {\r\n    e.preventDefault();\r\n    setValor(e.target.value);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Grid container direction=\"row\" spacing={0}>\r\n          <Grid item xs={10}>\r\n            <TextField variant=\"outlined\" label={label} type=\"number\" fullWidth value={valor} onChange={inputtext}/>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={definir}>\r\n              <Icono nombre={'CircleAdditionSolid'} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          {data.map((i,index)=>(\r\n            <Grid item>\r\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\r\n              </Badge>\r\n            </Grid>\r\n          ))}\r\n          \r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    \r\n  );\r\n}\r\n\r\nconst ArrayInput = ({ data, set, label }) => {\r\n  const [valor, setValor] = useState(\"\");\r\n  const definir = () => {\r\n    set([...data, valor.toLowerCase()]);\r\n    setValor(\"\");\r\n    console.log(data);\r\n  }\r\n  const actualizar = (i) => {\r\n    setValor(data[i]);\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const eliminar = (i) => {\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const inputtext = (e) => {\r\n    e.preventDefault();\r\n    setValor(e.target.value);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Grid container direction=\"row\" spacing={0}>\r\n          <Grid item xs={10}>\r\n            <TextField variant=\"outlined\" label={label} type=\"text\" fullWidth value={valor} onChange={inputtext}/>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={definir}>\r\n              <Icono nombre={'CircleAdditionSolid'} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {data.length !== 0 && <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          {data.map((i,index)=>(\r\n            <Grid item>\r\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\r\n              </Badge>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>} \r\n      \r\n        \r\n      \r\n    </Grid>\r\n    \r\n  );\r\n}\r\n\r\nconst Icono = ({ nombre }) => {\r\n  return(\r\n    <Icon style={{\r\n      transform: 'scale(1.5)' \r\n    }} iconName={nombre}  />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    proceso: estado.procesos.filter(i=>i.id===estado.proceso)[0]\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProcess);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\AddProcess.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\routes.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Microsoft.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Google.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\index.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\TopBar.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\NavBar\\index.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\NavBar\\NavItem.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Procesos.js",["284","285","286","287"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport getInitials from './getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Procesos = ({ className, data, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\r\n  const [limite, definirLimite] = useState(10);\r\n  const [pagina, definirPagina] = useState(0);\r\n\r\n  const seleccionarTodos = (evento) => {\r\n    let nuevosIdSeleccionados;\r\n\r\n    if (evento.target.checked) {\r\n      nuevosIdSeleccionados = data.map((customer) => customer.id);\r\n    } else {\r\n      nuevosIdSeleccionados = [];\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const seleccionarUno = (evento, id) => {\r\n    const indiceSeleccionado = idSeleccionados.indexOf(id);\r\n    let nuevosIdSeleccionados = [];\r\n\r\n    if (indiceSeleccionado === -1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados, id);\r\n    } else if (indiceSeleccionado === 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(1));\r\n    } else if (indiceSeleccionado === idSeleccionados.length - 1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(0, -1));\r\n    } else if (indiceSeleccionado > 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(\r\n        idSeleccionados.slice(0, indiceSeleccionado),\r\n        idSeleccionados.slice(indiceSeleccionado + 1)\r\n      );\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const cambiarLimite = (evento) => {\r\n    definirLimite(evento.target.value);\r\n  };\r\n\r\n  const cambiarPagina = (evento, nuevaPagina) => {\r\n    definirPagina(nuevaPagina);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={idSeleccionados.length === data.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      idSeleccionados.length > 0\r\n                      && idSeleccionados.length < data.length\r\n                    }\r\n                    onChange={seleccionarTodos}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Nombre\r\n                </TableCell>\r\n                <TableCell>\r\n                  Creado\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n                <TableCell>\r\n                  Below\r\n                </TableCell>\r\n                <TableCell>\r\n                  Normal\r\n                </TableCell>\r\n                <TableCell>\r\n                  Outstanding\r\n                </TableCell>\r\n                \r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(limite*pagina, limite*(pagina+1)).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={idSeleccionados.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={idSeleccionados.indexOf(customer.id) !== -1}\r\n                      onChange={(evento) => seleccionarUno(evento, customer.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      <Avatar\r\n                        className={classes.avatar}\r\n                        src={customer.avatarUrl}\r\n                      >\r\n                        {getInitials(customer.nombre)}\r\n                      </Avatar>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.nombre}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.status}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.below}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.normal}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.outstanding}\r\n                  </TableCell>\r\n                  \r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        \r\n      <TablePagination\r\n        component=\"div\"\r\n        count={data.length}\r\n        onChangePage={cambiarPagina}\r\n        onChangeRowsPerPage={cambiarLimite}\r\n        page={pagina}\r\n        rowsPerPage={limite}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Procesos;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\DataProcesos.js",["288","289"],"import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"catamuñoz@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"fermaldonado@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },{\r\n    id: 10,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 11,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n];\r\n","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\AddProcess.js",["290","291","292","293","294"],"import React, { useRef, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\nimport {\r\n  Box,\r\n  FormControlLabel,\r\n  Switch,\r\n  Badge,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  IconButton,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from './Page';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { uploadFile } from 'react-s3';\r\nimport AWS from 'aws-sdk';\r\nimport ReactS3Uploader from 'react-s3-uploader';\r\n\r\n\r\n\r\nvar bucketName = 'rosev0';\r\nvar bucketRegion = 'us-east-2';\r\nvar IdentityPoolId = 'us-east-2:38d700f2-c99b-4c9e-9686-6ce21337d610';\r\n\r\nAWS.config.region = bucketRegion; // Region\r\nAWS.config.credentials = new AWS.CognitoIdentityCredentials({IdentityPoolId: IdentityPoolId,});\r\n\r\n\r\nconst s3 = new AWS.S3({\r\n  apiVersion: '2006-03-01',\r\n  params: {Bucket: bucketName}\r\n});\r\n//encodeURIComponent()\r\nconst uploadFile2 = (file,ruta) => {\r\n\r\ns3.upload({\r\n        Key: ruta,\r\n        Body: file,\r\n        ACL: 'public-read'\r\n        }, function(err, data) {\r\n        if(err) {\r\n        console.log('error s3',err,data);\r\n        }\r\n        alert('Successfully Uploaded!');\r\n        }).on('httpUploadProgress', function (progress) {\r\n        var uploaded = parseInt((progress.loaded * 100) / progress.total);\r\n        console.log(uploaded);\r\n      });\r\n}\r\n\r\nconst uploadFile22 = (file,ruta) => {\r\n  \r\n  \r\n  var upload = new AWS.S3.ManagedUpload({\r\n    params: {\r\n      Bucket: bucketName,\r\n      Key: ruta,\r\n      Body: file,\r\n      ACL: \"public-read\"\r\n    }\r\n  });\r\n\r\n  var promise = upload.promise();\r\n\r\n  promise.then(\r\n    function(data) {\r\n      alert(\"Successfully uploaded photo.\");\r\n    },\r\n    function(err) {\r\n      return alert(\"There was an error uploading your photo: \", err.message);\r\n    }\r\n  );\r\n  \r\n}\r\n\r\nconst uploadFile222 = (file,ruta) => {\r\n  var params = {\r\n    Bucket: 'rosev0',\r\n    Key: ruta,\r\n    Expires: 60,\r\n    ContentType: file.type,\r\n    ACL: \"public-read\"\r\n  };\r\n  s3.getSignedUrl('putObject', params, function(err, signedUrl){\r\n     if (err) {\r\n          console.log(\"error papi\",err);\r\n          return err;\r\n      } else {\r\n          console.log(\"Exito papi\",signedUrl);\r\n\r\n          var instance = axios.create();\r\n\r\n          instance.put(signedUrl, file, {headers: {'Content-Type': file.type}})\r\n              .then(function (result) {\r\n                  console.log(result);\r\n              })\r\n              .catch(function (err) {\r\n                  console.log(err.code);\r\n              });\r\n          return signedUrl;\r\n      }\r\n  });\r\n  \r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\nconst config = (string) => {\r\n  return {\r\n    bucketName: 'rosev0',\r\n    dirName: string, /* optional */\r\n    region: 'us-east-2',\r\n    accessKeyId: 'AKIAJEN4JB3CITFUIUFQ',\r\n    secretAccessKey: '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',\r\n  }\r\n}\r\n\r\n\r\n\r\nconst fecha = () => {\r\n  let fecha = new Date();\r\n  let dia = fecha.getDate();\r\n  let mes = fecha.getMonth() + 1;\r\n  let ano = fecha.getFullYear();\r\n  if(mes < 10){\r\n    return `${dia}-0${mes}-${ano}`;\r\n  }else{\r\n    return `${dia}-${mes}-${ano}`;\r\n  }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst AddProcess = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  const fileInput = useRef();\r\n  const handleFile = evento => {\r\n    evento.preventDefault();\r\n    console.log(fileInput.current.files[0]);\r\n  }\r\n\r\n  const onUpload = (e) =>{\r\n    console.log(e);\r\n  }\r\n\r\n  const [requirements_exp, setRequirements_exp] = useState([]);\r\n  const [requirements_idioms, setRequirements_idioms] = useState([]);\r\n  const [requirements_skills, setRequirements_skills] = useState([]);\r\n  const [requirements_location, setRequirements_location] = useState([]);\r\n  const [desired_exp, setDesired_exp] = useState([]);\r\n  const [desired_skills, setDesired_skills] = useState([]);\r\n  const [desired_college, setDesired_college] = useState([]);\r\n  const [desired_designation, setDesired_designation] = useState([]);\r\n  const [desired_degree, setDesired_degree] = useState([]);\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Add Process\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Formik\r\n            initialValues={{\r\n              name: \"Vamos\",\r\n              description: \"Proceso para desarrollador\",\r\n              vacant: 1,\r\n              \r\n              area: \"Industrial\",\r\n              subarea: \"TI\",\r\n              industry: \"TI\",\r\n              is_remote: false,\r\n              \r\n              file: null,\r\n              \r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                name: Yup.string().max(255).required('Nombre es requerido'),\r\n              })\r\n            }\r\n            onSubmit={(values, actions) => {\r\n              var date = fecha();\r\n              var email_cambiado = props.usuario.correo.replace(\"@\",\"_\");\r\n              var name_cambiado = values.name.replaceAll(\" \",\"_\");\r\n              const cvs = fileInput.current.files[0];\r\n              var ruta = `${email_cambiado}/${date}*${name_cambiado}*input/`;\r\n              var payload = {\r\n                \"name\": values.name,\r\n                \"vacant\": values.vacant,\r\n                \"description\": values.description,\r\n                \"area\": values.area,\r\n                \"subarea\": values.subarea,\r\n                \"industry\": values.industry,\r\n                \"is_remote\": values.is_remote,\r\n                \"status\": \"In progress\",\r\n                \"requirements\":{\r\n                  \"exp\": requirements_exp,\r\n                  \"idioms\": requirements_idioms,\r\n                  \"skills\": requirements_skills,\r\n                  \"location\": requirements_location,\r\n                },\r\n                \"desired\":{\r\n                  \"exp\": desired_exp,\r\n                  \"skills\": desired_skills,\r\n                  \"college\": desired_college,\r\n                  \"designation\": desired_designation,\r\n                  \"degree\": desired_degree,\r\n                },\r\n                \"kpis\": {},\r\n                \"storage_url\": ruta,\r\n                \"user\": props.usuario.correo,\r\n              };\r\n              \r\n              let configu = config(ruta);\r\n              console.log(payload);\r\n\r\n              uploadFile(cvs,configu);\r\n\r\n              //axios.post(\"http://127.0.0.1:8000/selection/create/\",payload).then(r=>{console.log(r);history.push('/');}).catch(e=>console.log(e));\r\n              //uploadFile(cvs, configu)\r\n                //.then(data => {\r\n                //  console.log(\"archivo exito\",data);\r\n                //  axios.post(\"http://127.0.0.1:8000/selection/create/\",payload).then(r=>{console.log(r);history.push('/');}).catch(e=>console.log(e));\r\n                //})\r\n                //.catch(err => {\r\n                //  console.error(\"error archivo\",err);\r\n                //  axios.post(\"http://127.0.0.1:8000/selection/create/\",payload).then(r=>{console.log(r);history.push('/');}).catch(e=>console.log(e));\r\n                //});\r\n              \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Nuevo Proceso\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Llena los campos\r\n                  </Typography>\r\n                </Box>\r\n                <Grid container direction=\"row\" spacing={3}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      error={Boolean(touched.name && errors.name)}\r\n                      fullWidth\r\n                      helperText={touched.name && errors.name}\r\n                      label=\"Nombre Proceso\"\r\n                      margin=\"normal\"\r\n                      name=\"name\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.name}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      error={Boolean(touched.vacant && errors.vacant)}\r\n                      fullWidth\r\n                      helperText={touched.vacant && errors.vacant}\r\n                      label=\"Vacantes\"\r\n                      type=\"number\"\r\n                      margin=\"normal\"\r\n                      name=\"vacant\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.vacant}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      error={Boolean(touched.description && errors.description)}\r\n                      fullWidth\r\n                      helperText={touched.description && errors.description}\r\n                      label=\"Descripción del proceso\"\r\n                      margin=\"normal\"\r\n                      name=\"description\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.description}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" spacing={3}>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      error={Boolean(touched.area && errors.area)}\r\n                      fullWidth\r\n                      helperText={touched.area && errors.area}\r\n                      label=\"Área\"\r\n                      margin=\"normal\"\r\n                      name=\"area\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.area}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      error={Boolean(touched.subarea && errors.subarea)}\r\n                      fullWidth\r\n                      helperText={touched.subarea && errors.subarea}\r\n                      label=\"Subárea\"\r\n                      margin=\"normal\"\r\n                      name=\"subarea\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.subarea}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      error={Boolean(touched.industry && errors.industry)}\r\n                      fullWidth\r\n                      helperText={touched.industry && errors.industry}\r\n                      label=\"Industria\"\r\n                      margin=\"normal\"\r\n                      name=\"industry\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.industry}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid xs={2}>\r\n                    <FormControlLabel\r\n                      control={<Switch checked={values.is_remote} onChange={handleChange} name=\"is_remote\" />}\r\n                      label=\"¿Es remoto?\"\r\n                      labelPlacement=\"top\"\r\n                    />\r\n\r\n                  </Grid>\r\n                </Grid>\r\n                <br/>\r\n                <Grid container direction=\"row\" spacing={4}>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                      <Grid item>\r\n                        <Typography variant=\"h5\">Requisitos Mínimos</Typography>\r\n                      </Grid>\r\n                      \r\n                      <Grid item>\r\n                        <ArrayInputNumber data={requirements_exp} set={setRequirements_exp} label={\"Experiencia\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={requirements_idioms} set={setRequirements_idioms} label={\"Idiomas\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={requirements_skills} set={setRequirements_skills} label={\"Skills\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={requirements_location} set={setRequirements_location} label={\"Lugar\"}/>\r\n                      </Grid>\r\n                                            \r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                      <Grid item>\r\n                        <Typography variant=\"h5\">Requisitos Deseables</Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInputNumber data={desired_exp} set={setDesired_exp} label={\"Experiencia\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_skills} set={setDesired_skills} label={\"Skills\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_designation} set={setDesired_designation} label={\"Cargos\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_college} set={setDesired_college} label={\"Universidades\"}/>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ArrayInput data={desired_degree} set={setDesired_degree} label={\"Títulos\"}/>\r\n                      </Grid>\r\n                      \r\n                      \r\n                      \r\n                     \r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3} >\r\n                      <br/><br/><br/><br/>\r\n                      <Grid item xs={12}>\r\n                        \r\n                          Subir CV's\r\n                          <input\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            ref={fileInput}\r\n          \r\n                          />\r\n                          <ReactS3Uploader\r\n                            signingUrl=\"/s3/sign\"\r\n                            signingUrlMethod=\"GET\"\r\n                            accept=\".zip,.rar,.7zip\"\r\n                            s3path=\"/uploads/\"\r\n                            onProgress={onUpload}\r\n                            onError={onUpload}\r\n                            onFinish={onUpload}\r\n                            \r\n                            uploadRequestHeaders={{ 'x-amz-acl': 'public-read' }}  // this is the default\r\n                            \r\n                            ref={fileInput}\r\n                            contentDisposition=\"auto\"\r\n                            />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Box my={2}>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            disabled={false}\r\n                            style={{ \"min-height\": \"100px\" }}\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            \r\n                            variant=\"contained\"\r\n                          >\r\n                            ¡Traeme a los mejores!\r\n                          </Button>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst ArrayInputNumber = ({ data, set, label }) => {\r\n  const [valor, setValor] = useState(1);\r\n  const definir = () => {\r\n    set([...data, Number(valor)]);\r\n    setValor(1);\r\n  }\r\n  const actualizar = (i) => {\r\n    setValor(data[i]);\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const eliminar = (i) => {\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const inputtext = (e) => {\r\n    e.preventDefault();\r\n    setValor(e.target.value);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Grid container direction=\"row\" spacing={0}>\r\n          <Grid item xs={10}>\r\n            <TextField variant=\"outlined\" label={label} type=\"number\" fullWidth value={valor} onChange={inputtext}/>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={definir}>\r\n              <Icono nombre={'CircleAdditionSolid'} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          {data.map((i,index)=>(\r\n            <Grid item>\r\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\r\n              </Badge>\r\n            </Grid>\r\n          ))}\r\n          \r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n    \r\n  );\r\n}\r\n\r\nconst ArrayInput = ({ data, set, label }) => {\r\n  const [valor, setValor] = useState(\"\");\r\n  const definir = () => {\r\n    set([...data, valor.toLowerCase()]);\r\n    setValor(\"\");\r\n    console.log(data);\r\n  }\r\n  const actualizar = (i) => {\r\n    setValor(data[i]);\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const eliminar = (i) => {\r\n    set([...data.slice(0,i), ...data.slice(i+1)]);\r\n  }\r\n  const inputtext = (e) => {\r\n    e.preventDefault();\r\n    setValor(e.target.value);\r\n  }\r\n  return (\r\n    <Grid container direction=\"column\" spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Grid container direction=\"row\" spacing={0}>\r\n          <Grid item xs={10}>\r\n            <TextField variant=\"outlined\" label={label} type=\"text\" fullWidth value={valor} onChange={inputtext}/>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <IconButton onClick={definir}>\r\n              <Icono nombre={'CircleAdditionSolid'} />\r\n            </IconButton>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {data.length !== 0 && <Grid item xs={12}>\r\n        <Grid container spacing={2}>\r\n          {data.map((i,index)=>(\r\n            <Grid item>\r\n              <Badge color=\"secondary\"  badgeContent={\"X\"} onClick={()=>eliminar(index)}>\r\n                <Button variant=\"outlined\" color=\"primary\" onClick={()=>actualizar(index)}>{i}</Button>\r\n              </Badge>\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Grid>} \r\n      \r\n        \r\n      \r\n    </Grid>\r\n    \r\n  );\r\n}\r\n\r\nconst Icono = ({ nombre }) => {\r\n  return(\r\n    <Icon style={{\r\n      transform: 'scale(1.5)' \r\n    }} iconName={nombre}  />\r\n  );\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProcess);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\Bienvenida.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\KPIWelcome.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\KPIContainer.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\index.js",["295","296","297","298","299","300","301","302","303","304"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Paginacion, TituloColumnaSeleccionador, CeldaColumnaSeleccionador } from './Elementos';\r\nimport getInitials from '../getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\nconst Tabla = ({ className, data, ...rest }) => {\r\n  const columnas = {\r\n    \"nombre\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:true, href:\"/ViewProcess\"},\r\n    \"createdAt\":{titulo:\"Creado\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"status\":{titulo:\"Status\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"below\":{titulo:\"Below\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    \"normal\":{titulo:\"Normal\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    \"outstanding\":{titulo:\"Outstanding\",color:\"textPrimary\",tamano:\"caption\",link:false, }\r\n  };\r\n  const classes = useStyles();\r\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\r\n  const [limite, definirLimite] = useState(7);\r\n  const [pagina, definirPagina] = useState(0);\r\n\r\n  const seleccionarTodos = (evento) => {\r\n    let nuevosIdSeleccionados;\r\n\r\n    if (evento.target.checked) {\r\n      nuevosIdSeleccionados = data.map((elemento) => elemento.id);\r\n    } else {\r\n      nuevosIdSeleccionados = [];\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const seleccionarUno = (evento, id) => {\r\n    const indiceSeleccionado = idSeleccionados.indexOf(id);\r\n    let nuevosIdSeleccionados = [];\r\n\r\n    if (indiceSeleccionado === -1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados, id);\r\n    } else if (indiceSeleccionado === 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(1));\r\n    } else if (indiceSeleccionado === idSeleccionados.length - 1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(0, -1));\r\n    } else if (indiceSeleccionado > 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(\r\n        idSeleccionados.slice(0, indiceSeleccionado),\r\n        idSeleccionados.slice(indiceSeleccionado + 1)\r\n      );\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const cambiarLimite = (evento) => {\r\n    definirLimite(evento.target.value);\r\n  };\r\n\r\n  const cambiarPagina = (evento, nuevaPagina) => {\r\n    definirPagina(nuevaPagina);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TituloColumnaSeleccionador \r\n                  chequeado={idSeleccionados.length === data.length}\r\n                  indeterminado={\r\n                      idSeleccionados.length > 0\r\n                      && idSeleccionados.length < data.length\r\n                    } \r\n                  seleccionarTodos={seleccionarTodos}\r\n                />\r\n                {Object.keys(columnas).map(nombreColumna=>(\r\n                  <TableCell>\r\n                    {columnas[nombreColumna].titulo}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(limite*pagina, limite*(pagina+1)).map((elemento) => (\r\n                <TableRow\r\n                  hover\r\n                  key={elemento.id}\r\n                  selected={idSeleccionados.indexOf(elemento.id) !== -1}\r\n                >\r\n                  <CeldaColumnaSeleccionador seleccion={(evento) => seleccionarUno(evento, elemento.id)} chequeado={idSeleccionados.indexOf(elemento.id) !== -1} />\r\n                  {Object.keys(columnas).map(nombreColumna=>(\r\n                    <TableCell>\r\n                      {typeof columnas[nombreColumna].href === 'undefined' ?\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      :\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                          component={RouterLink}\r\n                          to={columnas[nombreColumna].href}\r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      }\r\n                    </TableCell>  \r\n                  ))}                  \r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n      <Paginacion actual={data.length} cambiarPagina={cambiarPagina}\r\n        cambiarLimite={cambiarLimite} pagina={pagina} limite={limite}/>  \r\n      \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Tabla;",["305","306"],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Elementos.js",[],["307","308"],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Boton.js",["309","310","311","312","313","314","315","316","317","318","319"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  \r\n}));\r\n\r\nconst ProcessButton = ({ nombre, href, color, icon }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    \r\n    <Button\r\n    variant=\"contained\" color={color}\r\n    to={href}\r\n    component={RouterLink}\r\n    className={classes.root}\r\n    endIcon={<Icon style={{\r\n      transform: 'scale(1.5)' // Tune it\r\n    }} iconName={icon}  />}\r\n    >\r\n    {nombre} \r\n    </Button>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProcessButton;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\store\\dataProcesos.js",["320"],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Procesos.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\downloads\\DescargaExcel.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\KPI.js",["321","322","323","324"],"import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    borderRadius: theme.spacing(4),\r\n    backgroundColor: theme.palette.secondary.main,\r\n\r\n  },\r\n  icono: {\r\n    paddingTop: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst KPI = ({ nombre, cantidad, icon }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={8}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n              style={{ color: \"white\"}}\r\n            >\r\n              {nombre}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h1\"\r\n              style={{ color: \"white\"}}\r\n            >\r\n              {cantidad}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item item xs={4} >\r\n              <div className={classes.icono}>\r\n                {icon}\r\n              </div>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default KPI;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\KPIs.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\KPIContainer.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Msal.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\Calendar.js",["325","326","327","328","329","330"],"import React, { useState } from 'react';\r\nimport Dialogo from '../Dialogo';\r\nimport Editor from '../Editor';\r\nimport { Grid, InputAdornment, Switch, FormControlLabel, IconButton, Container, Button, makeStyles, Card, CardContent, TextField } from '@material-ui/core';\r\nimport { EditorState } from 'draft-js';\r\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\nconst Calendar = (props) => {\r\n  const { setOpen, open, usermail, candidatemail } = props;\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  return (\r\n    <Dialogo setOpen={setOpen} open={open} titulo={\"Nueva calendarización\"} >\r\n    \t<Formulario />\r\n  \t</Dialogo>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    color: theme.palette.grisoscuro,\r\n  },\r\n  nombre: {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  descripcion: {\r\n    paddingTop: theme.spacing(4),\r\n\r\n  },\r\n}));\r\n\r\nconst Formulario = (props) => {\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.root} spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Card className={classes.card}>\r\n          <Formik\r\n            initialValues={{\r\n              nombre: '',\r\n              fecha1: '',\r\n              fecha2: '',\r\n              asunto: '',\r\n              teams: false,\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              nombre: Yup.string().max(255).required('Debe definir el nombre del evento'),\r\n              asunto: Yup.string().max(255).required('Debe definir el asunto del email')\r\n            })}\r\n            onSubmit={(values, actions) => {\r\n              console.log({\"nombre\":values.nombre,\"fecha1\":values.fecha1,\"fecha2\":values.fecha2,\"asunto\":values.asunto,\"teams\":values.teams,\"html\":html});            \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit} >\r\n                <CardContent>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        error={Boolean(touched.nombre && errors.nombre)}\r\n                        fullWidth\r\n                        helperText={touched.nombre && errors.nombre}\r\n                        label=\"Nombre evento\"\r\n                        margin=\"normal\"\r\n                        name=\"nombre\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.nombre}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <TextField\r\n                        error={Boolean(touched.fecha1 && errors.fecha1)}\r\n                        fullWidth\r\n                        helperText={touched.fecha1 && errors.fecha1}\r\n                        InputProps={{\r\n\t\t\t\t            startAdornment: <InputAdornment position=\"start\">Inicio</InputAdornment>,\r\n\t\t\t\t          }}\r\n                        margin=\"normal\"\r\n                        name=\"fecha1\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"time\"\r\n                        value={values.fecha1}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                      <TextField\r\n                        error={Boolean(touched.fecha2 && errors.fecha2)}\r\n                        fullWidth\r\n                        helperText={touched.fecha2 && errors.fecha2}\r\n                        InputProps={{\r\n\t\t\t\t            startAdornment: <InputAdornment position=\"start\">Fin</InputAdornment>,\r\n\t\t\t\t          }}\r\n                        margin=\"normal\"\r\n                        name=\"fecha2\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"time\"\r\n                        value={values.fecha2}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={2}>\r\n                    \t<IconButton edge=\"end\" aria-label=\"calendar\"\r\n\t\t                  onClick={()=>console.log(\"Ver horarios\")}\r\n\t\t                >\r\n\t\t                \t<Icon iconName=\"TimelineMatrixView\" style={{transform: 'scale(1.3)'}}/>\r\n\t\t                </IconButton>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        error={Boolean(touched.asunto && errors.asunto)}\r\n                        fullWidth\r\n                        helperText={touched.asunto && errors.asunto}\r\n                        label=\"Asunto\"\r\n                        margin=\"normal\"\r\n                        name=\"asunto\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.asunto}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Editor editorState={editorState} setEditorState={setEditorState}/>\r\n                </CardContent>\r\n                <CardContent>\r\n                \t<Grid container>\r\n\t                \t<Grid xs={2}>\r\n\t\t                    <FormControlLabel\r\n\t\t                      control={<Switch checked={values.teams} onChange={handleChange} name=\"teams\" />}\r\n\t\t                      label=\"¿En MS Teams?\"\r\n\t\t                      labelPlacement=\"top\"\r\n\t\t                    />\r\n\t                  \t</Grid>\r\n\t                  \t<Grid xs={6}></Grid>\r\n\t                  \t<Grid xs={4}>\r\n\t\t                  <Button variant=\"contained\" fullWidth type=\"submit\" color=\"primary\">\r\n\t\t                    {\"Enviar mail\"}\r\n\t\t                  </Button>\r\n\t\t                </Grid>\r\n\t\t            </Grid>\r\n                </CardContent>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Card>\r\n      </Grid>\r\n      \r\n        \r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Calendar;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\Mail.js",["331","332","333","334","335","336"],"import React, { useState } from 'react';\r\nimport Dialogo from '../Dialogo';\r\nimport Editor from '../Editor';\r\nimport { Grid, Container, Button, makeStyles, Card, CardContent, TextField } from '@material-ui/core';\r\nimport { EditorState } from 'draft-js';\r\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst Mail = (props) => {\r\n  const { setOpen, open, usermail, candidatemail } = props;\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  return (\r\n    <Dialogo setOpen={setOpen} open={open} titulo={\"Nuevo Mensaje\"} >\r\n    \t<Formulario />\r\n  \t</Dialogo>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(1),\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    color: theme.palette.grisoscuro,\r\n  },\r\n  nombre: {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  descripcion: {\r\n    paddingTop: theme.spacing(4),\r\n\r\n  },\r\n}));\r\n\r\nconst Formulario = (props) => {\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container className={classes.root} spacing={3}>\r\n      <Grid item xs={12}>\r\n        <Card className={classes.card}>\r\n          <Formik\r\n            initialValues={{\r\n              para: '',\r\n              cc: '',\r\n              asunto: '',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              para: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\r\n              cc: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\r\n              asunto: Yup.string().max(255).required('Debe definir el asunto del email')\r\n            })}\r\n            onSubmit={(values, actions) => {\r\n              console.log({\"para\":values.para,\"cc\":values.cc,\"asunto\":values.asunto,\"html\":html});            \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit} >\r\n                <CardContent>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        error={Boolean(touched.para && errors.para)}\r\n                        fullWidth\r\n                        helperText={touched.para && errors.para}\r\n                        label=\"Destinatario\"\r\n                        margin=\"normal\"\r\n                        name=\"para\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.para}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        error={Boolean(touched.cc && errors.cc)}\r\n                        fullWidth\r\n                        helperText={touched.cc && errors.cc}\r\n                        label=\"Con copia\"\r\n                        margin=\"normal\"\r\n                        name=\"cc\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"email\"\r\n                        value={values.cc}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                      <TextField\r\n                        error={Boolean(touched.asunto && errors.asunto)}\r\n                        fullWidth\r\n                        helperText={touched.asunto && errors.asunto}\r\n                        label=\"Asunto\"\r\n                        margin=\"normal\"\r\n                        name=\"asunto\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.asunto}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Editor editorState={editorState} setEditorState={setEditorState}/>\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Button variant=\"contained\" type=\"submit\" color=\"primary\">\r\n                    {\"Enviar mail\"}\r\n                  </Button>\r\n                </CardContent>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Card>\r\n      </Grid>\r\n      \r\n        \r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Mail;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Dialogo.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Editor.js",["337"],"import React, { useState } from 'react';\r\n//import { EditorState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\n\r\nconst MyEditor = ({setEditorState,editorState}) => {\r\n  //const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const onEditorStateChange = (editorState) => {\r\n    setEditorState(editorState);\r\n };\r\nreturn (\r\n  <div>\r\n    <Editor \r\n      editorState={editorState}\r\n      wrapperClassName=\"rich-editor demo-wrapper\"\r\n      editorClassName=\"demo-editor\"\r\n      onEditorStateChange={onEditorStateChange}\r\n      placeholder=\"Escriba aquí\" />\r\n  </div>\r\n);\r\n}\r\nexport default MyEditor;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\CambiadorPublico.js",["338","339","340","341","342","343","344","345","346","347","348","349","350"],"import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { AddProcess, EditProcess, Error, HelpIssue,\r\n HelpTutorials, Historic, Login, Process, ViewProcess,\r\n  ViewProcessCalendar, ViewProcessMail, WelcomePage } from '../vistas/Vistas';\r\n\r\n\r\nimport LoginView from '../auth/LoginView';\r\nimport RegisterView from '../auth/RegisterView';\r\nimport MicroSoft from '../rose/Microsoft';\r\n\r\n\r\n\r\nconst Cambiador = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={\"/\"} component={LoginView}/>\r\n      <Route exact path={\"/Registro\"} component={RegisterView}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n\r\nexport default Cambiador;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Historico.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Help.js",["351"],"import React, { useState } from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport Boton from '../componentes/Boton2';\r\nimport Editor from '../componentes/Editor';\r\nimport { EditorState } from 'draft-js';\r\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { \r\n  Card,\r\n  Button,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  TextField,\r\n  Typography\r\n  } from '@material-ui/core';\r\nimport Youtube from 'react-youtube';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Help = (props) => {\r\n  const [tutorial, setTutorial] = useState(true);\r\n  const irTutoriales = () => {\r\n  \tsetTutorial(true);\r\n  \tconsole.log(tutorial);\r\n  }\r\n  const irIssues = () => {\r\n  \tsetTutorial(false);\r\n  \tconsole.log(tutorial);\r\n  }\r\n  return (\r\n    <Contenedor>\r\n    \t<Grid container>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t\t<Grid container>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Ver Tutoriales\"} href={\"#\"} clickear={irTutoriales} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Crear Incidencia\"} href={\"#\"} clickear={irIssues} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t</Grid>\r\n    \t\t</Grid>\r\n    \t\t<Grid item >\r\n    \t\t\t{tutorial ? <Tutoriales tutoriales={props.tutoriales}/> : <Issue />}\r\n    \t\t</Grid>\r\n    \t</Grid>\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3),\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    color: theme.palette.grisoscuro,\r\n  },\r\n  nombre: {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  descripcion: {\r\n    paddingTop: theme.spacing(4),\r\n\r\n  },\r\n}));\r\n\r\nconst Tutoriales = ({ className, tutoriales }) => {\r\n  const classes = useStyles();\r\n  const youtube_options = {\r\n    height: '360',\r\n    width: '600',\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const data = tutoriales.data;\r\n  console.log(\"Tuto\",data);\r\n  const getVideoId = (string) =>{\r\n    const separador = 'https://www.youtube.com/watch?v=';\r\n    return string.split(separador)[1];\r\n  };\r\n  const _onReady = (event) => {\r\n    // access to player in all event handlers via event.target\r\n    event.target.pauseVideo();\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={12}>\r\n        <Card\r\n          className={classes.card}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              align=\"center\"\r\n              gutterBottom\r\n              variant=\"h1\"\r\n            >\r\n              {\"Tutoriales\"}\r\n            </Typography>\r\n          </CardContent>\r\n          {tutoriales !== null ? \r\n            <>\r\n            {data.map((i,index)=>(\r\n              <CardContent>\r\n                <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Youtube\r\n                      videoId={getVideoId(i.value)}\r\n                      opts={youtube_options}\r\n                      onReady={_onReady}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container>\r\n                      <Grid item xs={12}>\r\n                        <Typography\r\n                          align=\"center\"\r\n                          color=\"textPrimary\"\r\n                          variant=\"h5\"\r\n                          className={classes.nombre}\r\n                        >\r\n                          {i.name}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Typography\r\n                          align=\"center\"\r\n                          color=\"textPrimary\"\r\n                          variant=\"body1\"\r\n                          className={classes.descripcion}\r\n                        >\r\n                          {i.description}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={2}></Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            ))}</>\r\n          :\r\n            <>\"Tutoriales aún no cargados\"</>\r\n          }\r\n          <CardContent>\r\n            <Grid container>\r\n              <Grid item xs={6}>\r\n                <Youtube\r\n                  videoId={\"I-1oJnmr6nk\"}\r\n                  opts={youtube_options}\r\n                  onReady={_onReady}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <Typography\r\n                      align=\"center\"\r\n                      color=\"textPrimary\"\r\n                      variant=\"h5\"\r\n                      className={classes.nombre}\r\n                    >\r\n                      {\"Un tema\"}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography\r\n                      align=\"center\"\r\n                      color=\"textPrimary\"\r\n                      variant=\"body1\"\r\n                      className={classes.descripcion}\r\n                    >\r\n                      {\"Para distraerse\"}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}></Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\n\r\nconst Issue = (props) => {\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  const classes = useStyles();\r\n  return (\r\n  \t<Grid container className={classes.root} spacing={3}>\r\n  \t\t<Grid item xs={1}></Grid>\r\n      <Grid item xs={10}>\r\n        <Card className={classes.card}>\r\n          <Formik\r\n            initialValues={{\r\n              titulo: '',\r\n              email: '',\r\n              modulo: '',\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              titulo: Yup.string().max(255).required('Debe definir un titulo para el problema'),\r\n              email: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\r\n              modulo: Yup.string().max(255).required('Debe definir el módulo del error')\r\n            })}\r\n            onSubmit={(values, actions) => {\r\n              console.log({\"titulo\":values.titulo,\"email\":values.email,\"modulo\":values.modulo,\"html\":html});            \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit} >\r\n                <CardContent>\r\n            \t\t\t<Grid container spacing={3}>\r\n            \t\t\t\t<Grid item xs={6}>\r\n                      <TextField\r\n                        error={Boolean(touched.titulo && errors.titulo)}\r\n                        fullWidth\r\n                        helperText={touched.titulo && errors.titulo}\r\n                        label=\"Título del problema\"\r\n                        margin=\"normal\"\r\n                        name=\"titulo\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.titulo}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        error={Boolean(touched.email && errors.email)}\r\n                        fullWidth\r\n                        helperText={touched.email && errors.email}\r\n                        label=\"Email de contacto\"\r\n                        margin=\"normal\"\r\n                        name=\"email\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"email\"\r\n                        value={values.email}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={3}>\r\n                      <TextField\r\n                        error={Boolean(touched.modulo && errors.modulo)}\r\n                        fullWidth\r\n                        helperText={touched.modulo && errors.modulo}\r\n                        label=\"Título del problema\"\r\n                        margin=\"normal\"\r\n                        name=\"modulo\"\r\n                        onBlur={handleBlur}\r\n                        onChange={handleChange}\r\n                        type=\"text\"\r\n                        value={values.modulo}\r\n                        variant=\"outlined\"\r\n                      />\r\n                    </Grid>\r\n            \t\t\t</Grid>\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Editor editorState={editorState} setEditorState={setEditorState}/>\r\n                </CardContent>\r\n                <CardContent>\r\n                  <Button variant=\"contained\" type=\"submit\" color=\"primary\">\r\n                    {\"Crear incidencia\"}\r\n                  </Button>\r\n                </CardContent>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Card>\r\n  \t\t</Grid>\r\n      <Grid item xs={1}></Grid>\r\n  \t\t\r\n        \r\n  \t</Grid>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    tutoriales: estado.tutoriales,\r\n  }\r\n}\r\nconst mapDispatchToProps = despachar => {\r\n    return {}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Help);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Boton2.js",["352","353","354","355","356","357","358","359","360","361","362"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  \r\n}));\r\n\r\nconst ProcessButton = ({ nombre, href, clickear }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    \r\n    <Button\r\n    variant=\"contained\" color=\"primary\"\r\n    to={href}\r\n    component={RouterLink}\r\n    className={classes.root}\r\n    onClick={clickear}\r\n    >\r\n    {nombre}\r\n    </Button>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProcessButton;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\auth\\LoginView.js",["363","364"],"import React from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport MicroSoft from '../rose/Microsoft';\r\nimport Google from '../rose/Google';\r\nimport { connect } from 'react-redux';\r\nimport Page from '../componentes/Page';\r\nimport rosee from '../images/rose_title.png';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    backgroundColor: \"white\",\r\n    padding: theme.spacing(5),\r\n    borderRadius: theme.spacing(7),\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      borderRadius: theme.spacing(5),\r\n    },\r\n  },\r\n  container: {\r\n    backgroundColor: theme.palette.success.main,\r\n    height: window.innerHeight,\r\n  },\r\n}));\r\n\r\n\r\nconst LoginView = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  return (\r\n    \r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n      className={classes.container}\r\n    >\r\n      <Container maxWidth=\"sm\" className={classes.form} >\r\n        <Formik\r\n          initialValues={{\r\n            email: '',\r\n            password: ''\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            email: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\r\n            password: Yup.string().max(255).required('La contraseña es requerida')\r\n          })}\r\n          onSubmit={(values, actions) => {\r\n            console.log({\"email\":values.email,\"password\":values.password});\r\n            axios.post(\"http://127.0.0.1:8000/auth/login/\",\r\n              {\"email\":values.email,\"password\":values.password}\r\n            ).then(r=>{\r\n              console.log(r);\r\n              props.actualizarUser({\r\n                nombre:r.data.username,\r\n                correo: r.data.email,\r\n                response: r,\r\n              });\r\n              history.push('/WelcomePage');\r\n            }).catch(r=>{console.log(r);history.push('/');});\r\n            \r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            touched,\r\n            values\r\n          }) => (\r\n            <form onSubmit={handleSubmit} >\r\n              <Box mb={3}>\r\n                <img src={rosee} alt=\"rose\" width=\"100%\"/>\r\n              </Box>\r\n              <TextField\r\n                error={Boolean(touched.email && errors.email)}\r\n                fullWidth\r\n                helperText={touched.email && errors.email}\r\n                label=\"Correo\"\r\n                margin=\"normal\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.password && errors.password)}\r\n                fullWidth\r\n                helperText={touched.password && errors.password}\r\n                label=\"Contraseña\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                value={values.password}\r\n                variant=\"outlined\"\r\n              />\r\n              <Box my={2}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Ingresar\r\n                </Button>\r\n              </Box>\r\n              <Box\r\n                mt={3}\r\n                mb={1}\r\n              >\r\n                <Typography\r\n                  align=\"center\"\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  o ingresa con\r\n                </Typography>\r\n              </Box>\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={2}\r\n                  md={4}\r\n                ></Grid>\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  md={2}\r\n                >\r\n                  <MicroSoft actualizarUser={props.actualizarUser}/>\r\n                </Grid>\r\n                \r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  md={2}\r\n                >\r\n                  <Google actualizarUser={props.actualizarUser}/>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={2}\r\n                  md={4}\r\n                ></Grid>\r\n              </Grid>\r\n              \r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst EnlaceRegistro = (props) => {\r\n  return(\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      variant=\"body1\"\r\n    >\r\n      ¿No tienes cuenta?\r\n      {' '}\r\n      <Link\r\n        component={RouterLink}\r\n        to=\"/registro\"\r\n        variant=\"h6\"\r\n      >\r\n        Registrate\r\n      </Link>\r\n    </Typography>\r\n  );\r\n}\r\nconst actualizarUsuario = (usuario) => {\r\n  return {\r\n    type: 'ACTUALIZAR_USUARIO',\r\n    usuario: usuario,\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        actualizarUser: (usuario) => despachar(actualizarUsuario(usuario)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);\r\n\r\n","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\auth\\RegisterView.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\index.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Page.js",["365"],"import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\Profile.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\ProfileDetails.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\GlobalStyles.js",[],["366","367"],{"ruleId":"368","replacedBy":"369"},{"ruleId":"370","replacedBy":"371"},{"ruleId":"372","severity":1,"message":"373","line":33,"column":5,"nodeType":"374","endLine":33,"endColumn":20,"suggestions":"375"},{"ruleId":"376","severity":1,"message":"377","line":9,"column":8,"nodeType":"378","messageId":"379","endLine":9,"endColumn":20},{"ruleId":"376","severity":1,"message":"380","line":3,"column":27,"nodeType":"378","messageId":"379","endLine":3,"endColumn":37},{"ruleId":"376","severity":1,"message":"381","line":4,"column":19,"nodeType":"378","messageId":"379","endLine":4,"endColumn":25},{"ruleId":"368","replacedBy":"382"},{"ruleId":"370","replacedBy":"383"},{"ruleId":"376","severity":1,"message":"384","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":23},{"ruleId":"376","severity":1,"message":"385","line":20,"column":8,"nodeType":"378","messageId":"379","endLine":20,"endColumn":13},{"ruleId":"376","severity":1,"message":"386","line":38,"column":7,"nodeType":"378","messageId":"379","endLine":38,"endColumn":14},{"ruleId":"376","severity":1,"message":"387","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":12},{"ruleId":"376","severity":1,"message":"388","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":17},{"ruleId":"376","severity":1,"message":"389","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":24},{"ruleId":"376","severity":1,"message":"390","line":19,"column":3,"nodeType":"378","messageId":"379","endLine":19,"endColumn":9},{"ruleId":"376","severity":1,"message":"391","line":1,"column":16,"nodeType":"378","messageId":"379","endLine":1,"endColumn":20},{"ruleId":"392","severity":1,"message":"393","line":3,"column":1,"nodeType":"394","endLine":904,"endColumn":3},{"ruleId":"376","severity":1,"message":"395","line":41,"column":7,"nodeType":"378","messageId":"379","endLine":41,"endColumn":18},{"ruleId":"376","severity":1,"message":"396","line":58,"column":7,"nodeType":"378","messageId":"379","endLine":58,"endColumn":19},{"ruleId":"376","severity":1,"message":"397","line":83,"column":7,"nodeType":"378","messageId":"379","endLine":83,"endColumn":20},{"ruleId":"376","severity":1,"message":"386","line":156,"column":7,"nodeType":"378","messageId":"379","endLine":156,"endColumn":14},{"ruleId":"376","severity":1,"message":"398","line":158,"column":9,"nodeType":"378","messageId":"379","endLine":158,"endColumn":19},{"ruleId":"376","severity":1,"message":"387","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":12},{"ruleId":"376","severity":1,"message":"388","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":17},{"ruleId":"376","severity":1,"message":"399","line":4,"column":8,"nodeType":"378","messageId":"379","endLine":4,"endColumn":14},{"ruleId":"376","severity":1,"message":"389","line":5,"column":8,"nodeType":"378","messageId":"379","endLine":5,"endColumn":24},{"ruleId":"376","severity":1,"message":"400","line":8,"column":3,"nodeType":"378","messageId":"379","endLine":8,"endColumn":9},{"ruleId":"376","severity":1,"message":"401","line":9,"column":3,"nodeType":"378","messageId":"379","endLine":9,"endColumn":6},{"ruleId":"376","severity":1,"message":"402","line":11,"column":3,"nodeType":"378","messageId":"379","endLine":11,"endColumn":11},{"ruleId":"376","severity":1,"message":"403","line":16,"column":3,"nodeType":"378","messageId":"379","endLine":16,"endColumn":18},{"ruleId":"376","severity":1,"message":"390","line":20,"column":3,"nodeType":"378","messageId":"379","endLine":20,"endColumn":9},{"ruleId":"376","severity":1,"message":"404","line":23,"column":8,"nodeType":"378","messageId":"379","endLine":23,"endColumn":19},{"ruleId":"368","replacedBy":"405"},{"ruleId":"370","replacedBy":"406"},{"ruleId":"368","replacedBy":"407"},{"ruleId":"370","replacedBy":"408"},{"ruleId":"376","severity":1,"message":"387","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":12},{"ruleId":"376","severity":1,"message":"388","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":17},{"ruleId":"376","severity":1,"message":"400","line":5,"column":3,"nodeType":"378","messageId":"379","endLine":5,"endColumn":9},{"ruleId":"376","severity":1,"message":"401","line":6,"column":3,"nodeType":"378","messageId":"379","endLine":6,"endColumn":6},{"ruleId":"376","severity":1,"message":"409","line":8,"column":3,"nodeType":"378","messageId":"379","endLine":8,"endColumn":7},{"ruleId":"376","severity":1,"message":"410","line":9,"column":3,"nodeType":"378","messageId":"379","endLine":9,"endColumn":14},{"ruleId":"376","severity":1,"message":"411","line":10,"column":3,"nodeType":"378","messageId":"379","endLine":10,"endColumn":7},{"ruleId":"376","severity":1,"message":"412","line":11,"column":3,"nodeType":"378","messageId":"379","endLine":11,"endColumn":13},{"ruleId":"376","severity":1,"message":"413","line":12,"column":3,"nodeType":"378","messageId":"379","endLine":12,"endColumn":9},{"ruleId":"376","severity":1,"message":"414","line":15,"column":8,"nodeType":"378","messageId":"379","endLine":15,"endColumn":25},{"ruleId":"376","severity":1,"message":"415","line":16,"column":8,"nodeType":"378","messageId":"379","endLine":16,"endColumn":17},{"ruleId":"392","severity":1,"message":"393","line":3,"column":1,"nodeType":"394","endLine":679,"endColumn":3},{"ruleId":"376","severity":1,"message":"400","line":3,"column":3,"nodeType":"378","messageId":"379","endLine":3,"endColumn":9},{"ruleId":"376","severity":1,"message":"401","line":4,"column":3,"nodeType":"378","messageId":"379","endLine":4,"endColumn":6},{"ruleId":"376","severity":1,"message":"413","line":9,"column":3,"nodeType":"378","messageId":"379","endLine":9,"endColumn":9},{"ruleId":"416","severity":1,"message":"417","line":56,"column":22,"nodeType":"418","endLine":56,"endColumn":26},{"ruleId":"376","severity":1,"message":"419","line":4,"column":70,"nodeType":"378","messageId":"379","endLine":4,"endColumn":79},{"ruleId":"376","severity":1,"message":"420","line":6,"column":25,"nodeType":"378","messageId":"379","endLine":6,"endColumn":40},{"ruleId":"376","severity":1,"message":"421","line":12,"column":26,"nodeType":"378","messageId":"379","endLine":12,"endColumn":34},{"ruleId":"376","severity":1,"message":"422","line":12,"column":36,"nodeType":"378","messageId":"379","endLine":12,"endColumn":49},{"ruleId":"376","severity":1,"message":"423","line":13,"column":23,"nodeType":"378","messageId":"379","endLine":13,"endColumn":37},{"ruleId":"376","severity":1,"message":"424","line":14,"column":9,"nodeType":"378","messageId":"379","endLine":14,"endColumn":13},{"ruleId":"376","severity":1,"message":"419","line":4,"column":16,"nodeType":"378","messageId":"379","endLine":4,"endColumn":25},{"ruleId":"376","severity":1,"message":"420","line":6,"column":25,"nodeType":"378","messageId":"379","endLine":6,"endColumn":40},{"ruleId":"376","severity":1,"message":"421","line":11,"column":26,"nodeType":"378","messageId":"379","endLine":11,"endColumn":34},{"ruleId":"376","severity":1,"message":"422","line":11,"column":36,"nodeType":"378","messageId":"379","endLine":11,"endColumn":49},{"ruleId":"376","severity":1,"message":"423","line":12,"column":23,"nodeType":"378","messageId":"379","endLine":12,"endColumn":37},{"ruleId":"376","severity":1,"message":"424","line":13,"column":9,"nodeType":"378","messageId":"379","endLine":13,"endColumn":13},{"ruleId":"376","severity":1,"message":"425","line":1,"column":17,"nodeType":"378","messageId":"379","endLine":1,"endColumn":25},{"ruleId":"376","severity":1,"message":"426","line":3,"column":10,"nodeType":"378","messageId":"379","endLine":3,"endColumn":20},{"ruleId":"376","severity":1,"message":"427","line":3,"column":22,"nodeType":"378","messageId":"379","endLine":3,"endColumn":33},{"ruleId":"376","severity":1,"message":"428","line":3,"column":35,"nodeType":"378","messageId":"379","endLine":3,"endColumn":40},{"ruleId":"376","severity":1,"message":"429","line":3,"column":42,"nodeType":"378","messageId":"379","endLine":3,"endColumn":51},{"ruleId":"376","severity":1,"message":"430","line":4,"column":2,"nodeType":"378","messageId":"379","endLine":4,"endColumn":15},{"ruleId":"376","severity":1,"message":"431","line":4,"column":17,"nodeType":"378","messageId":"379","endLine":4,"endColumn":25},{"ruleId":"376","severity":1,"message":"432","line":4,"column":27,"nodeType":"378","messageId":"379","endLine":4,"endColumn":32},{"ruleId":"376","severity":1,"message":"433","line":4,"column":34,"nodeType":"378","messageId":"379","endLine":4,"endColumn":41},{"ruleId":"376","severity":1,"message":"434","line":4,"column":43,"nodeType":"378","messageId":"379","endLine":4,"endColumn":54},{"ruleId":"376","severity":1,"message":"435","line":5,"column":3,"nodeType":"378","messageId":"379","endLine":5,"endColumn":22},{"ruleId":"376","severity":1,"message":"436","line":5,"column":24,"nodeType":"378","messageId":"379","endLine":5,"endColumn":39},{"ruleId":"376","severity":1,"message":"437","line":5,"column":41,"nodeType":"378","messageId":"379","endLine":5,"endColumn":52},{"ruleId":"376","severity":1,"message":"438","line":10,"column":8,"nodeType":"378","messageId":"379","endLine":10,"endColumn":17},{"ruleId":"376","severity":1,"message":"420","line":6,"column":25,"nodeType":"378","messageId":"379","endLine":6,"endColumn":40},{"ruleId":"376","severity":1,"message":"387","line":2,"column":8,"nodeType":"378","messageId":"379","endLine":2,"endColumn":12},{"ruleId":"376","severity":1,"message":"388","line":3,"column":8,"nodeType":"378","messageId":"379","endLine":3,"endColumn":17},{"ruleId":"376","severity":1,"message":"400","line":5,"column":3,"nodeType":"378","messageId":"379","endLine":5,"endColumn":9},{"ruleId":"376","severity":1,"message":"401","line":6,"column":3,"nodeType":"378","messageId":"379","endLine":6,"endColumn":6},{"ruleId":"376","severity":1,"message":"409","line":8,"column":3,"nodeType":"378","messageId":"379","endLine":8,"endColumn":7},{"ruleId":"376","severity":1,"message":"410","line":9,"column":3,"nodeType":"378","messageId":"379","endLine":9,"endColumn":14},{"ruleId":"376","severity":1,"message":"411","line":10,"column":3,"nodeType":"378","messageId":"379","endLine":10,"endColumn":7},{"ruleId":"376","severity":1,"message":"412","line":11,"column":3,"nodeType":"378","messageId":"379","endLine":11,"endColumn":13},{"ruleId":"376","severity":1,"message":"413","line":12,"column":3,"nodeType":"378","messageId":"379","endLine":12,"endColumn":9},{"ruleId":"376","severity":1,"message":"414","line":15,"column":8,"nodeType":"378","messageId":"379","endLine":15,"endColumn":25},{"ruleId":"376","severity":1,"message":"415","line":16,"column":8,"nodeType":"378","messageId":"379","endLine":16,"endColumn":17},{"ruleId":"376","severity":1,"message":"439","line":19,"column":8,"nodeType":"378","messageId":"379","endLine":19,"endColumn":12},{"ruleId":"376","severity":1,"message":"440","line":181,"column":7,"nodeType":"378","messageId":"379","endLine":181,"endColumn":21},{"ruleId":"376","severity":1,"message":"441","line":2,"column":10,"nodeType":"378","messageId":"379","endLine":2,"endColumn":16},{"ruleId":"368","replacedBy":"442"},{"ruleId":"370","replacedBy":"443"},"no-native-reassign",["444"],"no-negated-in-lhs",["445"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.cargarBienvenida', 'props.cargarProcesos', and 'props.cargarTutoriales'. Either include them or remove the dependency array.","ArrayExpression",["446"],"no-unused-vars","'RegisterView' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'BuildI' is defined but never used.",["444"],["445"],"'useRef' is defined but never used.","'axios' is defined but never used.","'history' is assigned a value but never used.","'clsx' is defined but never used.","'PropTypes' is defined but never used.","'PerfectScrollbar' is defined but never used.","'Button' is defined but never used.","'uuid' is defined but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'uploadFile2' is assigned a value but never used.","'uploadFile22' is assigned a value but never used.","'uploadFile222' is assigned a value but never used.","'handleFile' is assigned a value but never used.","'moment' is defined but never used.","'Avatar' is defined but never used.","'Box' is defined but never used.","'Checkbox' is defined but never used.","'TablePagination' is defined but never used.","'getInitials' is defined but never used.",["444"],["445"],["444"],["445"],"'Card' is defined but never used.","'CardContent' is defined but never used.","'Grid' is defined but never used.","'Typography' is defined but never used.","'colors' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","'MoneyIcon' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'Container' is defined but never used.","'convertFromHTML' is defined but never used.","'usermail' is assigned a value but never used.","'candidatemail' is assigned a value but never used.","'setEditorState' is assigned a value but never used.","'html' is assigned a value but never used.","'useState' is defined but never used.","'AddProcess' is defined but never used.","'EditProcess' is defined but never used.","'Error' is defined but never used.","'HelpIssue' is defined but never used.","'HelpTutorials' is defined but never used.","'Historic' is defined but never used.","'Login' is defined but never used.","'Process' is defined but never used.","'ViewProcess' is defined but never used.","'ViewProcessCalendar' is defined but never used.","'ViewProcessMail' is defined but never used.","'WelcomePage' is defined but never used.","'MicroSoft' is defined but never used.","'Page' is defined but never used.","'EnlaceRegistro' is assigned a value but never used.","'Helmet' is defined but never used.",["444"],["445"],"no-global-assign","no-unsafe-negation",{"desc":"447","fix":"448"},"Update the dependencies array to be: [props.cargarBienvenida, props.cargarProcesos, props.cargarTutoriales, props.usuario]",{"range":"449","text":"450"},[1343,1358],"[props.cargarBienvenida, props.cargarProcesos, props.cargarTutoriales, props.usuario]"]