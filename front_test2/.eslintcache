[{"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\index.js":"1","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\serviceWorker.js":"2","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\App.js":"3","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Estilo.js":"4","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\store\\index.js":"5","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Cambiador.js":"6","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Navegacion.js":"7","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Tipografia.js":"8","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Breakpoints.js":"9","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Paleta.js":"10","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\TipografiaResponsiva.js":"11","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\funciones\\login\\obtenerEstadoUsuarioTest.js":"12","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Vistas.js":"13","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\WelcomePage.js":"14","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcessCalendar.js":"15","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcess.js":"16","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcessMail.js":"17","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Process.js":"18","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Historic.js":"19","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Login.js":"20","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\HelpTutorials.js":"21","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Error.js":"22","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\EditProcess.js":"23","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\AddProcess.js":"24","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\routes.js":"25","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Microsoft.js":"26","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Google.js":"27","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\index.js":"28","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\TopBar.js":"29","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\NavBar\\index.js":"30","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\NavBar\\NavItem.js":"31","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Procesos.js":"32","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\getInitials.js":"33","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\DataProcesos.js":"34","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\AddProcess.js":"35","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\Bienvenida.js":"36","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\KPIWelcome.js":"37","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\KPIContainer.js":"38","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\index.js":"39","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Elementos.js":"40","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Boton.js":"41","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\store\\dataProcesos.js":"42","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Procesos.js":"43","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\downloads\\DescargaExcel.js":"44","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\KPI.js":"45","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\KPIs.js":"46","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\KPIContainer.js":"47","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Msal.js":"48","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\Calendar.js":"49","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\Mail.js":"50","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Dialogo.js":"51","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Editor.js":"52","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\CambiadorPublico.js":"53","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Historico.js":"54","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Help.js":"55","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Boton2.js":"56","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\auth\\LoginView.js":"57","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\auth\\RegisterView.js":"58","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\index.js":"59","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Page.js":"60","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\Profile.js":"61","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\ProfileDetails.js":"62","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\GlobalStyles.js":"63"},{"size":875,"mtime":1608757100530,"results":"64","hashOfConfig":"65"},{"size":4636,"mtime":1607281121876,"results":"66","hashOfConfig":"65"},{"size":5180,"mtime":1609271698666,"results":"67","hashOfConfig":"65"},{"size":2366,"mtime":1609617121384,"results":"68","hashOfConfig":"65"},{"size":1809,"mtime":1609266327524,"results":"69","hashOfConfig":"65"},{"size":1624,"mtime":1609517105866,"results":"70","hashOfConfig":"65"},{"size":826,"mtime":1607369435746,"results":"71","hashOfConfig":"65"},{"size":267,"mtime":1608756718286,"results":"72","hashOfConfig":"65"},{"size":91,"mtime":1597501122000,"results":"73","hashOfConfig":"65"},{"size":767,"mtime":1609179779682,"results":"74","hashOfConfig":"65"},{"size":1653,"mtime":1597501122000,"results":"75","hashOfConfig":"65"},{"size":1224,"mtime":1609093384328,"results":"76","hashOfConfig":"65"},{"size":640,"mtime":1608319706904,"results":"77","hashOfConfig":"65"},{"size":1231,"mtime":1609268321647,"results":"78","hashOfConfig":"65"},{"size":184,"mtime":1607367986789,"results":"79","hashOfConfig":"65"},{"size":10554,"mtime":1609528905922,"results":"80","hashOfConfig":"65"},{"size":172,"mtime":1607367975169,"results":"81","hashOfConfig":"65"},{"size":4539,"mtime":1609178743873,"results":"82","hashOfConfig":"65"},{"size":3155,"mtime":1608318978615,"results":"83","hashOfConfig":"65"},{"size":3334,"mtime":1607621896545,"results":"84","hashOfConfig":"65"},{"size":227,"mtime":1607779768850,"results":"85","hashOfConfig":"65"},{"size":142,"mtime":1607367859744,"results":"86","hashOfConfig":"65"},{"size":219,"mtime":1607779468572,"results":"87","hashOfConfig":"65"},{"size":1671,"mtime":1608589595207,"results":"88","hashOfConfig":"65"},{"size":2355,"mtime":1607627343692,"results":"89","hashOfConfig":"65"},{"size":1808,"mtime":1609090739469,"results":"90","hashOfConfig":"65"},{"size":2079,"mtime":1609091390719,"results":"91","hashOfConfig":"65"},{"size":1552,"mtime":1609179644722,"results":"92","hashOfConfig":"65"},{"size":2075,"mtime":1609173949389,"results":"93","hashOfConfig":"65"},{"size":3039,"mtime":1609181126397,"results":"94","hashOfConfig":"65"},{"size":2256,"mtime":1609181173810,"results":"95","hashOfConfig":"65"},{"size":5618,"mtime":1608065976493,"results":"96","hashOfConfig":"65"},{"size":145,"mtime":1607782102834,"results":"97","hashOfConfig":"65"},{"size":39771,"mtime":1608295269561,"results":"98","hashOfConfig":"65"},{"size":19418,"mtime":1609622327495,"results":"99","hashOfConfig":"65"},{"size":1197,"mtime":1609179928197,"results":"100","hashOfConfig":"65"},{"size":1006,"mtime":1609269476540,"results":"101","hashOfConfig":"65"},{"size":545,"mtime":1608162853915,"results":"102","hashOfConfig":"65"},{"size":5317,"mtime":1608071117729,"results":"103","hashOfConfig":"65"},{"size":1552,"mtime":1608069686843,"results":"104","hashOfConfig":"65"},{"size":1048,"mtime":1609172884168,"results":"105","hashOfConfig":"65"},{"size":28824,"mtime":1608073434208,"results":"106","hashOfConfig":"65"},{"size":6993,"mtime":1609177404460,"results":"107","hashOfConfig":"65"},{"size":3321,"mtime":1609178239900,"results":"108","hashOfConfig":"65"},{"size":1371,"mtime":1609269604331,"results":"109","hashOfConfig":"65"},{"size":818,"mtime":1608316788472,"results":"110","hashOfConfig":"65"},{"size":885,"mtime":1608316877826,"results":"111","hashOfConfig":"65"},{"size":3739,"mtime":1608511590034,"results":"112","hashOfConfig":"65"},{"size":295,"mtime":1608294348254,"results":"113","hashOfConfig":"65"},{"size":1127,"mtime":1608302923244,"results":"114","hashOfConfig":"65"},{"size":451,"mtime":1608297776236,"results":"115","hashOfConfig":"65"},{"size":638,"mtime":1608298103404,"results":"116","hashOfConfig":"65"},{"size":648,"mtime":1608333894180,"results":"117","hashOfConfig":"65"},{"size":4973,"mtime":1608317790113,"results":"118","hashOfConfig":"65"},{"size":6162,"mtime":1609272725554,"results":"119","hashOfConfig":"65"},{"size":920,"mtime":1608320360135,"results":"120","hashOfConfig":"65"},{"size":6005,"mtime":1609176726127,"results":"121","hashOfConfig":"65"},{"size":7049,"mtime":1608336374031,"results":"122","hashOfConfig":"65"},{"size":1081,"mtime":1608334762874,"results":"123","hashOfConfig":"65"},{"size":425,"mtime":1608753006243,"results":"124","hashOfConfig":"65"},{"size":1930,"mtime":1607622928103,"results":"125","hashOfConfig":"65"},{"size":4618,"mtime":1607622928103,"results":"126","hashOfConfig":"65"},{"size":707,"mtime":1608334577070,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"58sal0",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"130"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"130"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"130"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"130"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"130"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"130"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"130"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"130"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"130"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"130"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"228"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"231","usedDeprecatedRules":"130"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"237","messages":"238","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"239","usedDeprecatedRules":"130"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"130"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"245","usedDeprecatedRules":"130"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"252","usedDeprecatedRules":"130"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"130"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"130"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"130"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"130"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"130"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"130"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"277","usedDeprecatedRules":"130"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"130"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"289","messages":"290","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"291"},"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\index.js",[],["292","293"],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\serviceWorker.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\App.js",["294","295","296","297","298","299","300","301"],"import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Navegacion from './componentes/Navegacion';\r\nimport Cambiador from './componentes/Cambiador';\r\nimport CambiadorPublico from './componentes/CambiadorPublico';\r\nimport { Grid } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport obtenerEstadoUsuarioTest from './funciones/login/obtenerEstadoUsuarioTest';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport axios from 'axios';\r\nimport {Helmet} from \"react-helmet\";\r\nimport data from './componentes/DataProcesos';\r\nimport './App.css';\r\nimport '../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport { initializeIcons } from '@uifabric/icons';\r\ninitializeIcons();\r\n\r\n\r\nconst App = (props) => {\r\n  //let history = useHistory();\r\n  useEffect(()=>{\r\n    console.log(\"useEffect App 1\");\r\n    //obtenerEstadoUsuarioTest(props);\r\n    if(props.usuario!==null){\r\n      requestsProcesos(props.usuario,props.cargarProcesos).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n      requestBienvenida(props.usuario.correo,props.cargarBienvenida).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n      requestTutoriales(props.cargarTutoriales).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n    }\r\n    \r\n  },[props.usuario]);\r\n  return (\r\n    <>\r\n      \r\n      <CssBaseline />\r\n      \r\n      <Casos usuario={props.usuario} privado={props.usuario !== null} actualizarUser={props.actualizarUser} />\r\n      \r\n      \r\n\r\n    </>\r\n    \r\n  );\r\n}\r\n\r\nconst Casos = (props) => {\r\n  const privado = [<Cambiador usuario={props.usuario} actualizarUser={props.actualizarUser}/>];\r\n  const publico = [<CambiadorPublico usuario={props.usuario} actualizarUser={props.actualizarUser}/>];\r\n  return (\r\n    <>\r\n      {props.privado && privado}\r\n      {!props.privado && publico}\r\n    </>\r\n  );\r\n}\r\n\r\nconst actualizarUsuario = (usuario) => {\r\n  return {\r\n    type: 'ACTUALIZAR_USUARIO',\r\n    usuario: usuario,\r\n  }\r\n}\r\nconst cargarProcesos = (newState) => {\r\n  return {\r\n      type: 'CARGAR_PROCESOS',\r\n      newState: newState,\r\n    }  \r\n}\r\nconst cargarBienvenida = (newState) => {\r\n  return {\r\n      type: 'CARGAR_BIENVENIDA',\r\n      newState: newState,\r\n    }  \r\n}\r\nconst cargarTutoriales = (newState) => {\r\n  return {\r\n      type: 'CARGAR_TUTORIALES',\r\n      newState: newState,\r\n    }  \r\n}\r\n\r\nconst requestsProcesos = (usuario, cargarProcesos) => {\r\n    return new Promise((resolve, reject)=>{\r\n      var state = data;\r\n      axios.get(`http://127.0.0.1:8000/selection/list/${usuario.correo}/`)\r\n      .then(response=>{\r\n        console.log(response);\r\n        state = response.data.data;\r\n        state = state.map((i, index)=>{\r\n          var salida = i;\r\n          requestsCandidatosProceso(i.id).then(res=>{\r\n            salida = Object.assign(i,{candidatos:res});\r\n          }).catch(er=>console.log(er));\r\n          return salida;\r\n        });\r\n        cargarProcesos(state);\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(error);\r\n        cargarProcesos(state);\r\n        reject(false);\r\n      });\r\n    });\r\n}\r\n\r\nconst requestsCandidatosProceso = (idProceso) => {\r\n    return new Promise((resolve, reject)=>{\r\n      var candidatos;\r\n      axios.get(`http://127.0.0.1:8000/selection/${idProceso}/candidates/`)\r\n      .then(response=>{\r\n        console.log(response);\r\n        candidatos = response.data.data;\r\n        resolve(candidatos);\r\n      })\r\n      .catch(error=>{\r\n        console.log(error);\r\n        reject(error);\r\n      });\r\n    });\r\n}\r\n\r\nconst requestBienvenida = (correo, cargar) => {\r\n    return new Promise((resolve, reject)=>{\r\n      axios.get(`http://127.0.0.1:8000/selection/home/${correo}/`).then(response=>{\r\n        console.log(response);\r\n        cargar(response.data);\r\n\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(false);\r\n        reject(\"bienvenida\");\r\n      });\r\n    });\r\n}\r\n\r\nconst requestTutoriales = (cargar) => {\r\n    return new Promise((resolve, reject)=>{\r\n      axios.get(`http://127.0.0.1:8000/selection/tutorials/`).then(response=>{\r\n        console.log(response);\r\n        cargar(response.data);\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(false);\r\n        reject(error);\r\n      });\r\n    });\r\n}\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n    procesos: estado.procesos,\r\n    estilo: estado.estilo,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        actualizarUser: (usuario) => despachar(actualizarUsuario(usuario)),\r\n        cargarProcesos: (newState) => despachar(cargarProcesos(newState)),\r\n        cargarBienvenida: (newState) => despachar(cargarBienvenida(newState)),\r\n        cargarTutoriales: (newState) => despachar(cargarTutoriales(newState)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Estilo.js",["302"],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\store\\index.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Cambiador.js",["303"],"import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { AddProcess, EditProcess, Error, Help,\r\n HelpTutorials, Historic, Login, Process, ViewProcess,\r\n  ViewProcessCalendar, ViewProcessMail, WelcomePage } from '../vistas/Vistas';\r\n\r\n\r\nimport LoginView from '../auth/LoginView';\r\nimport RegisterView from '../auth/RegisterView';\r\nimport MicroSoft from '../rose/Microsoft';\r\n\r\nimport AccountView from '../componentes/account';\r\n\r\n\r\nconst Cambiador = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={\"/AccountView\"} component={AccountView}/>\r\n\r\n      <Route exact path={\"/login/microsoft\"} component={MicroSoft}/>\r\n      <Route exact path={\"/LoginView\"} component={LoginView}/>\r\n      <Route exact path={\"/AddProcess\"} component={AddProcess}/>\r\n      <Route exact path={\"/EditProcess\"} component={EditProcess}/>\r\n      <Route exact path={\"/Error\"} component={Error}/>\r\n      <Route exact path={\"/Ayuda\"} component={Help}/>\r\n      <Route exact path={\"/HelpTutorials\"} component={HelpTutorials}/>\r\n      <Route exact path={\"/Historic\"} component={Historic}/>\r\n      <Route exact path={\"/Logi\"} component={Login}/>\r\n      <Route exact path={\"/Process\"} component={Process}/>\r\n      <Route exact path={\"/ViewProcess\"} component={ViewProcess}/>\r\n      <Route exact path={\"/ViewProcessCalendar\"} component={ViewProcessCalendar}/>\r\n      <Route exact path={\"/ViewProcessMail\"} component={ViewProcessMail}/>\r\n      <Route exact path={\"/\"} component={WelcomePage}/>\r\n      <Route exact path={\"/WelcomePage\"} component={WelcomePage}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n\r\nexport default Cambiador;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Navegacion.js",["304","305"],"import React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core';\r\nimport { Build as BuildI } from '@material-ui/icons';\r\n\r\n\r\nconst Navegacion = (props) => {\r\n  let history = useHistory();\r\n  const handleClick = (ruta) => {\r\n    history.push(ruta);\r\n  }\r\n  return(\r\n    <div>\r\n      <AppBar color=\"white\" position=\"static\" >\r\n        <Toolbar>\r\n          <Typography variant=\"h2\" color=\"primary\" onClick={() => handleClick(\"/\")} >\r\n           {\"Rose\"}\r\n          </Typography>\r\n          {/*<IconButton edge=\"start\" color=\"primary\" aria-label=\"menu\" onClick={() => handleClick(\"Ruta\")}>\r\n            {\"Ruta\"}<BuildI/>\r\n          </IconButton>*/}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\nexport default Navegacion;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Tipografia.js",["306"],"export default {\r\n\tfontFamily: [\r\n\t\t'Comfortaa',\r\n\t\t'-apple-system',\r\n\t\t'BlinkMacSystemFont',\r\n\t\t'\"Segoe UI\"',\r\n\t\t'Roboto',\r\n\t\t'\"Helvetica Neue\"',\r\n\t\t'Arial',\r\n\t\t'sans-serif',\r\n\t\t'\"Apple Color Emoji\"',\r\n\t\t'\"Segoe UI Emoji\"',\r\n\t\t'\"Segoe UI Symbol\"',\r\n\t].join(','),\r\n};","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Breakpoints.js",["307"],"export default {\r\nvalues: {\r\n\txs: 0,\r\n\tsm: 600,\r\n\tmd: 960,\r\n\tlg: 1280,\r\n\txl: 1920,\r\n\t},\r\n};","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\Paleta.js",["308","309","310","311","312","313","314"],"import purple from '@material-ui/core/colors/purple';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport red from '@material-ui/core/colors/red';\r\nimport teal from '@material-ui/core/colors/teal';\r\n\r\nexport default {\r\n\tprimary: {\r\n\t  main: \"#d3044c\",//rosado\r\n\t},\r\n\tsecondary: {\r\n\t  main: \"#044454\",//verde\r\n\t},\r\n\terror: {\r\n\t  main: \"#707070\",//gris oscuro\r\n\t},\r\n\twarning: {\r\n\t  main: \"#707070\",//gris oscuro\r\n\t},\r\n\tinfo: {\r\n\t  main: \"#044454\",//verde\r\n\t},\r\n\tsuccess: {\r\n\t  main: \"#A6A6A6\",//gris\r\n\t},\r\n\troseclaro:\"#FFE8F3\",\r\n\tgris: \"#A6A6A6\",\r\n\tgrisoscuro: \"#707070\",\r\n\t\r\n\tbackground: {\r\n      default: \"#FFF9FC\", //rosa claro\r\n    },\r\n};","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\estilo\\TipografiaResponsiva.js",["315"],"import { createMuiTheme } from '@material-ui/core/styles';\r\nimport puntos from './Breakpoints';\r\n\r\nconst theme = createMuiTheme({\r\n  breakpoints: puntos,\r\n});\r\n\r\n\r\nexport default {\r\n\th1:{\r\n\t  fontSize: '3.5rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '4.7rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '5.35rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '6.0rem',\r\n\t  },\r\n\t},\r\n\th2:{\r\n\t  fontSize: '2.375rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '2.9rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '3.33rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '3.75rem',\r\n\t  },\r\n\t},\r\n\th3:{\r\n\t  fontSize: '2rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '2.5rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '2.8rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '3.0rem',\r\n\t  },\r\n\t},\r\n\th4:{\r\n\t  fontSize: '1.56rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '1.8rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '2.02rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '2.02rem',\r\n\t  },\r\n\t},\r\n\th5:{\r\n\t  fontSize: '1.25rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '1.3rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '1.5rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '1.5rem',\r\n\t  },\r\n\t},\r\n\th6:{\r\n\t  fontSize: '1.13rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '1.25rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '1.25rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '1.25rem',\r\n\t  },\r\n\t},\r\n};","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\funciones\\login\\obtenerEstadoUsuarioTest.js",["316","317","318","319","320"],"import { loginPopup, ssoSilent, acquireTokenSilent, isMicrosoftLogged, Microsoft, logout } from '../../rose/Msal';\r\n\r\n \r\n\r\n\r\nconst useObtenerEstadoUsuarioTest = (props) => {\r\n\tif(props.usuario===null){\r\n        //console.log(isMicrosoftLogged());\r\n        //console.log(\"Sesión iniciada\");\r\n        //1° revisar microsoft\r\n        var userMicrosoft = isMicrosoftLogged();\r\n        if(userMicrosoft){\r\n            //console.log(\"isMicrosoftLogged\",userMicrosoft);\r\n            //ssoSilent();\r\n            //var token = acquireTokenSilent();\r\n            //console.log(\"Access token\",token);\r\n            //props.actualizarUser({\r\n            //  uid: userMicrosoft.accountIdentifier,\r\n            //  nombre:userMicrosoft.name,\r\n            //  correo: userMicrosoft.userName,\r\n            //  accessToken: token,\r\n            //  response: userMicrosoft,\r\n            //});\r\n            //Inicio de sesión microsoft logrado\r\n            logout();\r\n        }else{\r\n            //2° revisar google\r\n        }\r\n        {/*props.actualizarUser(Object.assign({},{\r\n          uid:\"uid\",\r\n          nombre: \"yo\",\r\n          correo: \"mi@email.cl\",\r\n        }));*/}\r\n    }\r\n    \r\n};\r\n\r\nexport default useObtenerEstadoUsuarioTest;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Vistas.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\WelcomePage.js",["321","322","323","324","325","326","327","328","329","330"],"import React, { useEffect, useState } from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport KPIWelcome from '../componentes/welcome/KPIWelcome';\r\nimport Bienvenida from '../componentes/welcome/Bienvenida';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { loginPopup, ssoSilent, acquireTokenSilent, isMicrosoftLogged, Microsoft, logout } from '../rose/Msal';\r\n\r\n\r\nconst WelcomePage = (props) => {\r\n  const estado = props.usuario !== null;\r\n  \r\n  return ( \r\n    <Contenedor>\r\n    \t{props.bienvenida===null ? \r\n        <p>No disponible</p>\r\n      :\r\n        <>\r\n          <Bienvenida bienvenida={props.bienvenida.welcome_message}>\r\n            <KPIWelcome data={props.bienvenida} />\r\n          </Bienvenida>\r\n\r\n          \r\n        </>\r\n      }\r\n      \r\n    </Contenedor>\r\n  );\r\n}\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n    procesos: estado.procesos,\r\n    estado: estado,\r\n    bienvenida: estado.bienvenida,\r\n  }\r\n}\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        actualizarUsuario: (usuario) => despachar({type: 'ACTUALIZAR_USUARIO',usuario: usuario}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WelcomePage);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcessCalendar.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcess.js",["331","332","333","334","335","336","337","338","339"],"import React, { useState } from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport { connect } from 'react-redux';\r\nimport Calendar from '../componentes/process/Calendar';\r\nimport Mail from '../componentes/process/Mail';\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Link,\r\n  Button,\r\n  Divider,\r\n} from '@material-ui/core';\r\nimport CalendarTodayTwoToneIcon from '@material-ui/icons/CalendarTodayTwoTone';\r\nimport MailTwoToneIcon from '@material-ui/icons/MailTwoTone';\r\nimport PictureAsPdfTwoToneIcon from '@material-ui/icons/PictureAsPdfTwoTone';\r\nimport KPIs from '../componentes/process/KPIs';\r\nimport Pdf from \"react-to-pdf\";\r\n\r\n\r\n\r\nconst ref = React.createRef();\r\n\r\nconst ViewProcess = (props) => {\r\n  const candidatosProceso = props.procesos.filter(i=>i.id===props.proceso_viewprocess)[0].candidatos;\r\n  const candidatoCV = candidatosProceso[props.candidato];\r\n  const [openMail, setOpenMail] = React.useState(false);\r\n  const [openCalendar, setOpenCalendar] = React.useState(false);\r\n  const columnas = {\r\n    \"name\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:false},\r\n    //\"profesion\":{titulo:\"Creado\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    //\"universidad\":{titulo:\"Status\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"mail\":{titulo:\"Below\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    //\"ciudad\":{titulo:\"Normal\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n  };\r\n  const columnasExcel = Object.keys(columnas).map(col => ({label:columnas[col].titulo,value:col}));\r\n  const candidatosProcesoExcel = candidatosProceso.map(i=>({name:i.name,mail:i.mail}));\r\n  console.log(candidatosProcesoExcel);\r\n  return (\r\n    <Contenedor>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <KPIs columnas={columnasExcel}\r\n            data={candidatosProceso}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} onClick={()=>console.log(props.usuario)}>\r\n          {\"Hola\"}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            <Grid item xs={5}>\r\n              <Lista \r\n                seleccionarCandidato={props.seleccionarCandidato}\r\n                candidatos={candidatosProceso}\r\n                setOpenMail={setOpenMail}\r\n                setOpenCalendar={setOpenCalendar}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7} onClick={()=>console.log(candidatoCV)}>\r\n              hola\r\n              <CV \r\n                candidato={candidatoCV}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      <Calendar setOpen={setOpenCalendar} open={openCalendar}/>\r\n      <Mail setOpen={setOpenMail} open={openMail} usermail={props.usuario.correo} candidatemail={candidatoCV.email}/>\r\n      {props.proceso_viewprocess}\r\n      {props.candidato}\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '&:hover':{\r\n      backgroundColor: theme.palette.primary.ligth,\r\n    },\r\n  }\r\n}));\r\n\r\nconst Lista = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      style={{paddingTop:30, maxHeight: 400, overflow: 'auto'}}\r\n    >\r\n    {props.candidatos.map((i,index)=>(\r\n      <ListItem button >\r\n        <div onClick={()=>{props.seleccionarCandidato(index);}}>\r\n        <Grid container >\r\n          <Grid item xs={7}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} paddingTop={10}>\r\n                <Typography variant=\"h6\">\r\n                  {i.name}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"caption\">\r\n                  {i.mail}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"body1\">\r\n                  {i.info.data.location[0]}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle2\">\r\n                  Exp: {i.info.data.exp}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={1}>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <IconButton edge=\"end\" aria-label=\"calendar\"\r\n                  onClick={()=>props.setOpenCalendar(true)}\r\n                >\r\n                  <CalendarTodayTwoToneIcon color=\"primary\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <IconButton edge=\"end\" aria-label=\"calendar\"\r\n                  onClick={()=>props.setOpenMail(true)}\r\n                >\r\n                  <MailTwoToneIcon color=\"primary\" />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        </div>\r\n      </ListItem>\r\n    ))}\r\n    \r\n    \r\n    </List>\r\n  );\r\n}\r\n\r\nconst CV = (props) => {\r\n  \r\n  return (\r\n    <div ref={ref}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={2} >\r\n            <Grid item xs={1}>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Typography variant=\"h6\">\r\n                {props.candidato.name}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.info.data.college.length > 0 && props.candidato.info.data.college[0]}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.mail}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.info.data.location.length > 0 && props.candidato.info.data.location[0]}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.info.data.phone.length > 0 && props.candidato.info.data.phone[0]}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={5} >\r\n              <br/>\r\n              \r\n              <Typography variant=\"body1\">\r\n                {props.candidato.info.data.graduation.length > 0 && props.candidato.info.data.graduation[0]}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.info.data.exp}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <Pdf targetRef={ref} filename=\"code-example.pdf\">\r\n                {({ toPdf }) => (\r\n                  <IconButton edge=\"end\" aria-label=\"pdf\" onClick={toPdf}>\r\n                    <PictureAsPdfTwoToneIcon color=\"primary\" fontSize=\"large\" />\r\n                  </IconButton>\r\n                )}\r\n              </Pdf>\r\n              \r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} height=\"10px\">\r\n          <br/>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant={\"subtitle2\"}>\r\n                {\"Trabajado en:\"}\r\n              </Typography>\r\n              <List>\r\n                {props.candidato.info.data.companies.length > 0 && props.candidato.info.data.companies.map(i=>(\r\n                  <ListItem>\r\n                    <Typography variant={\"caption\"}>\r\n                      {i}\r\n                    </Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant={\"subtitle2\"}>\r\n                {\"Trabajado como:\"}\r\n              </Typography>\r\n              <List>\r\n                {props.candidato.info.data.designation.length > 0 && props.candidato.info.data.designation.map(i=>(\r\n                  <ListItem>\r\n                    <Typography variant={\"caption\"}>\r\n                      {i}\r\n                    </Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <Grid item xs={12}>\r\n              <Typography variant={\"subtitle2\"}>\r\n                {\"Skills:\"}\r\n              </Typography>\r\n              <List>\r\n                {props.candidato.info.data.skills.length > 0 && props.candidato.info.data.skills.map(i=>(\r\n                  <ListItem>\r\n                    <Typography variant={\"caption\"}>\r\n                      {i}\r\n                    </Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant={\"subtitle2\"}>\r\n                {\"Idiomas:\"}\r\n              </Typography>\r\n              <List>\r\n                {props.candidato.info.data.idioms.length > 0 && props.candidato.info.data.idioms.map(i=>(\r\n                  <ListItem>\r\n                    <Typography variant={\"caption\"}>\r\n                      {i}\r\n                    </Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant={\"subtitle2\"}>\r\n                {\"Certificaciones:\"}\r\n              </Typography>\r\n              <List>\r\n                {props.candidato.info.data.certficiations.length > 0 && props.candidato.info.data.certficiations.map(i=>(\r\n                  <ListItem>\r\n                    <Typography variant={\"caption\"}>\r\n                      {i}\r\n                    </Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst seleccionarCandidato = (newIndex) => {\r\n  return {\r\n    type: 'SELECCIONAR_CANDIDATO',\r\n    newIndex: newIndex,\r\n  }\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n    procesos: estado.procesos,\r\n    proceso_viewprocess: estado.proceso_viewprocess,\r\n    candidato: estado.candidato_viewprocess,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        seleccionarCandidato: (newIndex) => despachar(seleccionarCandidato(newIndex)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProcess);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\ViewProcessMail.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Process.js",["340","341","342","343","344","345","346"],"import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Contenedor from '../contenedor';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport KPI from '../componentes/KPI';\r\nimport Bienvenida from '../componentes/welcome/Bienvenida';\r\nimport Procesos from '../componentes/Procesos';\r\nimport Tabla from '../componentes/table/Procesos';\r\nimport Boton from '../componentes/Boton';\r\nimport { DescargaExcelProcesos } from '../componentes/downloads/DescargaExcel';\r\n\r\n\r\nconst example = {\r\n    \"name\": \"\",\r\n    \"description\": \"\",\r\n    \"area\": \"\",\r\n    \"subarea\": \"\",\r\n    \"industry\": \"\",\r\n    \"is_remote\": false,\r\n    \"status\": \"\",\r\n    \"vacant\": null,\r\n    \"requirements\": null,\r\n    \"desired\": null,\r\n    \"kpis\": null,\r\n    \"storage_url\": \"\",\r\n    \"user\": null\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\nconst Dashboard = (props) => {\r\n  const classes = useStyles();\r\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\r\n  const columnas = {\r\n    \"name\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:true, href:\"/ViewProcess\"},\r\n    \"created_at\":{titulo:\"Creado\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"status\":{titulo:\"Status\",color:\"textHint\",tamano:\"subtitle2\",link:false, },\r\n    \"below\":{titulo:\"Below\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    \"normal\":{titulo:\"Normal\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    \"outstanding\":{titulo:\"Outstanding\",color:\"textPrimary\",tamano:\"caption\",link:false, }\r\n  };\r\n  const columnasExcel = Object.keys(columnas).map(col => ({label:columnas[col].titulo,value:col}));\r\n  const procesosSeleccionados = idSeleccionados.length === 0 ? [] : props.procesos.filter((i,index)=>idSeleccionados.includes(i.id)).map(i=>({name:i.name,created_at:i.created_at,status:i.status,below:i.kpis.below,normal:i.kpis.normal,outstanding:i.kpis.outstanding}));\r\n  console.log(idSeleccionados);\r\n  return (\r\n    \r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          \r\n          \r\n          <Grid\r\n            item\r\n            xs={12}\r\n          >\r\n          {props.procesos !== undefined &&\r\n            <Tabla  data={props.procesos} columnas={columnas} idSeleccionados={idSeleccionados} definirIdSeleccionados={definirIdSeleccionados} seleccionarProceso={seleccionarProceso}/>\r\n          }\r\n          </Grid>\r\n\r\n          <Grid\r\n            item\r\n            \r\n            xs={6}\r\n            md={6}\r\n            sm={4}\r\n            lg={3}\r\n          ></Grid>\r\n          <Grid\r\n            item\r\n            \r\n            xs={6}\r\n            md={6}\r\n            sm={4}\r\n            lg={3}\r\n          >\r\n            <Boton nombre={\"Nuevo Proceso\"} href={\"/AddProcess\"} color={\"secondary\"} icon={\"CircleAddition\"}/>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            md={6}\r\n            sm={4}\r\n            lg={3}\r\n          >\r\n            {idSeleccionados.length === 0 ? \r\n              <Boton nombre={\"Exportar Excel\"} href={\"#\"} color={\"secondary\"} icon={\"ExcelDocument\"} />\r\n            :\r\n              <DescargaExcelProcesos\r\n                boton={<Boton nombre={\"Exportar Excel\"} href={\"#\"} color={\"secondary\"} icon={\"ExcelDocument\"}/>}\r\n                columnas={columnasExcel}\r\n                data={procesosSeleccionados}\r\n\r\n              />\r\n            }\r\n              \r\n            \r\n          </Grid>\r\n          \r\n        </Grid>\r\n  );\r\n};\r\n\r\nconst Process = (props) => {\r\n  \r\n  return (\r\n    <Contenedor>\r\n      <Dashboard procesosExportarExcel={props.procesosExportarExcel} procesos_exportar_excel={props.procesos_exportar_excel}\r\n      procesos={props.procesos} />\r\n    </Contenedor>\r\n  );\r\n}\r\nconst seleccionarProceso = (newIndex) => {\r\n  return {\r\n    type: 'SELECCIONAR_PROCESO',\r\n    newIndex: newIndex,\r\n  }\r\n}\r\n\r\nconst procesosExportarExcel = (newState) => {\r\n  return {\r\n    type: 'DEFINIR_PROCESOS_EXPORTAR_EXCEL',\r\n    newIndex: newState,\r\n  }\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    procesos: estado.procesos,\r\n    procesos_exportar_excel: estado.procesos_exportar_excel,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        procesosExportarExcel: (newState) => despachar(procesosExportarExcel(newState)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Process);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Historic.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Login.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\HelpTutorials.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Error.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\EditProcess.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\AddProcess.js",["347","348","349","350","351","352"],"import React from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Page from '../componentes/Page';\r\nimport KPI from '../componentes/KPI';\r\nimport Bienvenida from '../componentes/welcome/Bienvenida';\r\nimport Procesos from '../componentes/Procesos';\r\nimport ProcessButton from '../componentes/Boton';\r\nimport AddProceso from '../componentes/AddProcess';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\nconst Dashboard = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Dashboard\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            \r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            \r\n          </Grid>\r\n          \r\n          \r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            {\"sadf\"}\r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst AddProcess = (props) => {\r\n  \r\n  return (\r\n    <Contenedor>\r\n      <AddProceso usuario={props.usuario} />\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nexport default AddProcess;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\routes.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Microsoft.js",["353","354","355","356","357","358","359","360"],"import React from 'react';\r\nimport MicrosoftLogin from \"react-microsoft-login\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { IconButton, Button, Icon } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { loginPopup, ssoSilent, acquireTokenSilent, isMicrosoftLogged, Microsoft, logout } from './Msal';\r\nimport icono from \"../images/m.svg\";\r\n\r\nconst MicroSoftOld = (props) => {\r\n let history = useHistory();\r\n  const authHandler = (err, data) => {\r\n    console.log(err, data);\r\n    if (err===null) {\r\n      axios.post(\"http://127.0.0.1:8000/social_auth/microsoft/\",{\r\n        \"auth_token\":data.accessToken,\r\n      }).then(r=>{\r\n        console.log(r);\r\n        props.actualizarUser({\r\n          uid: data.account.accountIdentifier,\r\n          nombre:data.account.name,\r\n          correo: data.account.userName,\r\n          accessToken: data.accessToken,\r\n          response: data,\r\n        });\r\n        history.push(\"/\");\r\n      }).catch(er=>console.log(er));\r\n    }\r\n  };\r\n \t\r\n  return (\r\n    <MicrosoftLogin clientId={\"d236c53d-05c9-41c5-aade-d26ed6bb6c6d\"} authCallback={authHandler} \r\n      redirectUri={\"http://localhost:3000/login/microsoft\"} \r\n      graphScopes={[\"Calendars.ReadWrite.Shared\",\"email\",\"Mail.Send\",\"offline_access\",\"openid\",\"profile\",\"User.Read\"]}\r\n    >\r\n      <IconButton aria-label=\"microsoft\">\r\n        <Icon >\r\n          <img src={icono}/>\r\n        </Icon>\r\n      </IconButton>\r\n    </MicrosoftLogin>\r\n  );\r\n};\r\n\r\nconst MicroSoft = (props) => {\r\n let history = useHistory();\r\n const handleLogin = () => {\r\n  loginPopup(props.actualizarUser, history);\r\n  \r\n }\r\n  return (\r\n    <Button color=\"primary\" onClick={handleLogin}>\r\n      {'Microsoft Login'}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default MicroSoftOld;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Google.js",["361","362","363"],"import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { IconButton, Icon } from '@material-ui/core';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport icono from \"../images/g.png\";\r\n\r\nconst Google = (props) => {\r\n\r\n\r\n  let history = useHistory();\r\n  \r\n  const errorGoogle=(response)=>{\r\n    console.log(response);\r\n  }\r\n\r\n  const responseGoogle=(response)=>{\r\n    console.log(response);\r\n    console.log(response.profileObj);\r\n    axios.post(\"http://127.0.0.1:8000/social_auth/google/\",{\r\n              \"auth_token\":response.tokenId,\r\n            }).then(r=>{\r\n              console.log(r);\r\n              props.actualizarUser(Object.assign({},{\r\n                uid:response.googleId,\r\n                nombre: response.profileObj.familyName,\r\n                correo: response.profileObj.email,\r\n                tokenId: response.tokenId,\r\n                response: response,\r\n              }));\r\n              response.reloadAuthResponse().then(i=>console.log(\"success on reload\",i)).catch(i=>console.log(\"error\",i));\r\n              history.push(\"/\");\r\n\r\n            }).catch(r=>console.log(r));\r\n              \r\n    \r\n    //response.tokenId envíar a backend\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <GoogleLogin\r\n      clientId=\"374514394577-gn2bvmp9cjnsjn53aq0p575mdidpot47.apps.googleusercontent.com\"\r\n      buttonText=\"\"\r\n    \t//accessType=\"offline\"\r\n    \t//responseType=\"code\"\r\n      render={renderProps => (\r\n        <IconButton aria-label=\"google\" onClick={renderProps.onClick} disabled={renderProps.disabled}>\r\n          <Icon>\r\n            <img src={icono} height=\"100%\" width=\"100%\"/>\r\n          </Icon>  \r\n        </IconButton>\r\n      )}\r\n    \tprompt= \"consent\"\r\n    \tscope=\"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/calendar\"\r\n      onSuccess={responseGoogle}\r\n      onFailure={errorGoogle}\r\n      cookiePolicy={'single_host_origin'}\r\n      \r\n      />\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\nexport default Google;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\index.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\TopBar.js",["364","365","366","367"],"import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\nimport rose_nav from '../images/rose_nav.jpg';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {\r\n    height: 64,\r\n  },\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst TopBar = ({\r\n  className,\r\n  onMobileNavOpen,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n          <img src={rose_nav} style={{\r\n              height: '100%',\r\n              width: 'auto',\r\n            }} />\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <Icon style={{\r\n                transform: 'scale(1.15)' // Tune it\r\n              }} iconName={\"Message\"}  />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <Icon style={{\r\n                transform: 'scale(1.15)' // Tune it\r\n              }} iconName={\"Settings\"}  />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\NavBar\\index.js",["368","369","370"],"import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport NavItem from './NavItem';\r\n\r\n\r\n\r\nconst items = [\r\n  {\r\n    href: '/WelcomePage',\r\n    icon: \"HomeSolid\",\r\n    title: 'Inicio'\r\n  },\r\n  {\r\n    href: '/Process',\r\n    icon: \"Processing\",\r\n    title: 'Procesos'\r\n  },\r\n  {\r\n    href: '/Historic',\r\n    icon: \"HistoricalWeather\",\r\n    title: 'Histórico'\r\n  },\r\n  {\r\n    href: '/Ayuda',\r\n    icon: \"Help\",\r\n    title: 'Ayuda'\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile, usuario }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      bgcolor={\"primary.main\"}\r\n    > \r\n      <Divider />\r\n      <Box\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        p={3}\r\n        bgcolor={\"primary.main\"}\r\n      >\r\n        {usuario.nombre.split(\" \").map((item,index)=>(\r\n          <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h4\"\r\n          style={{ margin:\"3px\", color:\"white\"}}\r\n        >\r\n          <Box fontWeight=\"fontWeightBold\">\r\n            {item}\r\n          </Box>\r\n        </Typography>\r\n        ))}\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2} >\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n      \r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\contenedor\\NavBar\\NavItem.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Procesos.js",["371","372","373","374"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport getInitials from './getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Procesos = ({ className, data, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\r\n  const [limite, definirLimite] = useState(10);\r\n  const [pagina, definirPagina] = useState(0);\r\n\r\n  const seleccionarTodos = (evento) => {\r\n    let nuevosIdSeleccionados;\r\n\r\n    if (evento.target.checked) {\r\n      nuevosIdSeleccionados = data.map((customer) => customer.id);\r\n    } else {\r\n      nuevosIdSeleccionados = [];\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const seleccionarUno = (evento, id) => {\r\n    const indiceSeleccionado = idSeleccionados.indexOf(id);\r\n    let nuevosIdSeleccionados = [];\r\n\r\n    if (indiceSeleccionado === -1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados, id);\r\n    } else if (indiceSeleccionado === 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(1));\r\n    } else if (indiceSeleccionado === idSeleccionados.length - 1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(0, -1));\r\n    } else if (indiceSeleccionado > 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(\r\n        idSeleccionados.slice(0, indiceSeleccionado),\r\n        idSeleccionados.slice(indiceSeleccionado + 1)\r\n      );\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const cambiarLimite = (evento) => {\r\n    definirLimite(evento.target.value);\r\n  };\r\n\r\n  const cambiarPagina = (evento, nuevaPagina) => {\r\n    definirPagina(nuevaPagina);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={idSeleccionados.length === data.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      idSeleccionados.length > 0\r\n                      && idSeleccionados.length < data.length\r\n                    }\r\n                    onChange={seleccionarTodos}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Nombre\r\n                </TableCell>\r\n                <TableCell>\r\n                  Creado\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n                <TableCell>\r\n                  Below\r\n                </TableCell>\r\n                <TableCell>\r\n                  Normal\r\n                </TableCell>\r\n                <TableCell>\r\n                  Outstanding\r\n                </TableCell>\r\n                \r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(limite*pagina, limite*(pagina+1)).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={idSeleccionados.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={idSeleccionados.indexOf(customer.id) !== -1}\r\n                      onChange={(evento) => seleccionarUno(evento, customer.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      <Avatar\r\n                        className={classes.avatar}\r\n                        src={customer.avatarUrl}\r\n                      >\r\n                        {getInitials(customer.nombre)}\r\n                      </Avatar>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.nombre}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.status}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.below}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.normal}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.outstanding}\r\n                  </TableCell>\r\n                  \r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        \r\n      <TablePagination\r\n        component=\"div\"\r\n        count={data.length}\r\n        onChangePage={cambiarPagina}\r\n        onChangeRowsPerPage={cambiarLimite}\r\n        page={pagina}\r\n        rowsPerPage={limite}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Procesos;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\getInitials.js",["375"],"export default (name = '') => name\r\n  .replace(/\\s+/, ' ')\r\n  .split(' ')\r\n  .slice(0, 2)\r\n  .map((v) => v && v[0].toUpperCase())\r\n  .join('');\r\n","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\DataProcesos.js",["376","377"],"import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"catamuñoz@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"fermaldonado@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },{\r\n    id: 10,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 11,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n];\r\n","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\AddProcess.js",["378","379","380","381","382","383","384","385","386","387","388","389","390","391"],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\Bienvenida.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\KPIWelcome.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\welcome\\KPIContainer.js",["392"],"import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport KPI from '../KPI';\r\nimport Boton from '../Boton';\r\n\r\n\r\n\r\nconst Container = ({ forma, itemes }) => {\r\n\r\n  return ( \r\n    <Grid\r\n      container\r\n      spacing={forma.spacing}\r\n    >\r\n      {itemes.map(item=>(\r\n        <Grid\r\n          item\r\n          xs={forma.xs}\r\n          sm={forma.sm}\r\n        >\r\n          <KPI nombre={item.nombre} cantidad={item.cantidad} icon={item.icon}/>\r\n        </Grid>\r\n      ))}\r\n      \r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Container;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\index.js",["393","394","395","396","397","398","399","400","401","402"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Paginacion, TituloColumnaSeleccionador, CeldaColumnaSeleccionador } from './Elementos';\r\nimport getInitials from '../getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\nconst Tabla = ({ className, data, ...rest }) => {\r\n  const columnas = {\r\n    \"nombre\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:true, href:\"/ViewProcess\"},\r\n    \"createdAt\":{titulo:\"Creado\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"status\":{titulo:\"Status\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"below\":{titulo:\"Below\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    \"normal\":{titulo:\"Normal\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    \"outstanding\":{titulo:\"Outstanding\",color:\"textPrimary\",tamano:\"caption\",link:false, }\r\n  };\r\n  const classes = useStyles();\r\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\r\n  const [limite, definirLimite] = useState(7);\r\n  const [pagina, definirPagina] = useState(0);\r\n\r\n  const seleccionarTodos = (evento) => {\r\n    let nuevosIdSeleccionados;\r\n\r\n    if (evento.target.checked) {\r\n      nuevosIdSeleccionados = data.map((elemento) => elemento.id);\r\n    } else {\r\n      nuevosIdSeleccionados = [];\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const seleccionarUno = (evento, id) => {\r\n    const indiceSeleccionado = idSeleccionados.indexOf(id);\r\n    let nuevosIdSeleccionados = [];\r\n\r\n    if (indiceSeleccionado === -1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados, id);\r\n    } else if (indiceSeleccionado === 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(1));\r\n    } else if (indiceSeleccionado === idSeleccionados.length - 1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(0, -1));\r\n    } else if (indiceSeleccionado > 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(\r\n        idSeleccionados.slice(0, indiceSeleccionado),\r\n        idSeleccionados.slice(indiceSeleccionado + 1)\r\n      );\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const cambiarLimite = (evento) => {\r\n    definirLimite(evento.target.value);\r\n  };\r\n\r\n  const cambiarPagina = (evento, nuevaPagina) => {\r\n    definirPagina(nuevaPagina);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TituloColumnaSeleccionador \r\n                  chequeado={idSeleccionados.length === data.length}\r\n                  indeterminado={\r\n                      idSeleccionados.length > 0\r\n                      && idSeleccionados.length < data.length\r\n                    } \r\n                  seleccionarTodos={seleccionarTodos}\r\n                />\r\n                {Object.keys(columnas).map(nombreColumna=>(\r\n                  <TableCell>\r\n                    {columnas[nombreColumna].titulo}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(limite*pagina, limite*(pagina+1)).map((elemento) => (\r\n                <TableRow\r\n                  hover\r\n                  key={elemento.id}\r\n                  selected={idSeleccionados.indexOf(elemento.id) !== -1}\r\n                >\r\n                  <CeldaColumnaSeleccionador seleccion={(evento) => seleccionarUno(evento, elemento.id)} chequeado={idSeleccionados.indexOf(elemento.id) !== -1} />\r\n                  {Object.keys(columnas).map(nombreColumna=>(\r\n                    <TableCell>\r\n                      {typeof columnas[nombreColumna].href === 'undefined' ?\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      :\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                          component={RouterLink}\r\n                          to={columnas[nombreColumna].href}\r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      }\r\n                    </TableCell>  \r\n                  ))}                  \r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n      <Paginacion actual={data.length} cambiarPagina={cambiarPagina}\r\n        cambiarLimite={cambiarLimite} pagina={pagina} limite={limite}/>  \r\n      \r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Tabla;",["403","404"],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Elementos.js",["405","406","407","408","409","410","411","412","413","414","415","416","417","418","419","420","421","422","423"],"import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\n\r\nconst Titulo = ({ }) => {\r\n  return (\r\n    <> \r\n    </>\r\n  );\r\n};\r\n\r\nconst Cuerpo = ({ }) => {\r\n  return (\r\n    <> \r\n    </>\r\n  );\r\n};\r\n\r\nconst CeldaColumnaSeleccionador = ({ seleccion, chequeado }) => {\r\n  return (\r\n    <TableCell padding=\"checkbox\">\r\n      <Checkbox\r\n        checked={chequeado}\r\n        onChange={seleccion}\r\n        value=\"true\"\r\n      />\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nconst TituloColumnaSeleccionador = ({ chequeado, indeterminado, seleccionarTodos}) => {\r\n  return (\r\n    <TableCell padding=\"checkbox\">\r\n      <Checkbox\r\n        checked={chequeado}\r\n        color=\"primary\"\r\n        indeterminate={indeterminado}\r\n        onChange={seleccionarTodos}\r\n      />\r\n    </TableCell>\r\n  );\r\n};\r\n\r\n\r\nconst Paginacion = ({ actual, cambiarPagina, cambiarLimite, pagina, limite}) => {\r\n  return (\r\n    <TablePagination\r\n      component=\"div\"\r\n      count={actual}\r\n      onChangePage={cambiarPagina}\r\n      onChangeRowsPerPage={cambiarLimite}\r\n      page={pagina}\r\n      rowsPerPage={limite}\r\n      rowsPerPageOptions={[7, 15, 50]}\r\n    />\r\n  );\r\n};\r\n\r\nexport { Paginacion, TituloColumnaSeleccionador, CeldaColumnaSeleccionador };\r\n\r\n\r\n","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Boton.js",["424","425","426","427","428","429","430","431","432","433","434"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport { Icon } from '@fluentui/react/lib/Icon';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  \r\n}));\r\n\r\nconst ProcessButton = ({ nombre, href, color, icon }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    \r\n    <Button\r\n    variant=\"contained\" color={color}\r\n    to={href}\r\n    component={RouterLink}\r\n    className={classes.root}\r\n    endIcon={<Icon style={{\r\n      transform: 'scale(1.5)' // Tune it\r\n    }} iconName={icon}  />}\r\n    >\r\n    {nombre} \r\n    </Button>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProcessButton;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\store\\dataProcesos.js",["435"],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Procesos.js",["436","437","438","439","440","441","442","443","444","445","446"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Paginacion, TituloColumnaSeleccionador, CeldaColumnaSeleccionador } from './Elementos';\r\nimport getInitials from '../getInitials';\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\nconst Tabla = ({ className, data, idSeleccionados, definirIdSeleccionados, columnas, seleccionarProceso, ...rest }) => {\r\n  \r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  \r\n  const [limite, definirLimite] = useState(7);\r\n  const [pagina, definirPagina] = useState(0);\r\n\r\n  const seleccionarTodos = (evento) => {\r\n    let nuevosIdSeleccionados;\r\n\r\n    if (evento.target.checked) {\r\n      nuevosIdSeleccionados = data.map((elemento) => elemento.id);\r\n    } else {\r\n      nuevosIdSeleccionados = [];\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const seleccionarUno = (evento, id) => {\r\n    const indiceSeleccionado = idSeleccionados.indexOf(id);\r\n    let nuevosIdSeleccionados = [];\r\n\r\n    if (indiceSeleccionado === -1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados, id);\r\n    } else if (indiceSeleccionado === 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(1));\r\n    } else if (indiceSeleccionado === idSeleccionados.length - 1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(0, -1));\r\n    } else if (indiceSeleccionado > 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(\r\n        idSeleccionados.slice(0, indiceSeleccionado),\r\n        idSeleccionados.slice(indiceSeleccionado + 1)\r\n      );\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const cambiarLimite = (evento) => {\r\n    definirLimite(evento.target.value);\r\n  };\r\n\r\n  const cambiarPagina = (evento, nuevaPagina) => {\r\n    definirPagina(nuevaPagina);\r\n  };\r\n  let history = useHistory();\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TituloColumnaSeleccionador \r\n                  chequeado={idSeleccionados.length === data.length}\r\n                  indeterminado={\r\n                      idSeleccionados.length > 0\r\n                      && idSeleccionados.length < data.length\r\n                    } \r\n                  seleccionarTodos={seleccionarTodos}\r\n                />\r\n                {Object.keys(columnas).map(nombreColumna=>(\r\n                  <TableCell>\r\n                    {columnas[nombreColumna].titulo}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(limite*pagina, limite*(pagina+1)).map((elemento) => (\r\n                <TableRow\r\n                  hover\r\n                  key={elemento.id}\r\n                  selected={idSeleccionados.indexOf(elemento.id) !== -1}\r\n                >\r\n                  <CeldaColumnaSeleccionador seleccion={(evento) => seleccionarUno(evento, elemento.id)} chequeado={idSeleccionados.indexOf(elemento.id) !== -1} />\r\n                  {Object.keys(columnas).map(nombreColumna=>(\r\n                    <TableCell>\r\n                      {typeof columnas[nombreColumna].href === 'undefined' ?\r\n                        <>{nombreColumna === \"status\" ?\r\n                          \r\n                            <Typography\r\n                              fontWeight= {400}\r\n                              variant={columnas[nombreColumna].tamano}\r\n                              style={{ color:\"white\", backgroundColor:elemento[nombreColumna] === \"In progress\" ? theme.palette.info.main : theme.palette.primary.main }}\r\n\r\n                            >\r\n                              <Box fontWeight=\"fontWeightBold\">\r\n                                {elemento[nombreColumna]===undefined ? \"No definido\" : elemento[nombreColumna]}\r\n                              </Box>\r\n                            </Typography>\r\n                        :\r\n                          <>{nombreColumna === \"created_at\"?\r\n                            <Typography\r\n                              color={columnas[nombreColumna].color}\r\n                              variant={columnas[nombreColumna].tamano}\r\n                            >\r\n                              {elemento[nombreColumna]===undefined ? \"No definido\" : elemento[nombreColumna].slice(0,10).concat(\" a las \",elemento[nombreColumna].slice(11,16),\" horas\")}\r\n                            </Typography>\r\n                          :\r\n                            <Typography\r\n                              color={columnas[nombreColumna].color}\r\n                              variant={columnas[nombreColumna].tamano}\r\n                            >\r\n                              {elemento[nombreColumna]===undefined ? \"No definido\" : elemento[nombreColumna]}\r\n                            </Typography>\r\n                          }</>\r\n                        }</>\r\n                        \r\n                      :\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                          component={RouterLink}\r\n                          style={{ textDecoration: 'none' }}\r\n                          onClick={()=>{seleccionarProceso(elemento.id);history.push(columnas[nombreColumna].href);}}\r\n                          \r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      }\r\n                    </TableCell>  \r\n                  ))}                  \r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n      <Paginacion actual={data.length} cambiarPagina={cambiarPagina}\r\n        cambiarLimite={cambiarLimite} pagina={pagina} limite={limite}/>  \r\n      \r\n    </Card>\r\n  );\r\n};\r\n\r\nconst seleccionarProceso = (newIndex) => {\r\n  return {\r\n    type: 'SELECCIONAR_PROCESO',\r\n    newIndex: newIndex,\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        seleccionarProceso: (newIndex) => despachar(seleccionarProceso(newIndex)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabla);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\downloads\\DescargaExcel.js",["447"],"import React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst dataSet1 = [\r\n    {\r\n        name: \"Johson\",\r\n        amount: 30000,\r\n        sex: 'M',\r\n        is_married: true\r\n    },\r\n    {\r\n        name: \"Monika\",\r\n        amount: 355000,\r\n        sex: 'F',\r\n        is_married: false\r\n    },\r\n    {\r\n        name: \"John\",\r\n        amount: 250000,\r\n        sex: 'M',\r\n        is_married: false\r\n    },\r\n    {\r\n        name: \"Josef\",\r\n        amount: 450500,\r\n        sex: 'M',\r\n        is_married: true\r\n    }\r\n];\r\n\r\n\r\nconst DescargaExcelProcesos = ({ boton, columnas, data }) => {\r\n        console.log(columnas, data);\r\n        return (\r\n            <ExcelFile element={boton}>\r\n                <ExcelSheet data={data} name=\"Procesos\">\r\n                    <ExcelColumn label=\"Nombre\" value=\"name\"/>\r\n                    <ExcelColumn label=\"Creado\" value=\"created_at\"/>\r\n                    <ExcelColumn label=\"Status\" value=\"status\"/>\r\n                    <ExcelColumn label=\"Below\" value=\"below\"/>\r\n                    <ExcelColumn label=\"Normal\" value=\"normal\"/>\r\n                    <ExcelColumn label=\"Outstanding\" value=\"outstanding\"/>\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n        );\r\n}\r\n\r\nconst DescargaExcelCandidatos = ({ boton, columnas, data }) => {\r\n\r\n        return (\r\n            <ExcelFile element={boton}>\r\n                <ExcelSheet data={data} name=\"Candidatos\">\r\n                    <ExcelColumn label=\"Nombre\" value=\"nombre\"/>\r\n                    <ExcelColumn label=\"Carrera\" value=\"profesion\"/>\r\n                    <ExcelColumn label=\"Universidad\" value=\"universidad\"/>\r\n                    \r\n                    <ExcelColumn label=\"Email\" value=\"email\"/>\r\n                    <ExcelColumn label=\"Ciudad\" value=\"ciudad\"/>\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n        );\r\n}\r\n\r\nconst DescargaExcelHistorico = ({ boton, columnas, data }) => {\r\n\r\n        return (\r\n            <ExcelFile element={boton}>\r\n                <ExcelSheet data={data} name=\"Historico\">\r\n                    <ExcelColumn label=\"Nombre\" value=\"nombre\"/>\r\n                    <ExcelColumn label=\"Carrera\" value=\"profesion\"/>\r\n                    <ExcelColumn label=\"Universidad\" value=\"universidad\"/>\r\n                    \r\n                    <ExcelColumn label=\"Email\" value=\"email\"/>\r\n                    <ExcelColumn label=\"Ciudad\" value=\"ciudad\"/>\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n        );\r\n}\r\n\r\nconst DescargaExcelTest = (props) => {\r\n        return (\r\n            <ExcelFile element={<button>hola</button>}>\r\n                <ExcelSheet data={dataSet1} name=\"Employees\">\r\n                    <ExcelColumn label=\"Name\" value=\"name\"/>\r\n                    <ExcelColumn label=\"Wallet Money\" value=\"amount\"/>\r\n                    <ExcelColumn label=\"Gender\" value=\"sex\"/>\r\n                    <ExcelColumn label=\"Marital Status\"\r\n                                 value={(col) => col.is_married ? \"Married\" : \"Single\"}/>\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n        );\r\n}\r\n\r\nexport { DescargaExcelProcesos, DescargaExcelCandidatos, DescargaExcelHistorico};","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\KPI.js",["448","449","450","451"],"import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%',\r\n    borderRadius: theme.spacing(4),\r\n    backgroundColor: theme.palette.secondary.main,\r\n\r\n  },\r\n  icono: {\r\n    paddingTop: theme.spacing(6),\r\n  },\r\n}));\r\n\r\nconst KPI = ({ nombre, cantidad, icon }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item xs={8}>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n              style={{ color: \"white\"}}\r\n            >\r\n              {nombre}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h1\"\r\n              style={{ color: \"white\"}}\r\n            >\r\n              {cantidad}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item item xs={4} >\r\n              <div className={classes.icono}>\r\n                {icon}\r\n              </div>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default KPI;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\KPIs.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\KPIContainer.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\rose\\Msal.js",["452","453"],"import React, { useState, useEffect } from 'react';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport * as Msal from \"msal\";\r\nimport axios from 'axios';\r\n\r\nconst msalConfig = {\r\n    auth: {\r\n        clientId: 'd236c53d-05c9-41c5-aade-d26ed6bb6c6d'\r\n    }\r\n};\r\n\r\nconst msalInstance = new Msal.UserAgentApplication(msalConfig);\r\n\r\nmsalInstance.handleRedirectCallback((error, response) => {\r\n    console.log(error, response);\r\n    console.log(\"dentro\");\r\n});\r\nvar loginRequest = {\r\n   scopes: [\"Calendars.ReadWrite.Shared\",\"email\",\"Mail.Send\",\"offline_access\",\"openid\",\"profile\",\"User.Read\"],\r\n   redirectUri:\"http://localhost:3000/login/microsoft\",\r\n};\r\n\r\nvar tokenRequest = {\r\n    scopes: [\"Calendars.ReadWrite.Shared\",\"email\",\"Mail.Send\",\"offline_access\",\"openid\",\"profile\",\"User.Read\"],\r\n    redirectUri:\"http://localhost:3000/login/microsoft\",\r\n};\r\n\r\nconst ssoRequest = {\r\n    loginHint: \"clopez@myfuture.ai\",\r\n};\r\n\r\nconst loginPopup = (actualizarUser, history) => {\r\n\tmsalInstance.loginPopup(loginRequest)\r\n        .then(response => {\r\n            console.log(response);\r\n            var uid = response.account.accountIdentifier;\r\n            var nombre = response.account.name;\r\n            var correo = response.account.userName;\r\n            var accessToken = acquireTokenSilent();\r\n            var response = response;\r\n            console.log(accessToken);\r\n            axios.post(\"http://127.0.0.1:8000/social_auth/microsoft/\",{\r\n              \"auth_token\":accessToken,\r\n            }).then(r=>{\r\n              console.log(r);\r\n              actualizarUser({\r\n                uid: uid,\r\n                nombre:nombre,\r\n                correo: correo,\r\n                accessToken: accessToken,\r\n                response: response,\r\n              });\r\n              history.push(\"/\");\r\n            }).catch(er=>console.log(er));\r\n            \r\n            // handle response\r\n        })\r\n        .catch(err => {\r\n            // handle error\r\n        });\r\n}\r\n\r\nconst ssoSilent = (props) => {\r\n\tmsalInstance.ssoSilent(ssoRequest)\r\n    .then(response => {\r\n        // session silently established\r\n        console.log(\"session silently established\");\r\n    })\r\n    .catch(error => {\r\n        // handle error by invoking an interactive login method\r\n        msalInstance.loginPopup(ssoRequest);\r\n    });\r\n}\r\n\r\nconst acquireTokenSilent = (props) => {\r\n\tmsalInstance.acquireTokenSilent(tokenRequest)\r\n    .then(response => {\r\n        console.log(\"Acquire token\",response)\r\n        return response.accessToken;\r\n    })\r\n    .catch(err => {\r\n        // could also check if err instance of InteractionRequiredAuthError if you can import the class.\r\n        if (err.name === \"InteractionRequiredAuthError\") {\r\n            return msalInstance.acquireTokenPopup(tokenRequest)\r\n                .then(response => {\r\n                    // get access token from response\r\n                    // response.accessToken\r\n                })\r\n                .catch(err => {\r\n                    // handle error\r\n                });\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst isMicrosoftLogged = (props) => {\r\n  if (msalInstance.getAccount()) {\r\n  \treturn msalInstance.getAccount();\r\n  }else{\r\n  \treturn false;\r\n  }\r\n}\r\n\r\nconst logout = (props) => {\r\n\tmsalInstance.logout();\r\n}\r\n\r\nconst Microsoft = (props) => {\r\n  //let history = useHistory();\r\n  useEffect(()=>{\r\n    msalInstance.loginPopup(loginRequest)\r\n    .then(response => {\r\n        console.log(\"response\",response);\r\n    })\r\n    .catch(err => {\r\n        console.log(\"err\",err);\r\n    });\r\n    console.log(\"afuera\");\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      {props.children}\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport { loginPopup, ssoSilent, acquireTokenSilent, isMicrosoftLogged, Microsoft, logout };","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\Calendar.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\process\\Mail.js",["454","455","456"],"import React, { useState } from 'react';\r\nimport Dialogo from '../Dialogo';\r\nimport Editor from '../Editor';\r\nimport { Grid, Container, Button } from '@material-ui/core';\r\nimport { EditorState } from 'draft-js';\r\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\r\n\r\n\r\nconst Mail = (props) => {\r\n  const { setOpen, open, usermail, candidatemail } = props;\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  return (\r\n    <Dialogo setOpen={setOpen} open={open} titulo={\"Nuevo Mensaje\"} >\r\n    \t<Container>\r\n\t  \t\t{\"Hola\"}<br/>\r\n\t  \t\t{usermail}<br/>\r\n\t  \t\t{candidatemail}<br/>\r\n\t  \t\t<Editor editorState={editorState} setEditorState={setEditorState}/>\r\n\t  \t\t<br/>\r\n\t  \t\t<Button color=\"primary\"\r\n\t  \t\t\tonClick={()=>console.log(html)}\r\n\t  \t\t>Envíar</Button>\r\n  \t\t</Container>\r\n  \t</Dialogo>\r\n  );\r\n}\r\n\r\nconst Form = (props) => {\r\n  const { setOpen, open } = props;\r\n  return (\r\n    <Dialogo setOpen={setOpen} open={open} titulo={\"Envíar email a Candidato\"} >\r\n  \t\t{\"Hola mail\"}\r\n  \t</Dialogo>\r\n  );\r\n}\r\n\r\nexport default Mail;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Dialogo.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Editor.js",["457"],"import React, { useState } from 'react';\r\n//import { EditorState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\n\r\nconst MyEditor = ({setEditorState,editorState}) => {\r\n  //const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const onEditorStateChange = (editorState) => {\r\n    setEditorState(editorState);\r\n };\r\nreturn (\r\n  <div>\r\n    <Editor \r\n      editorState={editorState}\r\n      wrapperClassName=\"rich-editor demo-wrapper\"\r\n      editorClassName=\"demo-editor\"\r\n      onEditorStateChange={onEditorStateChange}\r\n      placeholder=\"Escriba aquí\" />\r\n  </div>\r\n);\r\n}\r\nexport default MyEditor;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\CambiadorPublico.js",["458","459","460","461","462","463","464","465","466","467","468","469","470"],"import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { AddProcess, EditProcess, Error, HelpIssue,\r\n HelpTutorials, Historic, Login, Process, ViewProcess,\r\n  ViewProcessCalendar, ViewProcessMail, WelcomePage } from '../vistas/Vistas';\r\n\r\n\r\nimport LoginView from '../auth/LoginView';\r\nimport RegisterView from '../auth/RegisterView';\r\nimport MicroSoft from '../rose/Microsoft';\r\n\r\n\r\n\r\nconst Cambiador = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={\"/\"} component={LoginView}/>\r\n      <Route exact path={\"/Registro\"} component={RegisterView}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n\r\nexport default Cambiador;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\table\\Historico.js",["471","472","473","474","475","476","477","478","479","480","481","482","483"],"import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Paginacion, TituloColumnaSeleccionador, CeldaColumnaSeleccionador } from './Elementos';\r\nimport getInitials from '../getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\nconst Tabla = ({ className, data, idSeleccionados, definirIdSeleccionados, columnas, ...rest }) => {\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const [limite, definirLimite] = useState(7);\r\n  const [pagina, definirPagina] = useState(0);\r\n\r\n  const seleccionarTodos = (evento) => {\r\n    let nuevosIdSeleccionados;\r\n\r\n    if (evento.target.checked) {\r\n      nuevosIdSeleccionados = data.map((elemento) => elemento.id);\r\n    } else {\r\n      nuevosIdSeleccionados = [];\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const seleccionarUno = (evento, id) => {\r\n    const indiceSeleccionado = idSeleccionados.indexOf(id);\r\n    let nuevosIdSeleccionados = [];\r\n\r\n    if (indiceSeleccionado === -1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados, id);\r\n    } else if (indiceSeleccionado === 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(1));\r\n    } else if (indiceSeleccionado === idSeleccionados.length - 1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(0, -1));\r\n    } else if (indiceSeleccionado > 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(\r\n        idSeleccionados.slice(0, indiceSeleccionado),\r\n        idSeleccionados.slice(indiceSeleccionado + 1)\r\n      );\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const cambiarLimite = (evento) => {\r\n    definirLimite(evento.target.value);\r\n  };\r\n\r\n  const cambiarPagina = (evento, nuevaPagina) => {\r\n    definirPagina(nuevaPagina);\r\n  };\r\n  let history = useHistory();\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TituloColumnaSeleccionador \r\n                  chequeado={idSeleccionados.length === data.length}\r\n                  indeterminado={\r\n                      idSeleccionados.length > 0\r\n                      && idSeleccionados.length < data.length\r\n                    } \r\n                  seleccionarTodos={seleccionarTodos}\r\n                />\r\n                {Object.keys(columnas).map(nombreColumna=>(\r\n                  <TableCell>\r\n                    {columnas[nombreColumna].titulo}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(limite*pagina, limite*(pagina+1)).map((elemento) => (\r\n                <TableRow\r\n                  hover\r\n                  key={elemento.id}\r\n                  selected={idSeleccionados.indexOf(elemento.id) !== -1}\r\n                >\r\n                  <CeldaColumnaSeleccionador seleccion={(evento) => seleccionarUno(evento, elemento.id)} chequeado={idSeleccionados.indexOf(elemento.id) !== -1} />\r\n                  {Object.keys(columnas).map(nombreColumna=>(\r\n                    <TableCell>\r\n                      {typeof columnas[nombreColumna].href === 'undefined' ?\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      :\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                          \r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      }\r\n                    </TableCell>  \r\n                  ))}                  \r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n      <Paginacion actual={data.length} cambiarPagina={cambiarPagina}\r\n        cambiarLimite={cambiarLimite} pagina={pagina} limite={limite}/>  \r\n      \r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabla);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\vistas\\Help.js",["484"],"import React, { useState } from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport Boton from '../componentes/Boton2';\r\nimport { \r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Typography\r\n  } from '@material-ui/core';\r\nimport Youtube from 'react-youtube';\r\nimport { connect } from 'react-redux';\r\n\r\nconst Help = (props) => {\r\n  const [tutorial, setTutorial] = useState(true);\r\n  const irTutoriales = () => {\r\n  \tsetTutorial(true);\r\n  \tconsole.log(tutorial);\r\n  }\r\n  const irIssues = () => {\r\n  \tsetTutorial(false);\r\n  \tconsole.log(tutorial);\r\n  }\r\n  return (\r\n    <Contenedor>\r\n    \t<Grid container>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t\t<Grid container>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Ver Tutoriales\"} href={\"#\"} clickear={irTutoriales} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Crear Incidencia\"} href={\"#\"} clickear={irIssues} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t</Grid>\r\n    \t\t</Grid>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t\t{tutorial ? <Tutoriales tutoriales={props.tutoriales}/> : <Issue2 />}\r\n    \t\t</Grid>\r\n    \t</Grid>\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    color: theme.palette.grisoscuro,\r\n  },\r\n  nombre: {\r\n    paddingTop: theme.spacing(5),\r\n  },\r\n  descripcion: {\r\n    paddingTop: theme.spacing(4),\r\n\r\n  },\r\n}));\r\n\r\nconst Tutoriales = ({ className, tutoriales }) => {\r\n  const classes = useStyles();\r\n  const youtube_options = {\r\n    height: '360',\r\n    width: '600',\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const data = tutoriales.data;\r\n  console.log(\"Tuto\",data);\r\n  const getVideoId = (string) =>{\r\n    const separador = 'https://www.youtube.com/watch?v=';\r\n    return string.split(separador)[1];\r\n  };\r\n  const _onReady = (event) => {\r\n    // access to player in all event handlers via event.target\r\n    event.target.pauseVideo();\r\n  };\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={12}>\r\n        <Card\r\n          className={classes.card}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              align=\"center\"\r\n              gutterBottom\r\n              variant=\"h1\"\r\n            >\r\n              {\"Tutoriales\"}\r\n            </Typography>\r\n          </CardContent>\r\n          {tutoriales !== null ? \r\n            <>\r\n            {data.map((i,index)=>(\r\n              <CardContent>\r\n                <Grid container>\r\n                  <Grid item xs={6}>\r\n                    <Youtube\r\n                      videoId={getVideoId(i.value)}\r\n                      opts={youtube_options}\r\n                      onReady={_onReady}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={1}>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container>\r\n                      <Grid item xs={12}>\r\n                        <Typography\r\n                          align=\"center\"\r\n                          color=\"textPrimary\"\r\n                          variant=\"h5\"\r\n                          className={classes.nombre}\r\n                        >\r\n                          {i.name}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12}>\r\n                        <Typography\r\n                          align=\"center\"\r\n                          color=\"textPrimary\"\r\n                          variant=\"body1\"\r\n                          className={classes.descripcion}\r\n                        >\r\n                          {i.description}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={2}></Grid>\r\n                </Grid>\r\n              </CardContent>\r\n            ))}</>\r\n          :\r\n            <>\"Tutoriales aún no cargados\"</>\r\n          }\r\n          <CardContent>\r\n            <Grid container>\r\n              <Grid item xs={6}>\r\n                <Youtube\r\n                  videoId={\"I-1oJnmr6nk\"}\r\n                  opts={youtube_options}\r\n                  onReady={_onReady}\r\n                />\r\n              </Grid>\r\n              <Grid item xs={1}>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <Grid container>\r\n                  <Grid item xs={12}>\r\n                    <Typography\r\n                      align=\"center\"\r\n                      color=\"textPrimary\"\r\n                      variant=\"h5\"\r\n                      className={classes.nombre}\r\n                    >\r\n                      {\"Un tema\"}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Typography\r\n                      align=\"center\"\r\n                      color=\"textPrimary\"\r\n                      variant=\"body1\"\r\n                      className={classes.descripcion}\r\n                    >\r\n                      {\"Para distraerse\"}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={2}></Grid>\r\n            </Grid>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst Issue2 = (props) => {\r\n  \r\n  return (\r\n    <p>\r\n    {\"Issue\"}\r\n    </p>\r\n  );\r\n}\r\n\r\nconst Issue = (props) => {\r\n  \r\n  return (\r\n    <Contenedor>\r\n    \t<Grid container>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t\t<Grid container>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Ver Tutoriales\"} href={\"#\"} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Crear Incidencia\"} href={\"#\"} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t</Grid>\r\n    \t\t</Grid>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t</Grid>\r\n    \t</Grid>\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    tutoriales: estado.tutoriales,\r\n  }\r\n}\r\nconst mapDispatchToProps = despachar => {\r\n    return {}\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Help);","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Boton2.js",["485","486","487","488","489","490","491","492","493","494","495"],"import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  \r\n}));\r\n\r\nconst ProcessButton = ({ nombre, href, clickear }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    \r\n    <Button\r\n    variant=\"contained\" color=\"primary\"\r\n    to={href}\r\n    component={RouterLink}\r\n    className={classes.root}\r\n    onClick={clickear}\r\n    >\r\n    {nombre}\r\n    </Button>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProcessButton;","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\auth\\LoginView.js",["496","497"],"import React from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport MicroSoft from '../rose/Microsoft';\r\nimport Google from '../rose/Google';\r\nimport { connect } from 'react-redux';\r\nimport Page from '../componentes/Page';\r\nimport rosee from '../images/rose_title.png';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    backgroundColor: \"white\",\r\n    padding: theme.spacing(5),\r\n    borderRadius: theme.spacing(7),\r\n    [theme.breakpoints.down('sm')]: {\r\n      paddingTop: theme.spacing(4),\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      borderRadius: theme.spacing(5),\r\n    },\r\n  },\r\n  container: {\r\n    backgroundColor: theme.palette.success.main,\r\n    height: window.innerHeight,\r\n  },\r\n}));\r\n\r\n\r\nconst LoginView = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  return (\r\n    \r\n    <Box\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"center\"\r\n      className={classes.container}\r\n    >\r\n      <Container maxWidth=\"sm\" className={classes.form} >\r\n        <Formik\r\n          initialValues={{\r\n            email: '',\r\n            password: ''\r\n          }}\r\n          validationSchema={Yup.object().shape({\r\n            email: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\r\n            password: Yup.string().max(255).required('La contraseña es requerida')\r\n          })}\r\n          onSubmit={(values, actions) => {\r\n            console.log({\"email\":values.email,\"password\":values.password});\r\n            axios.post(\"http://127.0.0.1:8000/auth/login/\",\r\n              {\"email\":values.email,\"password\":values.password}\r\n            ).then(r=>{\r\n              console.log(r);\r\n              props.actualizarUser({\r\n                nombre:r.data.username,\r\n                correo: r.data.email,\r\n                response: r,\r\n              });\r\n              history.push('/WelcomePage');\r\n            }).catch(r=>{console.log(r);history.push('/');});\r\n            \r\n          }}\r\n        >\r\n          {({\r\n            errors,\r\n            handleBlur,\r\n            handleChange,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            touched,\r\n            values\r\n          }) => (\r\n            <form onSubmit={handleSubmit} >\r\n              <Box mb={3}>\r\n                <img src={rosee} alt=\"rose\" width=\"100%\"/>\r\n              </Box>\r\n              <TextField\r\n                error={Boolean(touched.email && errors.email)}\r\n                fullWidth\r\n                helperText={touched.email && errors.email}\r\n                label=\"Correo\"\r\n                margin=\"normal\"\r\n                name=\"email\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"email\"\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n              <TextField\r\n                error={Boolean(touched.password && errors.password)}\r\n                fullWidth\r\n                helperText={touched.password && errors.password}\r\n                label=\"Contraseña\"\r\n                margin=\"normal\"\r\n                name=\"password\"\r\n                onBlur={handleBlur}\r\n                onChange={handleChange}\r\n                type=\"password\"\r\n                value={values.password}\r\n                variant=\"outlined\"\r\n              />\r\n              <Box my={2}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  disabled={isSubmitting}\r\n                  fullWidth\r\n                  size=\"large\"\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Ingresar\r\n                </Button>\r\n              </Box>\r\n              <Box\r\n                mt={3}\r\n                mb={1}\r\n              >\r\n                <Typography\r\n                  align=\"center\"\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  o ingresa con\r\n                </Typography>\r\n              </Box>\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n              >\r\n                <Grid\r\n                  item\r\n                  xs={2}\r\n                  md={4}\r\n                ></Grid>\r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  md={2}\r\n                >\r\n                  <MicroSoft actualizarUser={props.actualizarUser}/>\r\n                </Grid>\r\n                \r\n                <Grid\r\n                  item\r\n                  xs={4}\r\n                  md={2}\r\n                >\r\n                  <Google actualizarUser={props.actualizarUser}/>\r\n                </Grid>\r\n                <Grid\r\n                  item\r\n                  xs={2}\r\n                  md={4}\r\n                ></Grid>\r\n              </Grid>\r\n              \r\n            </form>\r\n          )}\r\n        </Formik>\r\n      </Container>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst EnlaceRegistro = (props) => {\r\n  return(\r\n    <Typography\r\n      color=\"textSecondary\"\r\n      variant=\"body1\"\r\n    >\r\n      ¿No tienes cuenta?\r\n      {' '}\r\n      <Link\r\n        component={RouterLink}\r\n        to=\"/registro\"\r\n        variant=\"h6\"\r\n      >\r\n        Registrate\r\n      </Link>\r\n    </Typography>\r\n  );\r\n}\r\nconst actualizarUsuario = (usuario) => {\r\n  return {\r\n    type: 'ACTUALIZAR_USUARIO',\r\n    usuario: usuario,\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        actualizarUser: (usuario) => despachar(actualizarUsuario(usuario)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);\r\n\r\n","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\auth\\RegisterView.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\index.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\Page.js",["498"],"import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\Profile.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\account\\ProfileDetails.js",[],"C:\\Users\\Usuario\\Documents\\rose\\front_test2\\src\\componentes\\GlobalStyles.js",[],["499","500"],{"ruleId":"501","replacedBy":"502"},{"ruleId":"503","replacedBy":"504"},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"505","severity":1,"message":"509","line":2,"column":8,"nodeType":"507","messageId":"508","endLine":2,"endColumn":16},{"ruleId":"505","severity":1,"message":"510","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":18},{"ruleId":"505","severity":1,"message":"511","line":6,"column":10,"nodeType":"507","messageId":"508","endLine":6,"endColumn":14},{"ruleId":"505","severity":1,"message":"512","line":8,"column":8,"nodeType":"507","messageId":"508","endLine":8,"endColumn":14},{"ruleId":"505","severity":1,"message":"513","line":9,"column":8,"nodeType":"507","messageId":"508","endLine":9,"endColumn":32},{"ruleId":"505","severity":1,"message":"514","line":13,"column":9,"nodeType":"507","messageId":"508","endLine":13,"endColumn":15},{"ruleId":"515","severity":1,"message":"516","line":38,"column":5,"nodeType":"517","endLine":38,"endColumn":20,"suggestions":"518"},{"ruleId":"519","severity":1,"message":"520","line":75,"column":1,"nodeType":"521","messageId":"522","endLine":88,"endColumn":4},{"ruleId":"505","severity":1,"message":"523","line":9,"column":8,"nodeType":"507","messageId":"508","endLine":9,"endColumn":20},{"ruleId":"505","severity":1,"message":"524","line":3,"column":27,"nodeType":"507","messageId":"508","endLine":3,"endColumn":37},{"ruleId":"505","severity":1,"message":"525","line":4,"column":19,"nodeType":"507","messageId":"508","endLine":4,"endColumn":25},{"ruleId":"526","severity":1,"message":"527","line":1,"column":1,"nodeType":"528","endLine":15,"endColumn":3},{"ruleId":"526","severity":1,"message":"527","line":1,"column":1,"nodeType":"528","endLine":9,"endColumn":3},{"ruleId":"505","severity":1,"message":"529","line":1,"column":8,"nodeType":"507","messageId":"508","endLine":1,"endColumn":14},{"ruleId":"505","severity":1,"message":"530","line":2,"column":8,"nodeType":"507","messageId":"508","endLine":2,"endColumn":13},{"ruleId":"505","severity":1,"message":"531","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":14},{"ruleId":"505","severity":1,"message":"532","line":4,"column":8,"nodeType":"507","messageId":"508","endLine":4,"endColumn":18},{"ruleId":"505","severity":1,"message":"533","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":11},{"ruleId":"505","severity":1,"message":"534","line":6,"column":8,"nodeType":"507","messageId":"508","endLine":6,"endColumn":12},{"ruleId":"526","severity":1,"message":"527","line":8,"column":1,"nodeType":"528","endLine":34,"endColumn":3},{"ruleId":"526","severity":1,"message":"527","line":9,"column":1,"nodeType":"528","endLine":82,"endColumn":3},{"ruleId":"505","severity":1,"message":"535","line":1,"column":10,"nodeType":"507","messageId":"508","endLine":1,"endColumn":20},{"ruleId":"505","severity":1,"message":"536","line":1,"column":22,"nodeType":"507","messageId":"508","endLine":1,"endColumn":31},{"ruleId":"505","severity":1,"message":"537","line":1,"column":33,"nodeType":"507","messageId":"508","endLine":1,"endColumn":51},{"ruleId":"505","severity":1,"message":"538","line":1,"column":72,"nodeType":"507","messageId":"508","endLine":1,"endColumn":81},{"ruleId":"519","severity":1,"message":"539","line":29,"column":9,"nodeType":"521","messageId":"540","endLine":33,"endColumn":16},{"ruleId":"505","severity":1,"message":"541","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":26},{"ruleId":"505","severity":1,"message":"506","line":1,"column":28,"nodeType":"507","messageId":"508","endLine":1,"endColumn":36},{"ruleId":"505","severity":1,"message":"542","line":6,"column":8,"nodeType":"507","messageId":"508","endLine":6,"endColumn":13},{"ruleId":"505","severity":1,"message":"535","line":7,"column":10,"nodeType":"507","messageId":"508","endLine":7,"endColumn":20},{"ruleId":"505","severity":1,"message":"536","line":7,"column":22,"nodeType":"507","messageId":"508","endLine":7,"endColumn":31},{"ruleId":"505","severity":1,"message":"537","line":7,"column":33,"nodeType":"507","messageId":"508","endLine":7,"endColumn":51},{"ruleId":"505","severity":1,"message":"543","line":7,"column":53,"nodeType":"507","messageId":"508","endLine":7,"endColumn":70},{"ruleId":"505","severity":1,"message":"538","line":7,"column":72,"nodeType":"507","messageId":"508","endLine":7,"endColumn":81},{"ruleId":"505","severity":1,"message":"544","line":7,"column":83,"nodeType":"507","messageId":"508","endLine":7,"endColumn":89},{"ruleId":"505","severity":1,"message":"545","line":11,"column":9,"nodeType":"507","messageId":"508","endLine":11,"endColumn":15},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"505","severity":1,"message":"546","line":12,"column":3,"nodeType":"507","messageId":"508","endLine":12,"endColumn":15},{"ruleId":"505","severity":1,"message":"547","line":13,"column":3,"nodeType":"507","messageId":"508","endLine":13,"endColumn":16},{"ruleId":"505","severity":1,"message":"548","line":14,"column":3,"nodeType":"507","messageId":"508","endLine":14,"endColumn":15},{"ruleId":"505","severity":1,"message":"549","line":15,"column":3,"nodeType":"507","messageId":"508","endLine":15,"endColumn":26},{"ruleId":"505","severity":1,"message":"550","line":17,"column":3,"nodeType":"507","messageId":"508","endLine":17,"endColumn":7},{"ruleId":"505","severity":1,"message":"512","line":18,"column":3,"nodeType":"507","messageId":"508","endLine":18,"endColumn":9},{"ruleId":"505","severity":1,"message":"551","line":19,"column":3,"nodeType":"507","messageId":"508","endLine":19,"endColumn":10},{"ruleId":"505","severity":1,"message":"552","line":94,"column":9,"nodeType":"507","messageId":"508","endLine":94,"endColumn":16},{"ruleId":"505","severity":1,"message":"553","line":5,"column":3,"nodeType":"507","messageId":"508","endLine":5,"endColumn":12},{"ruleId":"505","severity":1,"message":"554","line":8,"column":3,"nodeType":"507","messageId":"508","endLine":8,"endColumn":13},{"ruleId":"505","severity":1,"message":"555","line":10,"column":8,"nodeType":"507","messageId":"508","endLine":10,"endColumn":11},{"ruleId":"505","severity":1,"message":"556","line":11,"column":8,"nodeType":"507","messageId":"508","endLine":11,"endColumn":18},{"ruleId":"505","severity":1,"message":"557","line":12,"column":8,"nodeType":"507","messageId":"508","endLine":12,"endColumn":16},{"ruleId":"505","severity":1,"message":"558","line":18,"column":7,"nodeType":"507","messageId":"508","endLine":18,"endColumn":14},{"ruleId":"505","severity":1,"message":"552","line":43,"column":9,"nodeType":"507","messageId":"508","endLine":43,"endColumn":16},{"ruleId":"505","severity":1,"message":"554","line":7,"column":3,"nodeType":"507","messageId":"508","endLine":7,"endColumn":13},{"ruleId":"505","severity":1,"message":"555","line":10,"column":8,"nodeType":"507","messageId":"508","endLine":10,"endColumn":11},{"ruleId":"505","severity":1,"message":"556","line":11,"column":8,"nodeType":"507","messageId":"508","endLine":11,"endColumn":18},{"ruleId":"505","severity":1,"message":"557","line":12,"column":8,"nodeType":"507","messageId":"508","endLine":12,"endColumn":16},{"ruleId":"505","severity":1,"message":"559","line":13,"column":8,"nodeType":"507","messageId":"508","endLine":13,"endColumn":21},{"ruleId":"505","severity":1,"message":"560","line":24,"column":7,"nodeType":"507","messageId":"508","endLine":24,"endColumn":16},{"ruleId":"505","severity":1,"message":"561","line":6,"column":8,"nodeType":"507","messageId":"508","endLine":6,"endColumn":18},{"ruleId":"505","severity":1,"message":"536","line":7,"column":22,"nodeType":"507","messageId":"508","endLine":7,"endColumn":31},{"ruleId":"505","severity":1,"message":"537","line":7,"column":33,"nodeType":"507","messageId":"508","endLine":7,"endColumn":51},{"ruleId":"505","severity":1,"message":"543","line":7,"column":53,"nodeType":"507","messageId":"508","endLine":7,"endColumn":70},{"ruleId":"505","severity":1,"message":"538","line":7,"column":72,"nodeType":"507","messageId":"508","endLine":7,"endColumn":81},{"ruleId":"505","severity":1,"message":"544","line":7,"column":83,"nodeType":"507","messageId":"508","endLine":7,"endColumn":89},{"ruleId":"562","severity":1,"message":"563","line":38,"column":11,"nodeType":"564","endLine":38,"endColumn":29},{"ruleId":"505","severity":1,"message":"565","line":45,"column":7,"nodeType":"507","messageId":"508","endLine":45,"endColumn":16},{"ruleId":"505","severity":1,"message":"566","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":26},{"ruleId":"505","severity":1,"message":"561","line":6,"column":8,"nodeType":"507","messageId":"508","endLine":6,"endColumn":18},{"ruleId":"562","severity":1,"message":"563","line":51,"column":13,"nodeType":"564","endLine":51,"endColumn":58},{"ruleId":"505","severity":1,"message":"567","line":2,"column":18,"nodeType":"507","messageId":"508","endLine":2,"endColumn":28},{"ruleId":"505","severity":1,"message":"568","line":15,"column":8,"nodeType":"507","messageId":"508","endLine":15,"endColumn":25},{"ruleId":"505","severity":1,"message":"569","line":16,"column":8,"nodeType":"507","messageId":"508","endLine":16,"endColumn":17},{"ruleId":"562","severity":1,"message":"563","line":45,"column":11,"nodeType":"564","endLine":48,"endColumn":18},{"ruleId":"505","severity":1,"message":"567","line":2,"column":18,"nodeType":"507","messageId":"508","endLine":2,"endColumn":28},{"ruleId":"505","severity":1,"message":"570","line":5,"column":3,"nodeType":"507","messageId":"508","endLine":5,"endColumn":9},{"ruleId":"505","severity":1,"message":"512","line":7,"column":3,"nodeType":"507","messageId":"508","endLine":7,"endColumn":9},{"ruleId":"505","severity":1,"message":"571","line":2,"column":8,"nodeType":"507","messageId":"508","endLine":2,"endColumn":12},{"ruleId":"505","severity":1,"message":"572","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":17},{"ruleId":"505","severity":1,"message":"573","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":24},{"ruleId":"505","severity":1,"message":"512","line":19,"column":3,"nodeType":"507","messageId":"508","endLine":19,"endColumn":9},{"ruleId":"526","severity":1,"message":"574","line":1,"column":1,"nodeType":"528","endLine":6,"endColumn":13},{"ruleId":"505","severity":1,"message":"575","line":1,"column":16,"nodeType":"507","messageId":"508","endLine":1,"endColumn":20},{"ruleId":"526","severity":1,"message":"576","line":3,"column":1,"nodeType":"528","endLine":904,"endColumn":3},{"ruleId":"505","severity":1,"message":"567","line":2,"column":18,"nodeType":"507","messageId":"508","endLine":2,"endColumn":28},{"ruleId":"505","severity":1,"message":"577","line":8,"column":3,"nodeType":"507","messageId":"508","endLine":8,"endColumn":9},{"ruleId":"505","severity":1,"message":"578","line":9,"column":3,"nodeType":"507","messageId":"508","endLine":9,"endColumn":11},{"ruleId":"505","severity":1,"message":"579","line":14,"column":3,"nodeType":"507","messageId":"508","endLine":14,"endColumn":11},{"ruleId":"505","severity":1,"message":"580","line":16,"column":3,"nodeType":"507","messageId":"508","endLine":16,"endColumn":17},{"ruleId":"505","severity":1,"message":"550","line":18,"column":3,"nodeType":"507","messageId":"508","endLine":18,"endColumn":7},{"ruleId":"505","severity":1,"message":"581","line":22,"column":3,"nodeType":"507","messageId":"508","endLine":22,"endColumn":13},{"ruleId":"505","severity":1,"message":"582","line":28,"column":10,"nodeType":"507","messageId":"508","endLine":28,"endColumn":20},{"ruleId":"505","severity":1,"message":"583","line":48,"column":7,"nodeType":"507","messageId":"508","endLine":48,"endColumn":19},{"ruleId":"505","severity":1,"message":"584","line":71,"column":7,"nodeType":"507","messageId":"508","endLine":71,"endColumn":18},{"ruleId":"519","severity":1,"message":"520","line":118,"column":1,"nodeType":"521","messageId":"522","endLine":125,"endColumn":4},{"ruleId":"505","severity":1,"message":"585","line":153,"column":9,"nodeType":"507","messageId":"508","endLine":153,"endColumn":19},{"ruleId":"505","severity":1,"message":"586","line":201,"column":21,"nodeType":"507","messageId":"508","endLine":201,"endColumn":24},{"ruleId":"505","severity":1,"message":"587","line":230,"column":19,"nodeType":"507","messageId":"508","endLine":230,"endColumn":26},{"ruleId":"505","severity":1,"message":"588","line":4,"column":8,"nodeType":"507","messageId":"508","endLine":4,"endColumn":13},{"ruleId":"505","severity":1,"message":"571","line":2,"column":8,"nodeType":"507","messageId":"508","endLine":2,"endColumn":12},{"ruleId":"505","severity":1,"message":"572","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":17},{"ruleId":"505","severity":1,"message":"589","line":4,"column":8,"nodeType":"507","messageId":"508","endLine":4,"endColumn":14},{"ruleId":"505","severity":1,"message":"573","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":24},{"ruleId":"505","severity":1,"message":"570","line":8,"column":3,"nodeType":"507","messageId":"508","endLine":8,"endColumn":9},{"ruleId":"505","severity":1,"message":"590","line":9,"column":3,"nodeType":"507","messageId":"508","endLine":9,"endColumn":6},{"ruleId":"505","severity":1,"message":"579","line":11,"column":3,"nodeType":"507","messageId":"508","endLine":11,"endColumn":11},{"ruleId":"505","severity":1,"message":"591","line":16,"column":3,"nodeType":"507","messageId":"508","endLine":16,"endColumn":18},{"ruleId":"505","severity":1,"message":"512","line":20,"column":3,"nodeType":"507","messageId":"508","endLine":20,"endColumn":9},{"ruleId":"505","severity":1,"message":"592","line":23,"column":8,"nodeType":"507","messageId":"508","endLine":23,"endColumn":19},{"ruleId":"501","replacedBy":"593"},{"ruleId":"503","replacedBy":"594"},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"505","severity":1,"message":"571","line":2,"column":8,"nodeType":"507","messageId":"508","endLine":2,"endColumn":12},{"ruleId":"505","severity":1,"message":"572","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":17},{"ruleId":"505","severity":1,"message":"589","line":4,"column":8,"nodeType":"507","messageId":"508","endLine":4,"endColumn":14},{"ruleId":"505","severity":1,"message":"573","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":24},{"ruleId":"505","severity":1,"message":"570","line":7,"column":3,"nodeType":"507","messageId":"508","endLine":7,"endColumn":9},{"ruleId":"505","severity":1,"message":"590","line":8,"column":3,"nodeType":"507","messageId":"508","endLine":8,"endColumn":6},{"ruleId":"505","severity":1,"message":"595","line":9,"column":3,"nodeType":"507","messageId":"508","endLine":9,"endColumn":7},{"ruleId":"505","severity":1,"message":"596","line":11,"column":3,"nodeType":"507","messageId":"508","endLine":11,"endColumn":8},{"ruleId":"505","severity":1,"message":"597","line":12,"column":3,"nodeType":"507","messageId":"508","endLine":12,"endColumn":12},{"ruleId":"505","severity":1,"message":"598","line":14,"column":3,"nodeType":"507","messageId":"508","endLine":14,"endColumn":12},{"ruleId":"505","severity":1,"message":"599","line":16,"column":3,"nodeType":"507","messageId":"508","endLine":16,"endColumn":11},{"ruleId":"505","severity":1,"message":"554","line":17,"column":3,"nodeType":"507","messageId":"508","endLine":17,"endColumn":13},{"ruleId":"505","severity":1,"message":"600","line":18,"column":3,"nodeType":"507","messageId":"508","endLine":18,"endColumn":13},{"ruleId":"505","severity":1,"message":"512","line":19,"column":3,"nodeType":"507","messageId":"508","endLine":19,"endColumn":9},{"ruleId":"505","severity":1,"message":"601","line":23,"column":7,"nodeType":"507","messageId":"508","endLine":23,"endColumn":13},{"ruleId":"602","severity":1,"message":"603","line":23,"column":17,"nodeType":"604","messageId":"605","endLine":23,"endColumn":20},{"ruleId":"505","severity":1,"message":"606","line":30,"column":7,"nodeType":"507","messageId":"508","endLine":30,"endColumn":13},{"ruleId":"602","severity":1,"message":"603","line":30,"column":17,"nodeType":"604","messageId":"605","endLine":30,"endColumn":20},{"ruleId":"505","severity":1,"message":"571","line":2,"column":8,"nodeType":"507","messageId":"508","endLine":2,"endColumn":12},{"ruleId":"505","severity":1,"message":"572","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":17},{"ruleId":"505","severity":1,"message":"570","line":5,"column":3,"nodeType":"507","messageId":"508","endLine":5,"endColumn":9},{"ruleId":"505","severity":1,"message":"590","line":6,"column":3,"nodeType":"507","messageId":"508","endLine":6,"endColumn":6},{"ruleId":"505","severity":1,"message":"595","line":8,"column":3,"nodeType":"507","messageId":"508","endLine":8,"endColumn":7},{"ruleId":"505","severity":1,"message":"607","line":9,"column":3,"nodeType":"507","messageId":"508","endLine":9,"endColumn":14},{"ruleId":"505","severity":1,"message":"511","line":10,"column":3,"nodeType":"507","messageId":"508","endLine":10,"endColumn":7},{"ruleId":"505","severity":1,"message":"554","line":11,"column":3,"nodeType":"507","messageId":"508","endLine":11,"endColumn":13},{"ruleId":"505","severity":1,"message":"608","line":12,"column":3,"nodeType":"507","messageId":"508","endLine":12,"endColumn":9},{"ruleId":"505","severity":1,"message":"609","line":15,"column":8,"nodeType":"507","messageId":"508","endLine":15,"endColumn":25},{"ruleId":"505","severity":1,"message":"610","line":16,"column":8,"nodeType":"507","messageId":"508","endLine":16,"endColumn":17},{"ruleId":"526","severity":1,"message":"576","line":3,"column":1,"nodeType":"528","endLine":679,"endColumn":3},{"ruleId":"505","severity":1,"message":"541","line":1,"column":27,"nodeType":"507","messageId":"508","endLine":1,"endColumn":36},{"ruleId":"505","severity":1,"message":"571","line":2,"column":8,"nodeType":"507","messageId":"508","endLine":2,"endColumn":12},{"ruleId":"505","severity":1,"message":"572","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":17},{"ruleId":"505","severity":1,"message":"589","line":4,"column":8,"nodeType":"507","messageId":"508","endLine":4,"endColumn":14},{"ruleId":"505","severity":1,"message":"573","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":24},{"ruleId":"505","severity":1,"message":"611","line":8,"column":10,"nodeType":"507","messageId":"508","endLine":8,"endColumn":23},{"ruleId":"505","severity":1,"message":"570","line":10,"column":3,"nodeType":"507","messageId":"508","endLine":10,"endColumn":9},{"ruleId":"505","severity":1,"message":"579","line":13,"column":3,"nodeType":"507","messageId":"508","endLine":13,"endColumn":11},{"ruleId":"505","severity":1,"message":"591","line":18,"column":3,"nodeType":"507","messageId":"508","endLine":18,"endColumn":18},{"ruleId":"505","severity":1,"message":"512","line":22,"column":3,"nodeType":"507","messageId":"508","endLine":22,"endColumn":9},{"ruleId":"505","severity":1,"message":"592","line":25,"column":8,"nodeType":"507","messageId":"508","endLine":25,"endColumn":19},{"ruleId":"505","severity":1,"message":"612","line":84,"column":7,"nodeType":"507","messageId":"508","endLine":84,"endColumn":24},{"ruleId":"505","severity":1,"message":"570","line":3,"column":3,"nodeType":"507","messageId":"508","endLine":3,"endColumn":9},{"ruleId":"505","severity":1,"message":"590","line":4,"column":3,"nodeType":"507","messageId":"508","endLine":4,"endColumn":6},{"ruleId":"505","severity":1,"message":"608","line":9,"column":3,"nodeType":"507","messageId":"508","endLine":9,"endColumn":9},{"ruleId":"613","severity":1,"message":"614","line":56,"column":22,"nodeType":"615","endLine":56,"endColumn":26},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"616","severity":1,"message":"617","line":40,"column":17,"nodeType":"507","messageId":"618","endLine":40,"endColumn":25},{"ruleId":"505","severity":1,"message":"511","line":4,"column":10,"nodeType":"507","messageId":"508","endLine":4,"endColumn":14},{"ruleId":"505","severity":1,"message":"619","line":6,"column":25,"nodeType":"507","messageId":"508","endLine":6,"endColumn":40},{"ruleId":"505","severity":1,"message":"620","line":29,"column":7,"nodeType":"507","messageId":"508","endLine":29,"endColumn":11},{"ruleId":"505","severity":1,"message":"506","line":1,"column":17,"nodeType":"507","messageId":"508","endLine":1,"endColumn":25},{"ruleId":"505","severity":1,"message":"621","line":3,"column":10,"nodeType":"507","messageId":"508","endLine":3,"endColumn":20},{"ruleId":"505","severity":1,"message":"622","line":3,"column":22,"nodeType":"507","messageId":"508","endLine":3,"endColumn":33},{"ruleId":"505","severity":1,"message":"623","line":3,"column":35,"nodeType":"507","messageId":"508","endLine":3,"endColumn":40},{"ruleId":"505","severity":1,"message":"624","line":3,"column":42,"nodeType":"507","messageId":"508","endLine":3,"endColumn":51},{"ruleId":"505","severity":1,"message":"625","line":4,"column":2,"nodeType":"507","messageId":"508","endLine":4,"endColumn":15},{"ruleId":"505","severity":1,"message":"626","line":4,"column":17,"nodeType":"507","messageId":"508","endLine":4,"endColumn":25},{"ruleId":"505","severity":1,"message":"627","line":4,"column":27,"nodeType":"507","messageId":"508","endLine":4,"endColumn":32},{"ruleId":"505","severity":1,"message":"628","line":4,"column":34,"nodeType":"507","messageId":"508","endLine":4,"endColumn":41},{"ruleId":"505","severity":1,"message":"629","line":4,"column":43,"nodeType":"507","messageId":"508","endLine":4,"endColumn":54},{"ruleId":"505","severity":1,"message":"630","line":5,"column":3,"nodeType":"507","messageId":"508","endLine":5,"endColumn":22},{"ruleId":"505","severity":1,"message":"631","line":5,"column":24,"nodeType":"507","messageId":"508","endLine":5,"endColumn":39},{"ruleId":"505","severity":1,"message":"632","line":5,"column":41,"nodeType":"507","messageId":"508","endLine":5,"endColumn":52},{"ruleId":"505","severity":1,"message":"633","line":10,"column":8,"nodeType":"507","messageId":"508","endLine":10,"endColumn":17},{"ruleId":"505","severity":1,"message":"541","line":1,"column":27,"nodeType":"507","messageId":"508","endLine":1,"endColumn":36},{"ruleId":"505","severity":1,"message":"571","line":2,"column":8,"nodeType":"507","messageId":"508","endLine":2,"endColumn":12},{"ruleId":"505","severity":1,"message":"572","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":17},{"ruleId":"505","severity":1,"message":"589","line":4,"column":8,"nodeType":"507","messageId":"508","endLine":4,"endColumn":14},{"ruleId":"505","severity":1,"message":"573","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":24},{"ruleId":"505","severity":1,"message":"567","line":6,"column":18,"nodeType":"507","messageId":"508","endLine":6,"endColumn":28},{"ruleId":"505","severity":1,"message":"570","line":9,"column":3,"nodeType":"507","messageId":"508","endLine":9,"endColumn":9},{"ruleId":"505","severity":1,"message":"590","line":10,"column":3,"nodeType":"507","messageId":"508","endLine":10,"endColumn":6},{"ruleId":"505","severity":1,"message":"579","line":12,"column":3,"nodeType":"507","messageId":"508","endLine":12,"endColumn":11},{"ruleId":"505","severity":1,"message":"591","line":17,"column":3,"nodeType":"507","messageId":"508","endLine":17,"endColumn":18},{"ruleId":"505","severity":1,"message":"512","line":21,"column":3,"nodeType":"507","messageId":"508","endLine":21,"endColumn":9},{"ruleId":"505","severity":1,"message":"592","line":24,"column":8,"nodeType":"507","messageId":"508","endLine":24,"endColumn":19},{"ruleId":"505","severity":1,"message":"634","line":78,"column":7,"nodeType":"507","messageId":"508","endLine":78,"endColumn":14},{"ruleId":"505","severity":1,"message":"635","line":194,"column":7,"nodeType":"507","messageId":"508","endLine":194,"endColumn":12},{"ruleId":"505","severity":1,"message":"571","line":2,"column":8,"nodeType":"507","messageId":"508","endLine":2,"endColumn":12},{"ruleId":"505","severity":1,"message":"572","line":3,"column":8,"nodeType":"507","messageId":"508","endLine":3,"endColumn":17},{"ruleId":"505","severity":1,"message":"570","line":5,"column":3,"nodeType":"507","messageId":"508","endLine":5,"endColumn":9},{"ruleId":"505","severity":1,"message":"590","line":6,"column":3,"nodeType":"507","messageId":"508","endLine":6,"endColumn":6},{"ruleId":"505","severity":1,"message":"595","line":8,"column":3,"nodeType":"507","messageId":"508","endLine":8,"endColumn":7},{"ruleId":"505","severity":1,"message":"607","line":9,"column":3,"nodeType":"507","messageId":"508","endLine":9,"endColumn":14},{"ruleId":"505","severity":1,"message":"511","line":10,"column":3,"nodeType":"507","messageId":"508","endLine":10,"endColumn":7},{"ruleId":"505","severity":1,"message":"554","line":11,"column":3,"nodeType":"507","messageId":"508","endLine":11,"endColumn":13},{"ruleId":"505","severity":1,"message":"608","line":12,"column":3,"nodeType":"507","messageId":"508","endLine":12,"endColumn":9},{"ruleId":"505","severity":1,"message":"609","line":15,"column":8,"nodeType":"507","messageId":"508","endLine":15,"endColumn":25},{"ruleId":"505","severity":1,"message":"610","line":16,"column":8,"nodeType":"507","messageId":"508","endLine":16,"endColumn":17},{"ruleId":"505","severity":1,"message":"636","line":19,"column":8,"nodeType":"507","messageId":"508","endLine":19,"endColumn":12},{"ruleId":"505","severity":1,"message":"637","line":181,"column":7,"nodeType":"507","messageId":"508","endLine":181,"endColumn":21},{"ruleId":"505","severity":1,"message":"514","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":16},{"ruleId":"501","replacedBy":"638"},{"ruleId":"503","replacedBy":"639"},"no-native-reassign",["640"],"no-negated-in-lhs",["641"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'ReactDOM' is defined but never used.","'Navegacion' is defined but never used.","'Grid' is defined but never used.","'Button' is defined but never used.","'obtenerEstadoUsuarioTest' is defined but never used.","'Helmet' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.cargarBienvenida', 'props.cargarProcesos', and 'props.cargarTutoriales'. Either include them or remove the dependency array.","ArrayExpression",["642"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'RegisterView' is defined but never used.","'IconButton' is defined but never used.","'BuildI' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'purple' is defined but never used.","'amber' is defined but never used.","'indigo' is defined but never used.","'deepPurple' is defined but never used.","'red' is defined but never used.","'teal' is defined but never used.","'loginPopup' is defined but never used.","'ssoSilent' is defined but never used.","'acquireTokenSilent' is defined but never used.","'Microsoft' is defined but never used.","Nested block is redundant.","redundantNestedBlock","'useEffect' is defined but never used.","'axios' is defined but never used.","'isMicrosoftLogged' is defined but never used.","'logout' is defined but never used.","'estado' is assigned a value but never used.","'ListItemText' is defined but never used.","'ListSubheader' is defined but never used.","'ListItemIcon' is defined but never used.","'ListItemSecondaryAction' is defined but never used.","'Link' is defined but never used.","'Divider' is defined but never used.","'classes' is assigned a value but never used.","'Container' is defined but never used.","'Typography' is defined but never used.","'KPI' is defined but never used.","'Bienvenida' is defined but never used.","'Procesos' is defined but never used.","'example' is assigned a value but never used.","'ProcessButton' is defined but never used.","'Dashboard' is assigned a value but never used.","'DeleteIcon' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'MicroSoft' is assigned a value but never used.","'Component' is defined but never used.","'RouterLink' is defined but never used.","'NotificationsIcon' is defined but never used.","'InputIcon' is defined but never used.","'Avatar' is defined but never used.","'clsx' is defined but never used.","'PropTypes' is defined but never used.","'PerfectScrollbar' is defined but never used.","Assign arrow function to a variable before exporting as module default","'uuid' is defined but never used.","Assign array to a variable before exporting as module default","'Select' is defined but never used.","'MenuItem' is defined but never used.","'Checkbox' is defined but never used.","'FormHelperText' is defined but never used.","'InputLabel' is defined but never used.","'uploadFile' is defined but never used.","'uploadFile22' is assigned a value but never used.","'uploadFile2' is assigned a value but never used.","'handleFile' is assigned a value but never used.","'cvs' is assigned a value but never used.","'configu' is assigned a value but never used.","'Boton' is defined but never used.","'moment' is defined but never used.","'Box' is defined but never used.","'TablePagination' is defined but never used.","'getInitials' is defined but never used.",["640"],["641"],"'Card' is defined but never used.","'Table' is defined but never used.","'TableBody' is defined but never used.","'TableHead' is defined but never used.","'TableRow' is defined but never used.","'makeStyles' is defined but never used.","'Titulo' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'Cuerpo' is assigned a value but never used.","'CardContent' is defined but never used.","'colors' is defined but never used.","'ArrowDownwardIcon' is defined but never used.","'MoneyIcon' is defined but never used.","'ThemeProvider' is defined but never used.","'DescargaExcelTest' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-redeclare","'response' is already defined.","redeclared","'convertFromHTML' is defined but never used.","'Form' is assigned a value but never used.","'AddProcess' is defined but never used.","'EditProcess' is defined but never used.","'Error' is defined but never used.","'HelpIssue' is defined but never used.","'HelpTutorials' is defined but never used.","'Historic' is defined but never used.","'Login' is defined but never used.","'Process' is defined but never used.","'ViewProcess' is defined but never used.","'ViewProcessCalendar' is defined but never used.","'ViewProcessMail' is defined but never used.","'WelcomePage' is defined but never used.","'MicroSoft' is defined but never used.","'history' is assigned a value but never used.","'Issue' is assigned a value but never used.","'Page' is defined but never used.","'EnlaceRegistro' is assigned a value but never used.",["640"],["641"],"no-global-assign","no-unsafe-negation",{"desc":"643","fix":"644"},"Update the dependencies array to be: [props.cargarBienvenida, props.cargarProcesos, props.cargarTutoriales, props.usuario]",{"range":"645","text":"646"},[1567,1582],"[props.cargarBienvenida, props.cargarProcesos, props.cargarTutoriales, props.usuario]"]