{"version":3,"sources":["contenedor/NavBar/NavItem.js","contenedor/NavBar/index.js","contenedor/TopBar.js","contenedor/index.js","componentes/Page.js","componentes/KPI.js","componentes/welcome/Bienvenida.js","componentes/Boton.js","componentes/Procesos.js","componentes/AddProcess.js","vistas/AddProcess.js","vistas/EditProcess.js","vistas/Error.js","componentes/Boton2.js","vistas/Help.js","vistas/HelpTutorials.js","componentes/downloads/DescargaExcel.js","componentes/table/Elementos.js","componentes/table/Historico.js","vistas/Historic.js","vistas/Login.js","componentes/table/Procesos.js","vistas/Process.js","componentes/Dialogo.js","componentes/process/Calendar.js","componentes/Editor.js","componentes/process/Mail.js","componentes/process/KPIContainer.js","componentes/process/KPIs.js","vistas/ViewProcess.js","vistas/ViewProcessCalendar.js","vistas/ViewProcessMail.js","componentes/welcome/KPIContainer.js","componentes/welcome/KPIWelcome.js","rose/Msal.js","vistas/WelcomePage.js","rose/Microsoft.js","rose/Google.js","auth/LoginView.js","auth/RegisterView.js","componentes/account/Profile.js","componentes/account/ProfileDetails.js","componentes/account/index.js","componentes/Cambiador.js","componentes/CambiadorPublico.js","componentes/DataProcesos.js","App.js","serviceWorker.js","store/index.js","estilo/Tipografia.js","estilo/Breakpoints.js","estilo/TipografiaResponsiva.js","estilo/Estilo.js","estilo/Paleta.js","index.js"],"names":["useStyles","makeStyles","theme","item","display","paddingTop","paddingBottom","button","color","palette","text","secondary","fontWeight","typography","fontWeightMedium","justifyContent","letterSpacing","padding","textTransform","width","primary","icon","marginRight","spacing","title","active","main","NavItem","className","href","Icon","rest","classes","ListItem","clsx","disableGutters","Button","activeClassName","component","RouterLink","to","size","user","items","BarChartIcon","UsersIcon","ShoppingBagIcon","UserIcon","mobileDrawer","desktopDrawer","top","height","avatar","cursor","NavBar","onMobileClose","openMobile","location","useLocation","useEffect","pathname","content","Box","flexDirection","alignItems","p","Avatar","src","Typography","name","variant","Divider","List","map","flexGrow","Hidden","lgUp","Drawer","anchor","paper","onClose","open","mdDown","defaultProps","root","TopBar","onMobileNavOpen","useState","notifications","AppBar","elevation","Toolbar","IconButton","Badge","badgeContent","length","onClick","backgroundColor","background","dark","overflow","contentContainer","flex","breakpoints","up","paddingLeft","container","DashboardLayout","props","isMobileNavOpen","setMobileNavOpen","maxWidth","children","Page","forwardRef","ref","Helmet","colors","purple","differenceIcon","differenceValue","KPI","nombre","cantidad","Card","CardContent","Grid","justify","gutterBottom","card","Bienvenida","bienvenida","xs","align","ProcessButton","AWS","config","update","accessKeyId","secretAccessKey","S3","params","Bucket","region","connect","estado","usuario","despachar","useHistory","initialValues","vacant","description","area","subarea","industry","is_remote","exp","idioms","skills","desired_exp","desired_idioms","desired_skills","desired_college","desired_designation","file","validationSchema","Yup","shape","max","required","onSubmit","values","actions","date","fecha","Date","dia","getDate","mes","getMonth","ano","getFullYear","email_cambiado","correo","replace","name_cambiado","replaceAll","ruta","payload","console","log","configu","bucketName","dirName","uploadFile","then","data","axios","post","r","catch","e","err","error","errors","handleBlur","handleChange","handleSubmit","touched","isSubmitting","mb","direction","TextField","Boolean","fullWidth","helperText","label","margin","onBlur","onChange","value","type","FormControlLabel","control","Switch","checked","labelPlacement","style","hidden","my","disabled","AddProcess","EditProcess","Error","clickear","Tutoriales","Issue2","Help","tutorial","setTutorial","HelpTutorials","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","DescargaExcelProcesos","boton","columnas","element","DescargaExcelCandidatos","DescargaExcelHistorico","CeldaColumnaSeleccionador","seleccion","chequeado","TableCell","Checkbox","TituloColumnaSeleccionador","indeterminado","seleccionarTodos","indeterminate","Paginacion","actual","cambiarPagina","cambiarLimite","pagina","limite","TablePagination","count","onChangePage","onChangeRowsPerPage","page","rowsPerPage","rowsPerPageOptions","idSeleccionados","definirIdSeleccionados","definirLimite","definirPagina","Table","TableHead","TableRow","evento","nuevosIdSeleccionados","target","elemento","id","Object","keys","nombreColumna","titulo","TableBody","slice","hover","selected","indexOf","indiceSeleccionado","concat","seleccionarUno","tamano","nuevaPagina","historicData","ciudad","email","profesion","universidad","Historic","link","columnasExcel","col","candidatosSeleccionados","filter","i","index","includes","md","sm","lg","Boton","Copyright","Link","marginTop","form","submit","SignIn","CssBaseline","noValidate","autoComplete","autoFocus","mt","seleccionarProceso","newIndex","history","push","Dashboard","procesosSeleccionados","procesos","createdAt","status","below","normal","outstanding","undefined","procesos_exportar_excel","procesosExportarExcel","newState","Dialogo","setOpen","Dialog","aria-labelledby","DialogTitle","Calendar","MyEditor","setEditorState","editorState","wrapperClassName","editorClassName","onEditorStateChange","placeholder","Mail","usermail","candidatemail","EditorState","createEmpty","html","convertToHTML","getCurrentContent","Editor","Container","forma","itemes","KPIWelcome","KPIContainer","ligth","Lista","maxHeight","candidatos","seleccionarCandidato","mail","experiencia","edge","aria-label","setOpenCalendar","setOpenMail","proceso_viewprocess","candidato","candidato_viewprocess","candidatosProceso","candidatoCV","React","openMail","openCalendar","candidatosProcesoExcel","KPIs","ViewProcessCalendar","ViewProcessMail","resumes_ct","saved_time_min","selections_ct","msalInstance","Msal","auth","clientId","handleRedirectCallback","response","actualizarUsuario","setData","get","res","welcome_message","MicroSoftOld","authCallback","accessToken","actualizarUser","uid","account","accountIdentifier","userName","er","redirectUri","graphScopes","Google","buttonText","prompt","scope","onSuccess","profileObj","tokenId","assign","googleId","familyName","reloadAuthResponse","onFailure","cookiePolicy","password","username","RegisterView","firstName","lastName","policy","oneOf","ml","underline","FormHelperText","Profile","dateText","moment","format","CardActions","states","ProfileDetails","phone","state","country","setValues","event","CardHeader","subheader","select","SelectProps","native","option","minHeight","Account","Cambiador","exact","path","AccountView","MicroSoft","LoginView","Login","Process","ViewProcess","WelcomePage","numero","egreso","trabajadoen","trabajadocomo","idiomas","certificaciones","Casos","privado","publico","CambiadorPublico","requestsProcesos","cargarProcesos","Promise","resolve","reject","salida","requestsCandidatosProceso","idProceso","window","hostname","match","reductorRaiz","combineReducers","accion","fontFamily","join","xl","createMuiTheme","puntos","h1","fontSize","h2","h3","h4","h5","h6","tipograf","tipografia","tipografiaresponsiva","success","info","overrides","MuiCssBaseline","MuiButton","roboto","monserrat","Estilo","ThemeProvider","almacen","createStore","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.9c445db3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Button,\r\n  ListItem,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  item: {\r\n    display: 'flex',\r\n    paddingTop: 0,\r\n    paddingBottom: 0\r\n  },\r\n  button: {\r\n    color: theme.palette.text.secondary,\r\n    fontWeight: theme.typography.fontWeightMedium,\r\n    justifyContent: 'flex-start',\r\n    letterSpacing: 0,\r\n    padding: '10px 8px',\r\n    textTransform: 'none',\r\n    width: '100%',\r\n    '&:hover':{\r\n      color: theme.palette.text.primary,\r\n    },\r\n  },\r\n  icon: {\r\n    marginRight: theme.spacing(1)\r\n  },\r\n  title: {\r\n    marginRight: 'auto'\r\n  },\r\n  active: {\r\n    color: theme.palette.primary.main,\r\n    '& $title': {\r\n      fontWeight: theme.typography.fontWeightMedium\r\n    },\r\n    '& $icon': {\r\n      color: theme.palette.primary.main\r\n    }\r\n  }\r\n}));\r\n\r\nconst NavItem = ({\r\n  className,\r\n  href,\r\n  icon: Icon,\r\n  title,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem\r\n      className={clsx(classes.item, className)}\r\n      disableGutters\r\n      {...rest}\r\n    >\r\n      <Button\r\n        activeClassName={classes.active}\r\n        className={classes.button}\r\n        component={RouterLink}\r\n        to={href}\r\n      >\r\n        {Icon && (\r\n          <Icon\r\n            className={classes.icon}\r\n            size=\"20\"\r\n          />\r\n        )}\r\n        <span className={classes.title}>\r\n          {title}\r\n        </span>\r\n      </Button>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nNavItem.propTypes = {\r\n  className: PropTypes.string,\r\n  href: PropTypes.string,\r\n  icon: PropTypes.elementType,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default NavItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Divider,\r\n  Drawer,\r\n  Hidden,\r\n  List,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport {\r\n  AlertCircle as AlertCircleIcon,\r\n  BarChart as BarChartIcon,\r\n  Lock as LockIcon,\r\n  Settings as SettingsIcon,\r\n  ShoppingBag as ShoppingBagIcon,\r\n  User as UserIcon,\r\n  UserPlus as UserPlusIcon,\r\n  Users as UsersIcon\r\n} from 'react-feather';\r\nimport NavItem from './NavItem';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  jobTitle: 'Psicóloga',\r\n  name: 'Catalina Suárez'\r\n};\r\n\r\nconst items = [\r\n  {\r\n    href: '/WelcomePage',\r\n    icon: BarChartIcon,\r\n    title: 'Inicio'\r\n  },\r\n  {\r\n    href: '/Process',\r\n    icon: UsersIcon,\r\n    title: 'Procesos'\r\n  },\r\n  {\r\n    href: '/Historic',\r\n    icon: ShoppingBagIcon,\r\n    title: 'Histórico'\r\n  },\r\n  {\r\n    href: '/Ayuda',\r\n    icon: UserIcon,\r\n    title: 'Ayuda'\r\n  },\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  mobileDrawer: {\r\n    width: 256\r\n  },\r\n  desktopDrawer: {\r\n    width: 256,\r\n    top: 64,\r\n    height: 'calc(100% - 64px)'\r\n  },\r\n  avatar: {\r\n    cursor: 'pointer',\r\n    width: 64,\r\n    height: 64\r\n  }\r\n}));\r\n\r\nconst NavBar = ({ onMobileClose, openMobile }) => {\r\n  const classes = useStyles();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (openMobile && onMobileClose) {\r\n      onMobileClose();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [location.pathname]);\r\n\r\n  const content = (\r\n    <Box\r\n      height=\"100%\"\r\n      display=\"flex\"\r\n      flexDirection=\"column\"\r\n    >\r\n      <Box\r\n        alignItems=\"center\"\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        p={2}\r\n      >\r\n        <Avatar\r\n          className={classes.avatar}\r\n          component={RouterLink}\r\n          src={user.avatar}\r\n          to=\"/app/account\"\r\n        />\r\n        <Typography\r\n          className={classes.name}\r\n          color=\"textPrimary\"\r\n          variant=\"h5\"\r\n        >\r\n          {user.name}\r\n        </Typography>\r\n        <Typography\r\n          color=\"textSecondary\"\r\n          variant=\"body2\"\r\n        >\r\n          {user.jobTitle}\r\n        </Typography>\r\n      </Box>\r\n      <Divider />\r\n      <Box p={2}>\r\n        <List>\r\n          {items.map((item) => (\r\n            <NavItem\r\n              href={item.href}\r\n              key={item.title}\r\n              title={item.title}\r\n              icon={item.icon}\r\n            />\r\n          ))}\r\n        </List>\r\n      </Box>\r\n      <Box flexGrow={1} />\r\n      \r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Hidden lgUp>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.mobileDrawer }}\r\n          onClose={onMobileClose}\r\n          open={openMobile}\r\n          variant=\"temporary\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n      <Hidden mdDown>\r\n        <Drawer\r\n          anchor=\"left\"\r\n          classes={{ paper: classes.desktopDrawer }}\r\n          open\r\n          variant=\"persistent\"\r\n        >\r\n          {content}\r\n        </Drawer>\r\n      </Hidden>\r\n    </>\r\n  );\r\n};\r\n\r\nNavBar.propTypes = {\r\n  onMobileClose: PropTypes.func,\r\n  openMobile: PropTypes.bool\r\n};\r\n\r\nNavBar.defaultProps = {\r\n  onMobileClose: () => {},\r\n  openMobile: false\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from 'react';\r\nimport { Link as RouterLink } from 'react-router-dom';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  AppBar,\r\n  Badge,\r\n  Box,\r\n  Hidden,\r\n  IconButton,\r\n  Toolbar,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\r\nimport InputIcon from '@material-ui/icons/Input';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    width: 60,\r\n    height: 60\r\n  }\r\n}));\r\n\r\nconst TopBar = ({\r\n  className,\r\n  onMobileNavOpen,\r\n  ...rest\r\n}) => {\r\n  const classes = useStyles();\r\n  const [notifications] = useState([]);\r\n\r\n  return (\r\n    <AppBar\r\n      className={clsx(classes.root, className)}\r\n      elevation={0}\r\n      {...rest}\r\n    >\r\n      <Toolbar>\r\n        <RouterLink to=\"/\">\r\n          \r\n          {'Rose'}\r\n        </RouterLink>\r\n        <Box flexGrow={1} />\r\n        <Hidden mdDown>\r\n          <IconButton color=\"inherit\">\r\n            <Badge\r\n              badgeContent={notifications.length}\r\n              color=\"primary\"\r\n              variant=\"dot\"\r\n            >\r\n              <NotificationsIcon />\r\n            </Badge>\r\n          </IconButton>\r\n          <IconButton color=\"inherit\">\r\n            <InputIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n        <Hidden lgUp>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            onClick={onMobileNavOpen}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Hidden>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nTopBar.propTypes = {\r\n  className: PropTypes.string,\r\n  onMobileNavOpen: PropTypes.func\r\n};\r\n\r\nexport default TopBar;\r\n","import React, { useState } from 'react';\r\nimport { Container, makeStyles } from '@material-ui/core';\r\nimport NavBar from './NavBar';\r\nimport TopBar from './TopBar';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    display: 'flex',\r\n    height: '100%',\r\n    overflow: 'hidden',\r\n    width: '100%'\r\n  },\r\n  contentContainer: {\r\n    display: 'flex',\r\n    flex: '1 1 auto',\r\n    height: '100%',\r\n    width:'100%',\r\n    //overflow: 'auto',\r\n    paddingTop: 64,\r\n    [theme.breakpoints.up('lg')]: {\r\n      paddingLeft: 256\r\n    },\r\n  },\r\n  container: {\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst DashboardLayout = (props) => {\r\n  const classes = useStyles();\r\n  const [isMobileNavOpen, setMobileNavOpen] = useState(false);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <TopBar onMobileNavOpen={() => setMobileNavOpen(true)} />\r\n      <NavBar\r\n        onMobileClose={() => setMobileNavOpen(false)}\r\n        openMobile={isMobileNavOpen}\r\n      />\r\n      <div className={classes.contentContainer}>\r\n        <Container className={classes.container} maxWidth={false}>\r\n          {props.children}\r\n        </Container>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardLayout;\r\n","import React, { forwardRef } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Page = forwardRef(({\r\n  children,\r\n  title = '',\r\n  ...rest\r\n}, ref) => {\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      {...rest}\r\n    >\r\n      <Helmet>\r\n        <title>{title}</title>\r\n      </Helmet>\r\n      {children}\r\n    </div>\r\n  );\r\n});\r\n\r\nPage.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100%'\r\n  },\r\n  avatar: {\r\n    backgroundColor: colors.purple[600],\r\n    height: 56,\r\n    width: 56\r\n  },\r\n  differenceIcon: {\r\n    color: colors.purple[900]\r\n  },\r\n  differenceValue: {\r\n    color: colors.purple[900],\r\n    marginRight: theme.spacing(1)\r\n  }\r\n}));\r\n\r\nconst KPI = ({ nombre, cantidad, icon }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      <CardContent>\r\n        <Grid\r\n          container\r\n          justify=\"space-between\"\r\n          spacing={3}\r\n        >\r\n          <Grid item>\r\n            <Typography\r\n              color=\"textSecondary\"\r\n              gutterBottom\r\n              variant=\"h6\"\r\n            >\r\n              {nombre}\r\n            </Typography>\r\n            <Typography\r\n              color=\"textPrimary\"\r\n              variant=\"h3\"\r\n            >\r\n              {cantidad}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item>\r\n            <Avatar className={classes.avatar}>\r\n              {icon}\r\n            </Avatar>\r\n          </Grid>\r\n        </Grid>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default KPI;","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing(3)\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column'\r\n  },\r\n}));\r\n\r\nconst Bienvenida = ({ className, bienvenida }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid item xs={12}>\r\n        <Card\r\n          className={classes.card}\r\n        >\r\n          <CardContent>\r\n            <Typography\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              gutterBottom\r\n              variant=\"h4\"\r\n            >\r\n              {\"Bienvenida\"}\r\n            </Typography>\r\n            <Typography\r\n              align=\"center\"\r\n              color=\"textPrimary\"\r\n              variant=\"body1\"\r\n            >\r\n              {bienvenida}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\n\r\nexport default Bienvenida;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  \r\n}));\r\n\r\nconst ProcessButton = ({ nombre, href }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    \r\n    <Button\r\n    variant=\"contained\" color=\"primary\"\r\n    to={href}\r\n    component={RouterLink}\r\n    className={classes.root}\r\n    >\r\n    {nombre}\r\n    </Button>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProcessButton;","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport getInitials from './getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\n\r\nconst Procesos = ({ className, data, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\r\n  const [limite, definirLimite] = useState(10);\r\n  const [pagina, definirPagina] = useState(0);\r\n\r\n  const seleccionarTodos = (evento) => {\r\n    let nuevosIdSeleccionados;\r\n\r\n    if (evento.target.checked) {\r\n      nuevosIdSeleccionados = data.map((customer) => customer.id);\r\n    } else {\r\n      nuevosIdSeleccionados = [];\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const seleccionarUno = (evento, id) => {\r\n    const indiceSeleccionado = idSeleccionados.indexOf(id);\r\n    let nuevosIdSeleccionados = [];\r\n\r\n    if (indiceSeleccionado === -1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados, id);\r\n    } else if (indiceSeleccionado === 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(1));\r\n    } else if (indiceSeleccionado === idSeleccionados.length - 1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(0, -1));\r\n    } else if (indiceSeleccionado > 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(\r\n        idSeleccionados.slice(0, indiceSeleccionado),\r\n        idSeleccionados.slice(indiceSeleccionado + 1)\r\n      );\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const cambiarLimite = (evento) => {\r\n    definirLimite(evento.target.value);\r\n  };\r\n\r\n  const cambiarPagina = (evento, nuevaPagina) => {\r\n    definirPagina(nuevaPagina);\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    checked={idSeleccionados.length === data.length}\r\n                    color=\"primary\"\r\n                    indeterminate={\r\n                      idSeleccionados.length > 0\r\n                      && idSeleccionados.length < data.length\r\n                    }\r\n                    onChange={seleccionarTodos}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  Nombre\r\n                </TableCell>\r\n                <TableCell>\r\n                  Creado\r\n                </TableCell>\r\n                <TableCell>\r\n                  Status\r\n                </TableCell>\r\n                <TableCell>\r\n                  Below\r\n                </TableCell>\r\n                <TableCell>\r\n                  Normal\r\n                </TableCell>\r\n                <TableCell>\r\n                  Outstanding\r\n                </TableCell>\r\n                \r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(limite*pagina, limite*(pagina+1)).map((customer) => (\r\n                <TableRow\r\n                  hover\r\n                  key={customer.id}\r\n                  selected={idSeleccionados.indexOf(customer.id) !== -1}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      checked={idSeleccionados.indexOf(customer.id) !== -1}\r\n                      onChange={(evento) => seleccionarUno(evento, customer.id)}\r\n                      value=\"true\"\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    <Box\r\n                      alignItems=\"center\"\r\n                      display=\"flex\"\r\n                    >\r\n                      <Avatar\r\n                        className={classes.avatar}\r\n                        src={customer.avatarUrl}\r\n                      >\r\n                        {getInitials(customer.nombre)}\r\n                      </Avatar>\r\n                      <Typography\r\n                        color=\"textPrimary\"\r\n                        variant=\"body1\"\r\n                      >\r\n                        {customer.nombre}\r\n                      </Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {moment(customer.createdAt).format('DD/MM/YYYY')}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.status}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.below}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.normal}\r\n                  </TableCell>\r\n                  <TableCell>\r\n                    {customer.outstanding}\r\n                  </TableCell>\r\n                  \r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        \r\n      <TablePagination\r\n        component=\"div\"\r\n        count={data.length}\r\n        onChangePage={cambiarPagina}\r\n        onChangeRowsPerPage={cambiarLimite}\r\n        page={pagina}\r\n        rowsPerPage={limite}\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Procesos;","import React from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Select,\r\n  MenuItem,\r\n  FormControlLabel,\r\n  Switch,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  InputLabel,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from './Page';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { uploadFile } from 'react-s3';\r\nimport AWS from 'aws-sdk';\r\n\r\nAWS.config.update({\r\n  accessKeyId: 'AKIAJEN4JB3CITFUIUFQ',\r\n  secretAccessKey: '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'\r\n})\r\n\r\nconst myBucket = new AWS.S3({\r\n  params: { Bucket: 'rosev0'},\r\n  region: 'us-west-2',\r\n})\r\n\r\nconst uploadFile2 = (file,ruta) => {\r\n  const params = {\r\n    ACL: 'public-read',\r\n    Key: ruta,\r\n    ContentType: file.type,\r\n    Body: file,\r\n  }\r\n  myBucket.putObject(params)\r\n    .on('httpUploadProgress', (evt) => console.log(\"evt\",evt))\r\n    .send((err) => {\r\n       if (err) {\r\n         console.log(\"err\",err);\r\n       }\r\n    })\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n \r\nconst config = (string) => {\r\n  return {\r\n    bucketName: 'rosev0',\r\n    dirName: string, /* optional */\r\n    region: 'us-west-2',\r\n    accessKeyId: 'AKIAJEN4JB3CITFUIUFQ',\r\n    secretAccessKey: '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',\r\n  }\r\n}\r\n\r\n{/*\r\nuploadFile(values.file, configu)\r\n                .then(data => {\r\n                  console.log(\"archivo exito\",data);\r\n                  axios.post(\"http://127.0.0.1:8000/selection/create/\",payload).then(r=>console.log(r)).catch(e=>console.log(e));\r\n                })\r\n                .catch(err => console.error(\"error archivo\",err));\r\n*/}\r\n\r\nconst fecha = () => {\r\n  let fecha = new Date();\r\n  let dia = fecha.getDate();\r\n  let mes = fecha.getMonth() + 1;\r\n  let ano = fecha.getFullYear();\r\n  if(mes < 10){\r\n    return `${dia}-0${mes}-${ano}`;\r\n  }else{\r\n    return `${dia}-${mes}-${ano}`;\r\n  }\r\n}\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst AddProcess = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Add Process\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"md\">\r\n          <Formik\r\n            initialValues={{\r\n              name: \"\",\r\n              vacant: 1,\r\n              description: \"\",\r\n              area: \"\",\r\n              subarea: \"\",\r\n              industry: \"\",\r\n              is_remote: false,\r\n              exp: 1,\r\n              idioms: \"\",\r\n              skills: \"\",\r\n              location: \"\",\r\n              desired_exp: 1,\r\n              desired_idioms: \"\",\r\n              desired_skills: \"\",\r\n              desired_college: \"\",\r\n              desired_designation: \"\",\r\n              file: null,\r\n              \r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                name: Yup.string().max(255).required('Nombre es requerido'),\r\n              })\r\n            }\r\n            onSubmit={(values, actions) => {\r\n              var date = fecha();\r\n              var email_cambiado = props.usuario.correo.replace(\"@\",\"_\");\r\n              var name_cambiado = values.name.replaceAll(\" \",\"_\");\r\n              var ruta = `${email_cambiado}/${date}*${name_cambiado}*input/`;\r\n              var payload = {\r\n                \"name\": values.name,\r\n                \"vacant\": values.vacant,\r\n                \"description\": values.description,\r\n                \"area\": values.area,\r\n                \"subarea\": values.subarea,\r\n                \"industry\": values.industry,\r\n                \"is_remote\": values.is_remote,\r\n                \"status\": \"In progress\",\r\n                \"requirements\":{\r\n                  \"exp\": values.exp,\r\n                  \"idioms\": values.idioms,\r\n                  \"skills\": values.skills,\r\n                  \"location\": values.location,\r\n                },\r\n                \"desired\":{\r\n                  \"exp\": [values.desired_exp],\r\n                  \"idioms\": [values.desired_idioms],\r\n                  \"skills\": [values.desired_skills],\r\n                  \"college\": [values.desired_college],\r\n                  \"designation\": [values.desired_designation],\r\n                },\r\n                \"kpis\": {},\r\n                \"storage_url\": ruta,\r\n                \"user\": props.usuario.correo,\r\n              };\r\n              console.log(payload);\r\n              console.log(values.file);\r\n              let configu = config(ruta);\r\n              console.log(configu);\r\n              //uploadFile2(values.file,ruta);\r\n              uploadFile(values.file, configu)\r\n                .then(data => {\r\n                  console.log(\"archivo exito\",data);\r\n                  axios.post(\"http://127.0.0.1:8000/selection/create/\",payload).then(r=>console.log(r)).catch(e=>console.log(e));\r\n                })\r\n                .catch(err => console.error(\"error archivo\",err));\r\n              //history.push('/WelcomePage');\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Nuevo Proceso\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Llena los campos\r\n                  </Typography>\r\n                </Box>\r\n                <Grid container direction=\"row\" spacing={3}>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      error={Boolean(touched.name && errors.name)}\r\n                      fullWidth\r\n                      helperText={touched.name && errors.name}\r\n                      label=\"Nombre Proceso\"\r\n                      margin=\"normal\"\r\n                      name=\"name\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.name}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={2}>\r\n                    <TextField\r\n                      error={Boolean(touched.vacant && errors.vacant)}\r\n                      fullWidth\r\n                      helperText={touched.vacant && errors.vacant}\r\n                      label=\"Vacantes\"\r\n                      type=\"number\"\r\n                      margin=\"normal\"\r\n                      name=\"vacant\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.vacant}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <TextField\r\n                      error={Boolean(touched.description && errors.description)}\r\n                      fullWidth\r\n                      helperText={touched.description && errors.description}\r\n                      label=\"Descripción del proceso\"\r\n                      margin=\"normal\"\r\n                      name=\"description\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.description}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n                <Grid container direction=\"row\" spacing={3}>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      error={Boolean(touched.area && errors.area)}\r\n                      fullWidth\r\n                      helperText={touched.area && errors.area}\r\n                      label=\"Área\"\r\n                      margin=\"normal\"\r\n                      name=\"area\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.area}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={3}>\r\n                    <TextField\r\n                      error={Boolean(touched.subarea && errors.subarea)}\r\n                      fullWidth\r\n                      helperText={touched.subarea && errors.subarea}\r\n                      label=\"Subárea\"\r\n                      margin=\"normal\"\r\n                      name=\"subarea\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.subarea}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <TextField\r\n                      error={Boolean(touched.industry && errors.industry)}\r\n                      fullWidth\r\n                      helperText={touched.industry && errors.industry}\r\n                      label=\"Industria\"\r\n                      margin=\"normal\"\r\n                      name=\"industry\"\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      value={values.industry}\r\n                      variant=\"outlined\"\r\n                    />\r\n                  </Grid>\r\n                  <Grid xs={2}>\r\n                    <FormControlLabel\r\n                      control={<Switch checked={values.is_remote} onChange={handleChange} name=\"is_remote\" />}\r\n                      label=\"¿Es remoto?\"\r\n                      labelPlacement=\"top\"\r\n                    />\r\n\r\n                  </Grid>\r\n                </Grid>\r\n                <br/>\r\n                <Grid container direction=\"row\" spacing={4}>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                      <Grid item>\r\n                        <Typography variant=\"h5\">Requisitos Mínimos</Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          error={Boolean(touched.exp && errors.exp)}\r\n                          fullWidth\r\n                          helperText={touched.exp && errors.exp}\r\n                          label=\"Experiencia\"\r\n                          type=\"number\"\r\n                          margin=\"normal\"\r\n                          name=\"exp\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.exp}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          error={Boolean(touched.idioms && errors.idioms)}\r\n                          fullWidth\r\n                          helperText={touched.idioms && errors.idioms}\r\n                          label=\"Idioma\"\r\n                          margin=\"normal\"\r\n                          name=\"idioms\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.idioms}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          error={Boolean(touched.skills && errors.skills)}\r\n                          fullWidth\r\n                          helperText={touched.skills && errors.skills}\r\n                          label=\"Skills\"\r\n                          margin=\"normal\"\r\n                          name=\"skills\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.skills}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          error={Boolean(touched.location && errors.location)}\r\n                          fullWidth\r\n                          helperText={touched.location && errors.location}\r\n                          label=\"Lugar\"\r\n                          margin=\"normal\"\r\n                          name=\"location\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.location}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      \r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" spacing={3}>\r\n                      <Grid item>\r\n                        <Typography variant=\"h5\">Requisitos Deseables</Typography>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          error={Boolean(touched.desired_exp && errors.desired_exp)}\r\n                          fullWidth\r\n                          helperText={touched.desired_exp && errors.desired_exp}\r\n                          label=\"Experiencia deseada\"\r\n                          type=\"number\"\r\n                          margin=\"normal\"\r\n                          name=\"desired_exp\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.desired_exp}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          error={Boolean(touched.desired_idioms && errors.desired_idioms)}\r\n                          fullWidth\r\n                          helperText={touched.desired_idioms && errors.desired_idioms}\r\n                          label=\"Idiomas deseados\"\r\n                          margin=\"normal\"\r\n                          name=\"desired_idioms\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.desired_idioms}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          error={Boolean(touched.desired_college && errors.desired_college)}\r\n                          fullWidth\r\n                          helperText={touched.desired_college && errors.desired_college}\r\n                          label=\"Casa de estudios\"\r\n                          margin=\"normal\"\r\n                          name=\"desired_college\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.desired_college}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <TextField\r\n                          error={Boolean(touched.desired_designation && errors.desired_designation)}\r\n                          fullWidth\r\n                          helperText={touched.desired_designation && errors.desired_designation}\r\n                          label=\"Cargos\"\r\n                          margin=\"normal\"\r\n                          name=\"desired_designation\"\r\n                          onBlur={handleBlur}\r\n                          onChange={handleChange}\r\n                          value={values.desired_designation}\r\n                          variant=\"outlined\"\r\n                        />\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\" spacing={3} >\r\n                      <br/><br/><br/><br/>\r\n                      <Grid item xs={12}>\r\n                        <Button\r\n                          variant=\"contained\"\r\n                          component=\"label\"\r\n                          fullWidth={true}\r\n                          style={{ \"min-height\": \"100px\" }}\r\n                        >\r\n                          Subir CV's\r\n                          <input\r\n                            type=\"file\"\r\n                            name=\"file\"\r\n                            onChange={handleChange}\r\n                            value={values.file}\r\n                            hidden\r\n                          />\r\n                        </Button>\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <Box my={2}>\r\n                          <Button\r\n                            color=\"primary\"\r\n                            disabled={false}\r\n                            style={{ \"min-height\": \"100px\" }}\r\n                            fullWidth\r\n                            size=\"large\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                          >\r\n                            ¡Traeme a los mejores!\r\n                          </Button>\r\n                        </Box>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n                \r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {}\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddProcess);","import React from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Page from '../componentes/Page';\r\nimport KPI from '../componentes/KPI';\r\nimport Bienvenida from '../componentes/welcome/Bienvenida';\r\nimport Procesos from '../componentes/Procesos';\r\nimport ProcessButton from '../componentes/Boton';\r\nimport AddProceso from '../componentes/AddProcess';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\nconst Dashboard = (props) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Dashboard\"\r\n    >\r\n      <Container maxWidth={false}>\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            \r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={3}\r\n            sm={6}\r\n            xl={3}\r\n            xs={12}\r\n          >\r\n            \r\n          </Grid>\r\n          \r\n          \r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={12}\r\n            xl={9}\r\n            xs={12}\r\n          >\r\n            {\"sadf\"}\r\n          </Grid>\r\n          \r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst AddProcess = (props) => {\r\n  \r\n  return (\r\n    <Contenedor>\r\n      <AddProceso usuario={props.usuario} />\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nexport default AddProcess;","import React from 'react';\r\nimport Contenedor from '../contenedor';\r\n\r\nconst EditProcess = (props) => {\r\n  \r\n  return (\r\n    <Contenedor>\r\n      {\"EditProcess\"}\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nexport default EditProcess;","import React from 'react';\r\n\r\nconst Error = (props) => {\r\n  \r\n  return (\r\n    <p>\r\n      {\"Error\"}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default Error;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  Grid,\r\n  Typography,\r\n  colors,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport { NavLink as RouterLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    paddingTop: theme.spacing(3),\r\n    paddingBottom: theme.spacing(3),\r\n  },\r\n  \r\n}));\r\n\r\nconst ProcessButton = ({ nombre, href, clickear }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    \r\n    <Button\r\n    variant=\"contained\" color=\"primary\"\r\n    to={href}\r\n    component={RouterLink}\r\n    className={classes.root}\r\n    onClick={clickear}\r\n    >\r\n    {nombre}\r\n    </Button>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default ProcessButton;","import React, { useState } from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport Boton from '../componentes/Boton2';\r\nimport { Grid } from '@material-ui/core';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\nconst Help = (props) => {\r\n  const [tutorial, setTutorial] = useState(true);\r\n  const irTutoriales = () => {\r\n  \tsetTutorial(true);\r\n  \tconsole.log(tutorial);\r\n  }\r\n  const irIssues = () => {\r\n  \tsetTutorial(false);\r\n  \tconsole.log(tutorial);\r\n  }\r\n  return (\r\n    <Contenedor>\r\n    \t<Grid container>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t\t<Grid container>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Ver Tutoriales\"} href={\"#\"} clickear={irTutoriales} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Crear Incidencia\"} href={\"#\"} clickear={irIssues} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t</Grid>\r\n    \t\t</Grid>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t\t{tutorial ? <Tutoriales /> : <Issue2 />}\r\n    \t\t</Grid>\r\n    \t</Grid>\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nconst Tutoriales = (props) => {\r\n  \r\n  return (\r\n    <p>\r\n    {\"Tutoriales\"}\r\n    </p>\r\n  );\r\n}\r\n\r\nconst Issue2 = (props) => {\r\n  \r\n  return (\r\n    <p>\r\n    {\"Issue\"}\r\n    </p>\r\n  );\r\n}\r\n\r\nconst Issue = (props) => {\r\n  \r\n  return (\r\n    <Contenedor>\r\n    \t<Grid container>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t\t<Grid container>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Ver Tutoriales\"} href={\"#\"} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}><Boton nombre={\"Crear Incidencia\"} href={\"#\"} /></Grid>\r\n    \t\t\t\t<Grid item xs={3}></Grid>\r\n    \t\t\t</Grid>\r\n    \t\t</Grid>\r\n    \t\t<Grid item xs={12}>\r\n    \t\t</Grid>\r\n    \t</Grid>\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nexport default Help;","import React from 'react';\r\nimport Contenedor from '../contenedor';\r\n\r\n\r\nconst HelpTutorials = (props) => {\r\n  \r\n  return (\r\n    <Contenedor>\r\n      {\"HelpTutorials\"}\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nexport default HelpTutorials;","import React from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\n\r\nconst ExcelFile = ReactExport.ExcelFile;\r\nconst ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\nconst ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n\r\nconst dataSet1 = [\r\n    {\r\n        name: \"Johson\",\r\n        amount: 30000,\r\n        sex: 'M',\r\n        is_married: true\r\n    },\r\n    {\r\n        name: \"Monika\",\r\n        amount: 355000,\r\n        sex: 'F',\r\n        is_married: false\r\n    },\r\n    {\r\n        name: \"John\",\r\n        amount: 250000,\r\n        sex: 'M',\r\n        is_married: false\r\n    },\r\n    {\r\n        name: \"Josef\",\r\n        amount: 450500,\r\n        sex: 'M',\r\n        is_married: true\r\n    }\r\n];\r\n\r\n\r\nconst DescargaExcelProcesos = ({ boton, columnas, data }) => {\r\n\r\n        return (\r\n            <ExcelFile element={boton}>\r\n                <ExcelSheet data={data} name=\"Procesos\">\r\n                    <ExcelColumn label=\"Nombre\" value=\"name\"/>\r\n                    <ExcelColumn label=\"Creado\" value=\"created_at\"/>\r\n                    <ExcelColumn label=\"Status\" value=\"status\"/>\r\n                    //<ExcelColumn label=\"Below\" value=\"below\"/>\r\n                    //<ExcelColumn label=\"Normal\" value=\"normal\"/>\r\n                    //<ExcelColumn label=\"Outstanding\" value=\"outstanding\"/>\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n        );\r\n}\r\n\r\nconst DescargaExcelCandidatos = ({ boton, columnas, data }) => {\r\n\r\n        return (\r\n            <ExcelFile element={boton}>\r\n                <ExcelSheet data={data} name=\"Candidatos\">\r\n                    <ExcelColumn label=\"Nombre\" value=\"nombre\"/>\r\n                    <ExcelColumn label=\"Carrera\" value=\"profesion\"/>\r\n                    <ExcelColumn label=\"Universidad\" value=\"universidad\"/>\r\n                    \r\n                    <ExcelColumn label=\"Email\" value=\"email\"/>\r\n                    <ExcelColumn label=\"Ciudad\" value=\"ciudad\"/>\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n        );\r\n}\r\n\r\nconst DescargaExcelHistorico = ({ boton, columnas, data }) => {\r\n\r\n        return (\r\n            <ExcelFile element={boton}>\r\n                <ExcelSheet data={data} name=\"Historico\">\r\n                    <ExcelColumn label=\"Nombre\" value=\"nombre\"/>\r\n                    <ExcelColumn label=\"Carrera\" value=\"profesion\"/>\r\n                    <ExcelColumn label=\"Universidad\" value=\"universidad\"/>\r\n                    \r\n                    <ExcelColumn label=\"Email\" value=\"email\"/>\r\n                    <ExcelColumn label=\"Ciudad\" value=\"ciudad\"/>\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n        );\r\n}\r\n\r\nconst DescargaExcelTest = (props) => {\r\n        return (\r\n            <ExcelFile element={<button>hola</button>}>\r\n                <ExcelSheet data={dataSet1} name=\"Employees\">\r\n                    <ExcelColumn label=\"Name\" value=\"name\"/>\r\n                    <ExcelColumn label=\"Wallet Money\" value=\"amount\"/>\r\n                    <ExcelColumn label=\"Gender\" value=\"sex\"/>\r\n                    <ExcelColumn label=\"Marital Status\"\r\n                                 value={(col) => col.is_married ? \"Married\" : \"Single\"}/>\r\n                </ExcelSheet>\r\n            </ExcelFile>\r\n        );\r\n}\r\n\r\nexport { DescargaExcelProcesos, DescargaExcelCandidatos, DescargaExcelHistorico};","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\n\r\n\r\nconst Titulo = ({ }) => {\r\n  return (\r\n    <> \r\n    </>\r\n  );\r\n};\r\n\r\nconst Cuerpo = ({ }) => {\r\n  return (\r\n    <> \r\n    </>\r\n  );\r\n};\r\n\r\nconst CeldaColumnaSeleccionador = ({ seleccion, chequeado }) => {\r\n  return (\r\n    <TableCell padding=\"checkbox\">\r\n      <Checkbox\r\n        checked={chequeado}\r\n        onChange={seleccion}\r\n        value=\"true\"\r\n      />\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nconst TituloColumnaSeleccionador = ({ chequeado, indeterminado, seleccionarTodos}) => {\r\n  return (\r\n    <TableCell padding=\"checkbox\">\r\n      <Checkbox\r\n        checked={chequeado}\r\n        color=\"primary\"\r\n        indeterminate={indeterminado}\r\n        onChange={seleccionarTodos}\r\n      />\r\n    </TableCell>\r\n  );\r\n};\r\n\r\n\r\nconst Paginacion = ({ actual, cambiarPagina, cambiarLimite, pagina, limite}) => {\r\n  return (\r\n    <TablePagination\r\n      component=\"div\"\r\n      count={actual}\r\n      onChangePage={cambiarPagina}\r\n      onChangeRowsPerPage={cambiarLimite}\r\n      page={pagina}\r\n      rowsPerPage={limite}\r\n      rowsPerPageOptions={[7, 15, 50]}\r\n    />\r\n  );\r\n};\r\n\r\nexport { Paginacion, TituloColumnaSeleccionador, CeldaColumnaSeleccionador };\r\n\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Paginacion, TituloColumnaSeleccionador, CeldaColumnaSeleccionador } from './Elementos';\r\nimport getInitials from '../getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\nconst Tabla = ({ className, data, idSeleccionados, definirIdSeleccionados, columnas, ...rest }) => {\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const [limite, definirLimite] = useState(7);\r\n  const [pagina, definirPagina] = useState(0);\r\n\r\n  const seleccionarTodos = (evento) => {\r\n    let nuevosIdSeleccionados;\r\n\r\n    if (evento.target.checked) {\r\n      nuevosIdSeleccionados = data.map((elemento) => elemento.id);\r\n    } else {\r\n      nuevosIdSeleccionados = [];\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const seleccionarUno = (evento, id) => {\r\n    const indiceSeleccionado = idSeleccionados.indexOf(id);\r\n    let nuevosIdSeleccionados = [];\r\n\r\n    if (indiceSeleccionado === -1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados, id);\r\n    } else if (indiceSeleccionado === 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(1));\r\n    } else if (indiceSeleccionado === idSeleccionados.length - 1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(0, -1));\r\n    } else if (indiceSeleccionado > 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(\r\n        idSeleccionados.slice(0, indiceSeleccionado),\r\n        idSeleccionados.slice(indiceSeleccionado + 1)\r\n      );\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const cambiarLimite = (evento) => {\r\n    definirLimite(evento.target.value);\r\n  };\r\n\r\n  const cambiarPagina = (evento, nuevaPagina) => {\r\n    definirPagina(nuevaPagina);\r\n  };\r\n  let history = useHistory();\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TituloColumnaSeleccionador \r\n                  chequeado={idSeleccionados.length === data.length}\r\n                  indeterminado={\r\n                      idSeleccionados.length > 0\r\n                      && idSeleccionados.length < data.length\r\n                    } \r\n                  seleccionarTodos={seleccionarTodos}\r\n                />\r\n                {Object.keys(columnas).map(nombreColumna=>(\r\n                  <TableCell>\r\n                    {columnas[nombreColumna].titulo}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(limite*pagina, limite*(pagina+1)).map((elemento) => (\r\n                <TableRow\r\n                  hover\r\n                  key={elemento.id}\r\n                  selected={idSeleccionados.indexOf(elemento.id) !== -1}\r\n                >\r\n                  <CeldaColumnaSeleccionador seleccion={(evento) => seleccionarUno(evento, elemento.id)} chequeado={idSeleccionados.indexOf(elemento.id) !== -1} />\r\n                  {Object.keys(columnas).map(nombreColumna=>(\r\n                    <TableCell>\r\n                      {typeof columnas[nombreColumna].href === 'undefined' ?\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      :\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                          \r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      }\r\n                    </TableCell>  \r\n                  ))}                  \r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n      <Paginacion actual={data.length} cambiarPagina={cambiarPagina}\r\n        cambiarLimite={cambiarLimite} pagina={pagina} limite={limite}/>  \r\n      \r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabla);","import React, { useState } from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport KPI from '../componentes/KPI';\r\nimport Boton from '../componentes/Boton';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport { Grid } from '@material-ui/core';\r\nimport { DescargaExcelHistorico } from '../componentes/downloads/DescargaExcel';\r\nimport Tabla from '../componentes/table/Historico';\r\n\r\nconst historicData = [\r\n  {\r\n    id: 1,\r\n    ciudad: \"Stgo, Chile\",\r\n    email: \"bgonzalez@myfuture.ai\",\r\n    nombre: \"Benjamín González\",\r\n    profesion: \"Ing. Civil Industrial mención TI\",\r\n    universidad: \"Universidad Adolfo Ibáñez\",\r\n  },\r\n  {\r\n    id: 2,\r\n    ciudad: \"Viña del mar, Chile\",\r\n    email: \"catamuñoz@myfuture.ai\",\r\n    nombre: \"Catalina Muñoz\",\r\n    profesion: \"Ing. Civil Industrial mención TI\",\r\n    universidad: \"Universidad Adolfo Ibáñez\",\r\n  },\r\n  {\r\n    id: 3,\r\n    ciudad: \"Stgo, Chile\",\r\n    email: \"fermaldonado@myfuture.ai\",\r\n    nombre: \"Fernanda Maldonado\",\r\n    profesion: \"Ing. Civil Industrial mención TI\",\r\n    universidad: \"Universidad Adolfo Ibáñez\",\r\n  },\r\n];\r\n\r\nconst Historic = (props) => {\r\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\r\n  const columnas = {\r\n    \"nombre\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:false},\r\n    \"profesion\":{titulo:\"Profesion\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"universidad\":{titulo:\"Universidad\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"email\":{titulo:\"Email\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    \"ciudad\":{titulo:\"Ciudad\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n  };\r\n  const columnasExcel = Object.keys(columnas).map(col => ({label:columnas[col].titulo,value:col}));\r\n  const candidatosSeleccionados = idSeleccionados.length === 0 ? [] : historicData.filter((i,index)=>idSeleccionados.map(i=>i-1).includes(index)).map(i=>({nombre:i.nombre,profesion:i.profesion,universidad:i.universidad,email:i.email,ciudad:i.ciudad}));\r\n  return (\r\n    <Contenedor>\r\n      <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            \r\n            xs={6}\r\n            md={6}\r\n            sm={4}\r\n            lg={3}\r\n          >\r\n          \t<KPI nombre={\"Candidatos en Rose\"} cantidad={7} icon={<AccessTimeIcon/>}/>\r\n          </Grid>\r\n          <Grid item onClick={()=>console.log(candidatosSeleccionados)}>Hola</Grid>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            md={6}\r\n            sm={4}\r\n            lg={3}\r\n          >\r\n            <DescargaExcelHistorico\r\n                boton={<Boton nombre={\"Exportar Excel\"} href={\"#\"}/>}\r\n                columnas={columnasExcel}\r\n                data={candidatosSeleccionados}\r\n\r\n              />\r\n            \r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n          >\r\n          \r\n            <Tabla  data={historicData} columnas={columnas} idSeleccionados={idSeleccionados} definirIdSeleccionados={definirIdSeleccionados}/>\r\n          </Grid>\r\n          \r\n        </Grid>\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nexport default Historic;","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nexport default function SignIn() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Sign in\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            id=\"email\"\r\n            label=\"Email Address\"\r\n            name=\"email\"\r\n            autoComplete=\"email\"\r\n            autoFocus\r\n          />\r\n          <TextField\r\n            variant=\"outlined\"\r\n            margin=\"normal\"\r\n            required\r\n            fullWidth\r\n            name=\"password\"\r\n            label=\"Password\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            autoComplete=\"current-password\"\r\n          />\r\n          <FormControlLabel\r\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n            label=\"Remember me\"\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            Sign In\r\n          </Button>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Forgot password?\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                {\"Don't have an account? Sign Up\"}\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </div>\r\n      <Box mt={8}>\r\n        <Copyright />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Card,\r\n  Checkbox,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  Typography,\r\n  makeStyles,\r\n  Button,\r\n} from '@material-ui/core';\r\nimport { Paginacion, TituloColumnaSeleccionador, CeldaColumnaSeleccionador } from './Elementos';\r\nimport getInitials from '../getInitials';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  avatar: {\r\n    marginRight: theme.spacing(2)\r\n  }\r\n}));\r\nconst Tabla = ({ className, data, idSeleccionados, definirIdSeleccionados, columnas, seleccionarProceso, ...rest }) => {\r\n  \r\n  const classes = useStyles();\r\n  \r\n  const [limite, definirLimite] = useState(7);\r\n  const [pagina, definirPagina] = useState(0);\r\n\r\n  const seleccionarTodos = (evento) => {\r\n    let nuevosIdSeleccionados;\r\n\r\n    if (evento.target.checked) {\r\n      nuevosIdSeleccionados = data.map((elemento) => elemento.id);\r\n    } else {\r\n      nuevosIdSeleccionados = [];\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const seleccionarUno = (evento, id) => {\r\n    const indiceSeleccionado = idSeleccionados.indexOf(id);\r\n    let nuevosIdSeleccionados = [];\r\n\r\n    if (indiceSeleccionado === -1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados, id);\r\n    } else if (indiceSeleccionado === 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(1));\r\n    } else if (indiceSeleccionado === idSeleccionados.length - 1) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(idSeleccionados.slice(0, -1));\r\n    } else if (indiceSeleccionado > 0) {\r\n      nuevosIdSeleccionados = nuevosIdSeleccionados.concat(\r\n        idSeleccionados.slice(0, indiceSeleccionado),\r\n        idSeleccionados.slice(indiceSeleccionado + 1)\r\n      );\r\n    }\r\n\r\n    definirIdSeleccionados(nuevosIdSeleccionados);\r\n  };\r\n\r\n  const cambiarLimite = (evento) => {\r\n    definirLimite(evento.target.value);\r\n  };\r\n\r\n  const cambiarPagina = (evento, nuevaPagina) => {\r\n    definirPagina(nuevaPagina);\r\n  };\r\n  let history = useHistory();\r\n  return (\r\n    <Card\r\n      className={classes.root}\r\n    >\r\n      \r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TituloColumnaSeleccionador \r\n                  chequeado={idSeleccionados.length === data.length}\r\n                  indeterminado={\r\n                      idSeleccionados.length > 0\r\n                      && idSeleccionados.length < data.length\r\n                    } \r\n                  seleccionarTodos={seleccionarTodos}\r\n                />\r\n                {Object.keys(columnas).map(nombreColumna=>(\r\n                  <TableCell>\r\n                    {columnas[nombreColumna].titulo}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {data.slice(limite*pagina, limite*(pagina+1)).map((elemento) => (\r\n                <TableRow\r\n                  hover\r\n                  key={elemento.id}\r\n                  selected={idSeleccionados.indexOf(elemento.id) !== -1}\r\n                >\r\n                  <CeldaColumnaSeleccionador seleccion={(evento) => seleccionarUno(evento, elemento.id)} chequeado={idSeleccionados.indexOf(elemento.id) !== -1} />\r\n                  {Object.keys(columnas).map(nombreColumna=>(\r\n                    <TableCell>\r\n                      {typeof columnas[nombreColumna].href === 'undefined' ?\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      :\r\n                        <Typography\r\n                          color={columnas[nombreColumna].color}\r\n                          variant={columnas[nombreColumna].tamano}\r\n                          component={RouterLink}\r\n                          onClick={()=>{seleccionarProceso(elemento.id);history.push(columnas[nombreColumna].href);}}\r\n                          \r\n                        >\r\n                          {elemento[nombreColumna]}\r\n                        </Typography>\r\n                      }\r\n                    </TableCell>  \r\n                  ))}                  \r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n      <Paginacion actual={data.length} cambiarPagina={cambiarPagina}\r\n        cambiarLimite={cambiarLimite} pagina={pagina} limite={limite}/>  \r\n      \r\n    </Card>\r\n  );\r\n};\r\n\r\nconst seleccionarProceso = (newIndex) => {\r\n  return {\r\n    type: 'SELECCIONAR_PROCESO',\r\n    newIndex: newIndex,\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        seleccionarProceso: (newIndex) => despachar(seleccionarProceso(newIndex)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Tabla);","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Contenedor from '../contenedor';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport KPI from '../componentes/KPI';\r\nimport Bienvenida from '../componentes/welcome/Bienvenida';\r\nimport Procesos from '../componentes/Procesos';\r\nimport Tabla from '../componentes/table/Procesos';\r\nimport Boton from '../componentes/Boton';\r\nimport { DescargaExcelProcesos } from '../componentes/downloads/DescargaExcel';\r\n\r\n\r\nconst example = {\r\n    \"name\": \"\",\r\n    \"description\": \"\",\r\n    \"area\": \"\",\r\n    \"subarea\": \"\",\r\n    \"industry\": \"\",\r\n    \"is_remote\": false,\r\n    \"status\": \"\",\r\n    \"vacant\": null,\r\n    \"requirements\": null,\r\n    \"desired\": null,\r\n    \"kpis\": null,\r\n    \"storage_url\": \"\",\r\n    \"user\": null\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\nconst Dashboard = (props) => {\r\n  const classes = useStyles();\r\n  const [idSeleccionados, definirIdSeleccionados] = useState([]);\r\n  const columnas = {\r\n    \"name\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:true, href:\"/ViewProcess\"},\r\n    \"created_at\":{titulo:\"Creado\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"status\":{titulo:\"Status\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    //\"below\":{titulo:\"Below\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    //\"normal\":{titulo:\"Normal\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    //\"outstanding\":{titulo:\"Outstanding\",color:\"textPrimary\",tamano:\"caption\",link:false, }\r\n  };\r\n  const columnasExcel = Object.keys(columnas).map(col => ({label:columnas[col].titulo,value:col}));\r\n  const procesosSeleccionados = idSeleccionados.length === 0 ? [] : props.procesos.filter((i,index)=>idSeleccionados.map(i=>i-1).includes(index)).map(i=>({nombre:i.nombre,createdAt:i.createdAt,status:i.status,below:i.below,normal:i.normal,outstanding:i.outstanding}));\r\n  return (\r\n    \r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            \r\n            xs={6}\r\n            md={6}\r\n            sm={4}\r\n            lg={3}\r\n          >\r\n            <Boton nombre={\"Nuevo Proceso\"} href={\"/AddProcess\"}/>\r\n          </Grid>\r\n          <Grid item onClick={()=>console.log(procesosSeleccionados)}>Hola</Grid>\r\n          <Grid\r\n            item\r\n            xs={6}\r\n            md={6}\r\n            sm={4}\r\n            lg={3}\r\n          >\r\n            {idSeleccionados.length === 0 ? \r\n              <Boton nombre={\"Exportar Excel\"} href={\"#\"}/>\r\n            :\r\n              <DescargaExcelProcesos\r\n                boton={<Boton nombre={\"Exportar Excel\"} href={\"#\"}/>}\r\n                columnas={columnasExcel}\r\n                data={procesosSeleccionados}\r\n\r\n              />\r\n            }\r\n              \r\n            \r\n          </Grid>\r\n          \r\n          <Grid\r\n            item\r\n            xs={12}\r\n          >\r\n          {props.procesos !== undefined &&\r\n            <Tabla  data={props.procesos} columnas={columnas} idSeleccionados={idSeleccionados} definirIdSeleccionados={definirIdSeleccionados} seleccionarProceso={seleccionarProceso}/>\r\n          }\r\n          </Grid>\r\n          \r\n        </Grid>\r\n  );\r\n};\r\n\r\nconst Process = (props) => {\r\n  \r\n  return (\r\n    <Contenedor>\r\n      <Dashboard procesosExportarExcel={props.procesosExportarExcel} procesos_exportar_excel={props.procesos_exportar_excel}\r\n      procesos={props.procesos} />\r\n    </Contenedor>\r\n  );\r\n}\r\nconst seleccionarProceso = (newIndex) => {\r\n  return {\r\n    type: 'SELECCIONAR_PROCESO',\r\n    newIndex: newIndex,\r\n  }\r\n}\r\n\r\nconst procesosExportarExcel = (newState) => {\r\n  return {\r\n    type: 'DEFINIR_PROCESOS_EXPORTAR_EXCEL',\r\n    newIndex: newState,\r\n  }\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    procesos: estado.procesos,\r\n    procesos_exportar_excel: estado.procesos_exportar_excel,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        procesosExportarExcel: (newState) => despachar(procesosExportarExcel(newState)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Process);","import React from 'react';\r\nimport { Dialog, DialogTitle } from '@material-ui/core';\r\n\r\nconst Dialogo = (props) => {\r\n  const { setOpen, open, children, titulo } = props;\r\n  return (\r\n    <Dialog onClose={()=>setOpen(false)} aria-labelledby=\"simple-dialog-title\" open={open}\r\n    \tfullWidth={true} maxWidth={\"lg\"}>\r\n      <DialogTitle id=\"simple-dialog-title\">{titulo}</DialogTitle>\r\n      {children}\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default Dialogo;","import React from 'react';\r\nimport Dialogo from '../Dialogo';\r\n\r\nconst Calendar = (props) => {\r\n  const { setOpen, open } = props;\r\n  return (\r\n  \t<Dialogo setOpen={setOpen} open={open} titulo={\"Agendar reunión con Candidato\"} >\r\n  \t\t{\"Hola\"}\r\n  \t</Dialogo>\r\n  );\r\n}\r\n\r\nexport default Calendar;","import React, { useState } from 'react';\r\n//import { EditorState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\n\r\nconst MyEditor = ({setEditorState,editorState}) => {\r\n  //const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const onEditorStateChange = (editorState) => {\r\n    setEditorState(editorState);\r\n };\r\nreturn (\r\n  <div>\r\n    <Editor \r\n      editorState={editorState}\r\n      wrapperClassName=\"rich-editor demo-wrapper\"\r\n      editorClassName=\"demo-editor\"\r\n      onEditorStateChange={onEditorStateChange}\r\n      placeholder=\"Escriba aquí\" />\r\n  </div>\r\n);\r\n}\r\nexport default MyEditor;","import React, { useState } from 'react';\r\nimport Dialogo from '../Dialogo';\r\nimport Editor from '../Editor';\r\nimport { Grid, Container, Button } from '@material-ui/core';\r\nimport { EditorState } from 'draft-js';\r\nimport { convertToHTML, convertFromHTML } from 'draft-convert';\r\n\r\n\r\nconst Mail = (props) => {\r\n  const { setOpen, open, usermail, candidatemail } = props;\r\n  const [editorState, setEditorState] =useState(EditorState.createEmpty());\r\n  const html = convertToHTML(editorState.getCurrentContent());\r\n  return (\r\n    <Dialogo setOpen={setOpen} open={open} titulo={\"Nuevo Mensaje\"} >\r\n    \t<Container>\r\n\t  \t\t{\"Hola\"}<br/>\r\n\t  \t\t{usermail}<br/>\r\n\t  \t\t{candidatemail}<br/>\r\n\t  \t\t<Editor editorState={editorState} setEditorState={setEditorState}/>\r\n\t  \t\t<br/>\r\n\t  \t\t<Button color=\"primary\"\r\n\t  \t\t\tonClick={()=>console.log(html)}\r\n\t  \t\t>Envíar</Button>\r\n  \t\t</Container>\r\n  \t</Dialogo>\r\n  );\r\n}\r\n\r\nconst Form = (props) => {\r\n  const { setOpen, open } = props;\r\n  return (\r\n    <Dialogo setOpen={setOpen} open={open} titulo={\"Envíar email a Candidato\"} >\r\n  \t\t{\"Hola mail\"}\r\n  \t</Dialogo>\r\n  );\r\n}\r\n\r\nexport default Mail;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport KPI from '../KPI';\r\nimport Boton from '../Boton';\r\nimport { DescargaExcelCandidatos } from '../downloads/DescargaExcel';\r\n\r\n\r\n\r\nconst Container = ({ forma, itemes, columnas, data }) => {\r\n\r\n  return ( \r\n    <Grid\r\n      container\r\n      spacing={forma.spacing}\r\n    >\r\n      {itemes.map(item=>(\r\n        <Grid\r\n          item\r\n          xs={forma.xs}\r\n          sm={forma.sm}\r\n        >\r\n          <KPI nombre={item.nombre} cantidad={item.cantidad} icon={item.icon}/>\r\n        </Grid>\r\n      ))}\r\n      <Grid\r\n          item\r\n          xs={forma.xs}\r\n          sm={forma.sm}\r\n        >\r\n        <DescargaExcelCandidatos\r\n          boton={<Boton nombre={\"Exportar Excel\"} href={\"#\"}/>}\r\n          columnas={columnas} data={data}\r\n\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport KPIContainer from './KPIContainer';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n\r\nconst KPIWelcome = (props) => {\r\n  const itemes = [\r\n    {\r\n      nombre:\"Cantidad CV\",\r\n      cantidad:\"10\",\r\n      icon:<MoneyIcon />,\r\n    },\r\n    {\r\n      nombre:\"Tiempo ahorrado estimado\",\r\n      cantidad:\"20 h\",\r\n      icon:<AccessTimeIcon />,\r\n    },\r\n    {\r\n      nombre:\"Cantidad Procesos\",\r\n      cantidad:\"3\",\r\n      icon:<GetAppIcon />,\r\n    },\r\n  ];\r\n  const forma = {\r\n    spacing:3,\r\n    xs:12,\r\n    sm:3,\r\n  };\r\n\r\n  return ( \r\n    <KPIContainer forma={forma} itemes={itemes} columnas={props.columnas} data={props.data}/>\r\n  );\r\n}\r\n\r\n\r\nexport default KPIWelcome;","import React, { useState } from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport { connect } from 'react-redux';\r\nimport Calendar from '../componentes/process/Calendar';\r\nimport Mail from '../componentes/process/Mail';\r\nimport {\r\n  Grid,\r\n  makeStyles,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListSubheader,\r\n  ListItemIcon,\r\n  ListItemSecondaryAction,\r\n  IconButton,\r\n  Link,\r\n  Button,\r\n  Divider,\r\n} from '@material-ui/core';\r\nimport CalendarTodayTwoToneIcon from '@material-ui/icons/CalendarTodayTwoTone';\r\nimport MailTwoToneIcon from '@material-ui/icons/MailTwoTone';\r\nimport PictureAsPdfTwoToneIcon from '@material-ui/icons/PictureAsPdfTwoTone';\r\nimport KPIs from '../componentes/process/KPIs';\r\nimport Pdf from \"react-to-pdf\";\r\n\r\n\r\n\r\nconst ref = React.createRef();\r\n\r\nconst ViewProcess = (props) => {\r\n  const candidatosProceso = props.procesos.filter(i=>i.id===props.proceso_viewprocess)[0].candidatos;\r\n  const candidatoCV = candidatosProceso[props.candidato];\r\n  const [openMail, setOpenMail] = React.useState(false);\r\n  const [openCalendar, setOpenCalendar] = React.useState(false);\r\n  const columnas = {\r\n    \"name\":{titulo:\"Nombre\",color:\"primary\",tamano:\"h6\",link:false},\r\n    //\"profesion\":{titulo:\"Creado\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    //\"universidad\":{titulo:\"Status\",color:\"textPrimary\",tamano:\"body2\",link:false, },\r\n    \"mail\":{titulo:\"Below\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n    //\"ciudad\":{titulo:\"Normal\",color:\"textPrimary\",tamano:\"caption\",link:false, },\r\n  };\r\n  const columnasExcel = Object.keys(columnas).map(col => ({label:columnas[col].titulo,value:col}));\r\n  const candidatosProcesoExcel = candidatosProceso.map(i=>({name:i.name,mail:i.mail}));\r\n  console.log(candidatosProcesoExcel);\r\n  return (\r\n    <Contenedor>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <KPIs columnas={columnasExcel}\r\n            data={candidatosProceso}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} onClick={()=>console.log(props.usuario)}>\r\n          {\"Hola\"}\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Grid container>\r\n            <Grid item xs={5}>\r\n              <Lista \r\n                seleccionarCandidato={props.seleccionarCandidato}\r\n                candidatos={candidatosProceso}\r\n                setOpenMail={setOpenMail}\r\n                setOpenCalendar={setOpenCalendar}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7}>\r\n              {/*<CV \r\n                candidato={candidatoCV}\r\n              />*/}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      \r\n      <Calendar setOpen={setOpenCalendar} open={openCalendar}/>\r\n      <Mail setOpen={setOpenMail} open={openMail} usermail={props.usuario.correo} candidatemail={candidatoCV.email}/>\r\n      {props.proceso_viewprocess}\r\n      {props.candidato}\r\n    </Contenedor>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '&:hover':{\r\n      backgroundColor: theme.palette.primary.ligth,\r\n    },\r\n  }\r\n}));\r\n\r\nconst Lista = (props) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <List\r\n      component=\"nav\"\r\n      style={{paddingTop:30, maxHeight: 400, overflow: 'auto'}}\r\n    >\r\n    {props.candidatos.map((i,index)=>(\r\n      <ListItem button >\r\n        <div onClick={()=>{props.seleccionarCandidato(index);}}>\r\n        <Grid container >\r\n          <Grid item xs={7}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} paddingTop={10}>\r\n                <Typography variant=\"h6\">\r\n                  {i.name}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"caption\">\r\n                  {i.mail}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"body1\">\r\n                  {i.ciudad}\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"subtitle2\">\r\n                  {i.experiencia}\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={1}>\r\n            <Grid container>\r\n              <Grid item xs={12}>\r\n                <IconButton edge=\"end\" aria-label=\"calendar\"\r\n                  onClick={()=>props.setOpenCalendar(true)}\r\n                >\r\n                  <CalendarTodayTwoToneIcon color=\"primary\" />\r\n                </IconButton>\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <IconButton edge=\"end\" aria-label=\"calendar\"\r\n                  onClick={()=>props.setOpenMail(true)}\r\n                >\r\n                  <MailTwoToneIcon color=\"primary\" />\r\n                </IconButton>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        </div>\r\n      </ListItem>\r\n    ))}\r\n    \r\n    \r\n    </List>\r\n  );\r\n}\r\n\r\nconst CV = (props) => {\r\n  \r\n  return (\r\n    <div ref={ref}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Grid container spacing={2} >\r\n            <Grid item xs={1}>\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <Typography variant=\"h6\">\r\n                {props.candidato.nombre}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.universidad}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.email}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.ciudad}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.numero}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={5} >\r\n              <br/>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.profesion}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.egreso}\r\n              </Typography>\r\n              <Typography variant=\"body1\">\r\n                {props.candidato.experiencia}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item xs={1}>\r\n              <Pdf targetRef={ref} filename=\"code-example.pdf\">\r\n                {({ toPdf }) => (\r\n                  <IconButton edge=\"end\" aria-label=\"pdf\" onClick={toPdf}>\r\n                    <PictureAsPdfTwoToneIcon color=\"primary\" fontSize=\"large\" />\r\n                  </IconButton>\r\n                )}\r\n              </Pdf>\r\n              \r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={12} height=\"10px\">\r\n          <br/>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <Grid container>\r\n            <Grid item xs={12}>\r\n              <Typography variant={\"subtitle2\"}>\r\n                {\"Trabajado en:\"}\r\n              </Typography>\r\n              <List>\r\n                {props.candidato.trabajadoen.map(i=>(\r\n                  <ListItem>\r\n                    <Typography variant={\"caption\"}>\r\n                      {i}\r\n                    </Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant={\"subtitle2\"}>\r\n                {\"Trabajado como:\"}\r\n              </Typography>\r\n              <List>\r\n                {props.candidato.trabajadocomo.map(i=>(\r\n                  <ListItem>\r\n                    <Typography variant={\"caption\"}>\r\n                      {i}\r\n                    </Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item xs={5}>\r\n          <Grid item xs={12}>\r\n              <Typography variant={\"subtitle2\"}>\r\n                {\"Skills:\"}\r\n              </Typography>\r\n              <List>\r\n                {props.candidato.skills.map(i=>(\r\n                  <ListItem>\r\n                    <Typography variant={\"caption\"}>\r\n                      {i}\r\n                    </Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant={\"subtitle2\"}>\r\n                {\"Idiomas:\"}\r\n              </Typography>\r\n              <List>\r\n                {props.candidato.idiomas.map(i=>(\r\n                  <ListItem>\r\n                    <Typography variant={\"caption\"}>\r\n                      {i}\r\n                    </Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Typography variant={\"subtitle2\"}>\r\n                {\"Certificaciones:\"}\r\n              </Typography>\r\n              <List>\r\n                {props.candidato.certificaciones.map(i=>(\r\n                  <ListItem>\r\n                    <Typography variant={\"caption\"}>\r\n                      {i}\r\n                    </Typography>\r\n                  </ListItem>\r\n                ))}\r\n              </List>\r\n            </Grid>\r\n        </Grid>\r\n        <Grid item xs={1}>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst seleccionarCandidato = (newIndex) => {\r\n  return {\r\n    type: 'SELECCIONAR_CANDIDATO',\r\n    newIndex: newIndex,\r\n  }\r\n}\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n    procesos: estado.procesos,\r\n    proceso_viewprocess: estado.proceso_viewprocess,\r\n    candidato: estado.candidato_viewprocess,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        seleccionarCandidato: (newIndex) => despachar(seleccionarCandidato(newIndex)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewProcess);","import React from 'react';\r\n\r\nconst ViewProcessCalendar = (props) => {\r\n  \r\n  return (\r\n    <p>\r\n      {\"ViewProcessCalendar\"}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default ViewProcessCalendar;","import React from 'react';\r\n\r\nconst ViewProcessMail = (props) => {\r\n  \r\n  return (\r\n    <p>\r\n      {\"ViewProcessMail\"}\r\n    </p>\r\n  );\r\n}\r\n\r\nexport default ViewProcessMail;","import React from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport KPI from '../KPI';\r\nimport Boton from '../Boton';\r\n\r\n\r\n\r\nconst Container = ({ forma, itemes }) => {\r\n\r\n  return ( \r\n    <Grid\r\n      container\r\n      spacing={forma.spacing}\r\n    >\r\n      {itemes.map(item=>(\r\n        <Grid\r\n          item\r\n          xs={forma.xs}\r\n          sm={forma.sm}\r\n        >\r\n          <KPI nombre={item.nombre} cantidad={item.cantidad} icon={item.icon}/>\r\n        </Grid>\r\n      ))}\r\n      \r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\nimport KPIContainer from './KPIContainer';\r\nimport MoneyIcon from '@material-ui/icons/Money';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\n\r\n\r\nconst KPIWelcome = (props) => {\r\n  const itemes = [\r\n    {\r\n      nombre:\"Cantidad CV\",\r\n      cantidad:props.data.resumes_ct,\r\n      icon:<MoneyIcon/>,\r\n    },\r\n    {\r\n      nombre:\"Tiempo ahorrado estimado\",\r\n      cantidad:`${props.data.saved_time_min} h`,\r\n      icon:<AccessTimeIcon />,\r\n    },\r\n    {\r\n      nombre:\"Cantidad Procesos\",\r\n      cantidad:props.data.selections_ct,\r\n      icon:<GetAppIcon />,\r\n    },\r\n  ];\r\n  const forma = {\r\n    spacing:3,\r\n    xs:12,\r\n    sm:4,\r\n  };\r\n\r\n  return ( \r\n    <KPIContainer forma={forma} itemes={itemes}/>\r\n  );\r\n}\r\n\r\n\r\nexport default KPIWelcome;","import React, { useState, useEffect } from 'react';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport * as Msal from \"msal\";\r\nimport axios from 'axios';\r\n\r\nconst msalConfig = {\r\n    auth: {\r\n        clientId: 'd236c53d-05c9-41c5-aade-d26ed6bb6c6d'\r\n    }\r\n};\r\n\r\nconst msalInstance = new Msal.UserAgentApplication(msalConfig);\r\n\r\nmsalInstance.handleRedirectCallback((error, response) => {\r\n    console.log(error, response);\r\n    console.log(\"dentro\");\r\n});\r\nvar loginRequest = {\r\n   scopes: [\"Calendars.ReadWrite.Shared\",\"email\",\"Mail.Send\",\"offline_access\",\"openid\",\"profile\",\"User.Read\"],\r\n   redirectUri:\"http://localhost:3000/login/microsoft\",\r\n};\r\n\r\nvar tokenRequest = {\r\n    scopes: [\"Calendars.ReadWrite.Shared\",\"email\",\"Mail.Send\",\"offline_access\",\"openid\",\"profile\",\"User.Read\"],\r\n    redirectUri:\"http://localhost:3000/login/microsoft\",\r\n};\r\n\r\nconst ssoRequest = {\r\n    loginHint: \"clopez@myfuture.ai\",\r\n};\r\n\r\nconst loginPopup = (actualizarUser, history) => {\r\n\tmsalInstance.loginPopup(loginRequest)\r\n        .then(response => {\r\n            console.log(response);\r\n            var uid = response.account.accountIdentifier;\r\n            var nombre = response.account.name;\r\n            var correo = response.account.userName;\r\n            var accessToken = acquireTokenSilent();\r\n            var response = response;\r\n            console.log(accessToken);\r\n            axios.post(\"http://127.0.0.1:8000/social_auth/microsoft/\",{\r\n              \"auth_token\":accessToken,\r\n            }).then(r=>{\r\n              console.log(r);\r\n              actualizarUser({\r\n                uid: uid,\r\n                nombre:nombre,\r\n                correo: correo,\r\n                accessToken: accessToken,\r\n                response: response,\r\n              });\r\n              history.push(\"/\");\r\n            }).catch(er=>console.log(er));\r\n            \r\n            // handle response\r\n        })\r\n        .catch(err => {\r\n            // handle error\r\n        });\r\n}\r\n\r\nconst ssoSilent = (props) => {\r\n\tmsalInstance.ssoSilent(ssoRequest)\r\n    .then(response => {\r\n        // session silently established\r\n        console.log(\"session silently established\");\r\n    })\r\n    .catch(error => {\r\n        // handle error by invoking an interactive login method\r\n        msalInstance.loginPopup(ssoRequest);\r\n    });\r\n}\r\n\r\nconst acquireTokenSilent = (props) => {\r\n\tmsalInstance.acquireTokenSilent(tokenRequest)\r\n    .then(response => {\r\n        console.log(\"Acquire token\",response)\r\n        return response.accessToken;\r\n    })\r\n    .catch(err => {\r\n        // could also check if err instance of InteractionRequiredAuthError if you can import the class.\r\n        if (err.name === \"InteractionRequiredAuthError\") {\r\n            return msalInstance.acquireTokenPopup(tokenRequest)\r\n                .then(response => {\r\n                    // get access token from response\r\n                    // response.accessToken\r\n                })\r\n                .catch(err => {\r\n                    // handle error\r\n                });\r\n        }\r\n    });\r\n}\r\n\r\n\r\nconst isMicrosoftLogged = (props) => {\r\n  if (msalInstance.getAccount()) {\r\n  \treturn msalInstance.getAccount();\r\n  }else{\r\n  \treturn false;\r\n  }\r\n}\r\n\r\nconst logout = (props) => {\r\n\tmsalInstance.logout();\r\n}\r\n\r\nconst Microsoft = (props) => {\r\n  //let history = useHistory();\r\n  useEffect(()=>{\r\n    msalInstance.loginPopup(loginRequest)\r\n    .then(response => {\r\n        console.log(\"response\",response);\r\n    })\r\n    .catch(err => {\r\n        console.log(\"err\",err);\r\n    });\r\n    console.log(\"afuera\");\r\n  },[]);\r\n\r\n  return (\r\n    <div>\r\n      {props.children}\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nexport { loginPopup, ssoSilent, acquireTokenSilent, isMicrosoftLogged, Microsoft, logout };","import React, { useEffect, useState } from 'react';\r\nimport Contenedor from '../contenedor';\r\nimport KPIWelcome from '../componentes/welcome/KPIWelcome';\r\nimport Bienvenida from '../componentes/welcome/Bienvenida';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { loginPopup, ssoSilent, acquireTokenSilent, isMicrosoftLogged, Microsoft, logout } from '../rose/Msal';\r\n\r\n\r\nconst WelcomePage = (props) => {\r\n  const [data, setData] = useState({});\r\n  const estado = props.usuario !== null;\r\n  useEffect(()=>{\r\n    if(estado){\r\n      axios.get(`http://127.0.0.1:8000/selection/home/${props.usuario.correo}/`).\r\n      then(res=>{console.log(res);setData(res.data);}).\r\n      catch(err=>console.log(err));\r\n    }\r\n  },[]);\r\n  return ( \r\n    <Contenedor>\r\n    \t{data==={} ? \r\n        <p>No disponible</p>\r\n      :\r\n        <>\r\n          <p onClick={()=>{\r\n            console.log(props.procesos);\r\n          }}>Hola</p>\r\n          <KPIWelcome data={data} />\r\n          <Bienvenida bienvenida={data.welcome_message}/>\r\n        </>\r\n      }\r\n      \r\n    </Contenedor>\r\n  );\r\n}\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n    procesos: estado.procesos,\r\n  }\r\n}\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        actualizarUsuario: (usuario) => despachar({type: 'ACTUALIZAR_USUARIO',usuario: usuario}),\r\n    }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WelcomePage);","import React from 'react';\r\nimport MicrosoftLogin from \"react-microsoft-login\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Button } from '@material-ui/core';\r\nimport { loginPopup, ssoSilent, acquireTokenSilent, isMicrosoftLogged, Microsoft, logout } from './Msal';\r\n\r\nconst MicroSoftOld = (props) => {\r\n let history = useHistory();\r\n  const authHandler = (err, data) => {\r\n    console.log(err, data);\r\n    if (err===null) {\r\n      axios.post(\"http://127.0.0.1:8000/social_auth/microsoft/\",{\r\n        \"auth_token\":data.accessToken,\r\n      }).then(r=>{\r\n        console.log(r);\r\n        props.actualizarUser({\r\n          uid: data.account.accountIdentifier,\r\n          nombre:data.account.name,\r\n          correo: data.account.userName,\r\n          accessToken: data.accessToken,\r\n          response: data,\r\n        });\r\n        history.push(\"/\");\r\n      }).catch(er=>console.log(er));\r\n    }\r\n  };\r\n \t\r\n  return (\r\n    <MicrosoftLogin clientId={\"d236c53d-05c9-41c5-aade-d26ed6bb6c6d\"} authCallback={authHandler} redirectUri={\"http://localhost:3000/login/microsoft\"} graphScopes={\r\n    \t[\"Calendars.ReadWrite.Shared\",\"email\",\"Mail.Send\",\"offline_access\",\"openid\",\"profile\",\"User.Read\"]}/>\r\n  );\r\n};\r\n\r\nconst MicroSoft = (props) => {\r\n let history = useHistory();\r\n const handleLogin = () => {\r\n  loginPopup(props.actualizarUser, history);\r\n  \r\n }\r\n  return (\r\n    <Button color=\"primary\" onClick={handleLogin}>\r\n      {'Microsoft Login'}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default MicroSoftOld;","import React, { Component } from 'react';\r\nimport GoogleLogin from 'react-google-login';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Google = (props) => {\r\n\r\n\r\n  let history = useHistory();\r\n  \r\n  const errorGoogle=(response)=>{\r\n    console.log(response);\r\n  }\r\n\r\n  const responseGoogle=(response)=>{\r\n    console.log(response);\r\n    console.log(response.profileObj);\r\n    axios.post(\"http://127.0.0.1:8000/social_auth/google/\",{\r\n              \"auth_token\":response.tokenId,\r\n            }).then(r=>{\r\n              console.log(r);\r\n              props.actualizarUser(Object.assign({},{\r\n                uid:response.googleId,\r\n                nombre: response.profileObj.familyName,\r\n                correo: response.profileObj.email,\r\n                tokenId: response.tokenId,\r\n                response: response,\r\n              }));\r\n              response.reloadAuthResponse().then(i=>console.log(\"success on reload\",i)).catch(i=>console.log(\"error\",i));\r\n              history.push(\"/\");\r\n\r\n            }).catch(r=>console.log(r));\r\n              \r\n    \r\n    //response.tokenId envíar a backend\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <GoogleLogin\r\n      clientId=\"374514394577-gn2bvmp9cjnsjn53aq0p575mdidpot47.apps.googleusercontent.com\"\r\n      buttonText=\"Login\"\r\n    \t//accessType=\"offline\"\r\n    \t//responseType=\"code\" \r\n    \tprompt= \"consent\"\r\n    \tscope=\"https://www.googleapis.com/auth/gmail.send https://www.googleapis.com/auth/calendar\"\r\n      onSuccess={responseGoogle}\r\n      onFailure={errorGoogle}\r\n      cookiePolicy={'single_host_origin'}\r\n      \r\n      />\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\n\r\nexport default Google;","import React from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Container,\r\n  Grid,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport MicroSoft from '../rose/Microsoft';\r\nimport Google from '../rose/Google';\r\nimport { connect } from 'react-redux';\r\nimport Page from '../componentes/Page';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3),\r\n    marginTop: '80px',\r\n  }\r\n}));\r\n\r\n\r\nconst LoginView = (props) => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Login\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              password: ''\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              email: Yup.string().email('Debe ser un email válido').max(255).required('El email es requirido'),\r\n              password: Yup.string().max(255).required('La contraseña es requerida')\r\n            })}\r\n            onSubmit={(values, actions) => {\r\n              console.log({\"email\":values.email,\"password\":values.password});\r\n              axios.post(\"http://127.0.0.1:8000/auth/login/\",\r\n                              {\"email\":values.email,\"password\":values.password}\r\n                              ).then(r=>{\r\n                                console.log(r);\r\n                                props.actualizarUser({\r\n                                  nombre:r.data.username,\r\n                                  correo: r.data.email,\r\n                                  response: r,\r\n                                });\r\n                                history.push('/WelcomePage');\r\n                              }).catch(r=>{console.log(r);history.push('/');});\r\n              \r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Comfortaa\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Login\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email Address\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Password\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Inicie sesión\r\n                  </Button>\r\n                </Box>\r\n                <Box\r\n                  mt={3}\r\n                  mb={1}\r\n                >\r\n                  <Typography\r\n                    align=\"center\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    o conecta con\r\n                  </Typography>\r\n                </Box>\r\n                <Grid\r\n                  container\r\n                  spacing={3}\r\n                >\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                  >\r\n                    <MicroSoft actualizarUser={props.actualizarUser}/>\r\n                  </Grid>\r\n                  <Grid\r\n                    item\r\n                    xs={12}\r\n                    md={6}\r\n                  >\r\n                    <Google actualizarUser={props.actualizarUser}/>\r\n                  </Grid>\r\n                </Grid>\r\n                \r\n                \r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  ¿No tienes cuenta?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/registro\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Registrate\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nconst actualizarUsuario = (usuario) => {\r\n  return {\r\n    type: 'ACTUALIZAR_USUARIO',\r\n    usuario: usuario,\r\n  }\r\n}\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        actualizarUser: (usuario) => despachar(actualizarUsuario(usuario)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginView);\r\n\r\n","import React from 'react';\r\nimport { Link as RouterLink, useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik } from 'formik';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Checkbox,\r\n  Container,\r\n  FormHelperText,\r\n  Link,\r\n  TextField,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../componentes/Page';\r\nimport axios from 'axios';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    height: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst RegisterView = () => {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Register\"\r\n    >\r\n      <Box\r\n        display=\"flex\"\r\n        flexDirection=\"column\"\r\n        height=\"100%\"\r\n        justifyContent=\"center\"\r\n      >\r\n        <Container maxWidth=\"sm\">\r\n          <Formik\r\n            initialValues={{\r\n              email: '',\r\n              firstName: '',\r\n              lastName: '',\r\n              password: '',\r\n              policy: false\r\n            }}\r\n            validationSchema={\r\n              Yup.object().shape({\r\n                email: Yup.string().email('Must be a valid email').max(255).required('Email is required'),\r\n                firstName: Yup.string().max(255).required('First name is required'),\r\n                lastName: Yup.string().max(255).required('Last name is required'),\r\n                password: Yup.string().max(255).required('password is required'),\r\n                policy: Yup.boolean().oneOf([true], 'This field must be checked')\r\n              })\r\n            }\r\n            onSubmit={(values, actions) => {\r\n              \r\n              axios.post('http://127.0.0.1:8000/auth/register/',{\r\n                \"email\": values.email,\r\n                \"username\": values.firstName.concat(values.lastName),\r\n                \"password\": values.password,\r\n              }).then(response => {console.log(response);history.push(\"/\")}).catch(error => console.log(error));\r\n              console.log(values);\r\n              //history.push('/WelcomePage');\r\n            }}\r\n          >\r\n            {({\r\n              errors,\r\n              handleBlur,\r\n              handleChange,\r\n              handleSubmit,\r\n              isSubmitting,\r\n              touched,\r\n              values\r\n            }) => (\r\n              <form onSubmit={handleSubmit}>\r\n                <Box mb={3}>\r\n                  <Typography\r\n                    color=\"textPrimary\"\r\n                    variant=\"h2\"\r\n                  >\r\n                    Crea nueva cuenta\r\n                  </Typography>\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    gutterBottom\r\n                    variant=\"body2\"\r\n                  >\r\n                    Usa tu email para crear una nueva cuenta\r\n                  </Typography>\r\n                </Box>\r\n                <TextField\r\n                  error={Boolean(touched.firstName && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={touched.firstName && errors.firstName}\r\n                  label=\"Nombre\"\r\n                  margin=\"normal\"\r\n                  name=\"firstName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.firstName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.lastName && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={touched.lastName && errors.lastName}\r\n                  label=\"Apellido\"\r\n                  margin=\"normal\"\r\n                  name=\"lastName\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  value={values.lastName}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  label=\"Email\"\r\n                  margin=\"normal\"\r\n                  name=\"email\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  value={values.email}\r\n                  variant=\"outlined\"\r\n                />\r\n                <TextField\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  label=\"Contraseña\"\r\n                  margin=\"normal\"\r\n                  name=\"password\"\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  value={values.password}\r\n                  variant=\"outlined\"\r\n                />\r\n                <Box\r\n                  alignItems=\"center\"\r\n                  display=\"flex\"\r\n                  ml={-1}\r\n                >\r\n                  <Checkbox\r\n                    checked={values.policy}\r\n                    name=\"policy\"\r\n                    onChange={handleChange}\r\n                  />\r\n                  <Typography\r\n                    color=\"textSecondary\"\r\n                    variant=\"body1\"\r\n                  >\r\n                    He leido los\r\n                    {' '}\r\n                    <Link\r\n                      color=\"primary\"\r\n                      component={RouterLink}\r\n                      to=\"#\"\r\n                      underline=\"always\"\r\n                      variant=\"h6\"\r\n                    >\r\n                      Terminos y Condiciones\r\n                    </Link>\r\n                  </Typography>\r\n                </Box>\r\n                {Boolean(touched.policy && errors.policy) && (\r\n                  <FormHelperText error>\r\n                    {errors.policy}\r\n                  </FormHelperText>\r\n                )}\r\n                <Box my={2}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={isSubmitting}\r\n                    fullWidth\r\n                    size=\"large\"\r\n                    type=\"submit\"\r\n                    variant=\"contained\"\r\n                  >\r\n                    Crea tu cuenta\r\n                  </Button>\r\n                </Box>\r\n                <Typography\r\n                  color=\"textSecondary\"\r\n                  variant=\"body1\"\r\n                >\r\n                  Tienes cuenta?\r\n                  {' '}\r\n                  <Link\r\n                    component={RouterLink}\r\n                    to=\"/\"\r\n                    variant=\"h6\"\r\n                  >\r\n                    Inicia sesión\r\n                  </Link>\r\n                </Typography>\r\n              </form>\r\n            )}\r\n          </Formik>\r\n        </Container>\r\n      </Box>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default RegisterView;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport moment from 'moment';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Divider,\r\n  Typography,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst user = {\r\n  avatar: '/static/images/avatars/avatar_6.png',\r\n  city: 'Los Angeles',\r\n  country: 'USA',\r\n  jobTitle: 'Senior Developer',\r\n  name: 'Katarina Smith',\r\n  timezone: 'GTM-7'\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {},\r\n  avatar: {\r\n    height: 100,\r\n    width: 100\r\n  }\r\n}));\r\n\r\nconst Profile = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <CardContent>\r\n        <Box\r\n          alignItems=\"center\"\r\n          display=\"flex\"\r\n          flexDirection=\"column\"\r\n        >\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src={user.avatar}\r\n          />\r\n          <Typography\r\n            color=\"textPrimary\"\r\n            gutterBottom\r\n            variant=\"h3\"\r\n          >\r\n            {user.name}\r\n          </Typography>\r\n          <Typography\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${user.city} ${user.country}`}\r\n          </Typography>\r\n          <Typography\r\n            className={classes.dateText}\r\n            color=\"textSecondary\"\r\n            variant=\"body1\"\r\n          >\r\n            {`${moment().format('hh:mm A')} ${user.timezone}`}\r\n          </Typography>\r\n        </Box>\r\n      </CardContent>\r\n      <Divider />\r\n      <CardActions>\r\n        <Button\r\n          color=\"primary\"\r\n          fullWidth\r\n          variant=\"text\"\r\n        >\r\n          Upload picture\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default Profile;\r\n","import React, { useState } from 'react';\r\nimport clsx from 'clsx';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  Divider,\r\n  Grid,\r\n  TextField,\r\n  makeStyles\r\n} from '@material-ui/core';\r\n\r\nconst states = [\r\n  {\r\n    value: 'alabama',\r\n    label: 'Alabama'\r\n  },\r\n  {\r\n    value: 'new-york',\r\n    label: 'New York'\r\n  },\r\n  {\r\n    value: 'san-francisco',\r\n    label: 'San Francisco'\r\n  }\r\n];\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  root: {}\r\n}));\r\n\r\nconst ProfileDetails = ({ className, ...rest }) => {\r\n  const classes = useStyles();\r\n  const [values, setValues] = useState({\r\n    firstName: 'Katarina',\r\n    lastName: 'Smith',\r\n    email: 'demo@devias.io',\r\n    phone: '',\r\n    state: 'Alabama',\r\n    country: 'USA'\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setValues({\r\n      ...values,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  return (\r\n    <form\r\n      autoComplete=\"off\"\r\n      noValidate\r\n      className={clsx(classes.root, className)}\r\n      {...rest}\r\n    >\r\n      <Card>\r\n        <CardHeader\r\n          subheader=\"The information can be edited\"\r\n          title=\"Profile\"\r\n        />\r\n        <Divider />\r\n        <CardContent>\r\n          <Grid\r\n            container\r\n            spacing={3}\r\n          >\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                helperText=\"Please specify the first name\"\r\n                label=\"First name\"\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.firstName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Last name\"\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.lastName}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Email Address\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.email}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                name=\"phone\"\r\n                onChange={handleChange}\r\n                type=\"number\"\r\n                value={values.phone}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Country\"\r\n                name=\"country\"\r\n                onChange={handleChange}\r\n                required\r\n                value={values.country}\r\n                variant=\"outlined\"\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              md={6}\r\n              xs={12}\r\n            >\r\n              <TextField\r\n                fullWidth\r\n                label=\"Select State\"\r\n                name=\"state\"\r\n                onChange={handleChange}\r\n                required\r\n                select\r\n                SelectProps={{ native: true }}\r\n                value={values.state}\r\n                variant=\"outlined\"\r\n              >\r\n                {states.map((option) => (\r\n                  <option\r\n                    key={option.value}\r\n                    value={option.value}\r\n                  >\r\n                    {option.label}\r\n                  </option>\r\n                ))}\r\n              </TextField>\r\n            </Grid>\r\n          </Grid>\r\n        </CardContent>\r\n        <Divider />\r\n        <Box\r\n          display=\"flex\"\r\n          justifyContent=\"flex-end\"\r\n          p={2}\r\n        >\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n          >\r\n            Save details\r\n          </Button>\r\n        </Box>\r\n      </Card>\r\n    </form>\r\n  );\r\n};\r\n\r\nProfileDetails.propTypes = {\r\n  className: PropTypes.string\r\n};\r\n\r\nexport default ProfileDetails;\r\n","import React from 'react';\r\nimport {\r\n  Container,\r\n  Grid,\r\n  makeStyles\r\n} from '@material-ui/core';\r\nimport Page from '../Page';\r\nimport Profile from './Profile';\r\nimport ProfileDetails from './ProfileDetails';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    backgroundColor: theme.palette.background.dark,\r\n    minHeight: '100%',\r\n    paddingBottom: theme.spacing(3),\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst Account = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Page\r\n      className={classes.root}\r\n      title=\"Account\"\r\n    >\r\n      <Container maxWidth=\"lg\">\r\n        <Grid\r\n          container\r\n          spacing={3}\r\n        >\r\n          <Grid\r\n            item\r\n            lg={4}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <Profile />\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            lg={8}\r\n            md={6}\r\n            xs={12}\r\n          >\r\n            <ProfileDetails />\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default Account;\r\n","import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { AddProcess, EditProcess, Error, Help,\r\n HelpTutorials, Historic, Login, Process, ViewProcess,\r\n  ViewProcessCalendar, ViewProcessMail, WelcomePage } from '../vistas/Vistas';\r\n\r\n\r\nimport LoginView from '../auth/LoginView';\r\nimport RegisterView from '../auth/RegisterView';\r\nimport MicroSoft from '../rose/Microsoft';\r\n\r\nimport AccountView from '../componentes/account';\r\n\r\n\r\nconst Cambiador = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={\"/AccountView\"} component={AccountView}/>\r\n\r\n      <Route exact path={\"/login/microsoft\"} component={MicroSoft}/>\r\n      <Route exact path={\"/LoginView\"} component={LoginView}/>\r\n      <Route exact path={\"/AddProcess\"} component={AddProcess}/>\r\n      <Route exact path={\"/EditProcess\"} component={EditProcess}/>\r\n      <Route exact path={\"/Error\"} component={Error}/>\r\n      <Route exact path={\"/Ayuda\"} component={Help}/>\r\n      <Route exact path={\"/HelpTutorials\"} component={HelpTutorials}/>\r\n      <Route exact path={\"/Historic\"} component={Historic}/>\r\n      <Route exact path={\"/Logi\"} component={Login}/>\r\n      <Route exact path={\"/Process\"} component={Process}/>\r\n      <Route exact path={\"/ViewProcess\"} component={ViewProcess}/>\r\n      <Route exact path={\"/ViewProcessCalendar\"} component={ViewProcessCalendar}/>\r\n      <Route exact path={\"/ViewProcessMail\"} component={ViewProcessMail}/>\r\n      <Route exact path={\"/\"} component={WelcomePage}/>\r\n      <Route exact path={\"/WelcomePage\"} component={WelcomePage}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n\r\nexport default Cambiador;","import React from 'react';\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport { AddProcess, EditProcess, Error, HelpIssue,\r\n HelpTutorials, Historic, Login, Process, ViewProcess,\r\n  ViewProcessCalendar, ViewProcessMail, WelcomePage } from '../vistas/Vistas';\r\n\r\n\r\nimport LoginView from '../auth/LoginView';\r\nimport RegisterView from '../auth/RegisterView';\r\nimport MicroSoft from '../rose/Microsoft';\r\n\r\n\r\n\r\nconst Cambiador = (props) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={\"/\"} component={LoginView}/>\r\n      <Route exact path={\"/Registro\"} component={RegisterView}/>\r\n    </Switch>\r\n  );\r\n}\r\n\r\n\r\nexport default Cambiador;","import { v4 as uuid } from 'uuid';\r\n\r\nexport default [\r\n  {\r\n    id: 1,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"catamuñoz@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"fermaldonado@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 2,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 3,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 4,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 5,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 6,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 7,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 8,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 9,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },{\r\n    id: 10,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Ingeniero TI',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 11,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    createdAt: 1555016400000,\r\n    nombre: 'Marketing',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n  {\r\n    id: 12,\r\n    status: \"status\",\r\n    below: \"5\",\r\n    normal: \"6\",\r\n    outstanding: \"7\",\r\n    \r\n    createdAt: 1555016400000,\r\n    nombre: 'Obras Civiles',\r\n    candidatos: [\r\n      {\r\n        nombre:\"Benjamín González\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Catalina Muñoz\",\r\n        ciudad:\"Viña del mar, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n      {\r\n        nombre:\"Fernanda Maldonado\",\r\n        ciudad:\"Stgo, Chile\",\r\n        profesion:\"Ing. Civil Industrial mención TI\",\r\n        experiencia:\"Exp: 3.5 años\",\r\n        email:\"bgonzalez@myfuture.ai\",\r\n        universidad:\"Universidad Adolfo Ibáñez\",\r\n        numero:\"+569 54191544\",\r\n        egreso:\"Egreso: 2017\",\r\n        trabajadoen:[\"uplanner\",\"fractal-BI\",\"future-AI\"],\r\n        skills:[\" Django, python, API, devops\",\" Tensorfow, NLP, deeplearning\",\"Machine Learning, Ofce\"],\r\n        trabajadocomo:[\"Consultor/ BI Analyst\",\" DataScientist\",\" Lead DataScientist / Backend develop\"],\r\n        idiomas:[\"Inglés avanzado\",\"Español\"],\r\n        certificaciones:[\"Diplomado en transformación digital\"],\r\n      },\r\n    ],\r\n  },\r\n];\r\n","import React, { useState, useEffect } from 'react';\r\nimport Navegacion from './componentes/Navegacion';\r\nimport Cambiador from './componentes/Cambiador';\r\nimport CambiadorPublico from './componentes/CambiadorPublico';\r\nimport { Grid } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport Button from '@material-ui/core/Button';\r\nimport obtenerEstadoUsuarioTest from './funciones/login/obtenerEstadoUsuarioTest';\r\n//import { useHistory } from \"react-router-dom\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport axios from 'axios';\r\nimport {Helmet} from \"react-helmet\";\r\nimport data from './componentes/DataProcesos';\r\nimport './App.css';\r\nimport '../node_modules/react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nconst App = (props) => {\r\n  //let history = useHistory();\r\n  useEffect(()=>{\r\n    console.log(\"useEffect App 1\");\r\n    //obtenerEstadoUsuarioTest(props);\r\n    if(props.usuario!==null){\r\n      requestsProcesos(props.usuario,props.cargarProcesos).then(response=>{\r\n        console.log(\"Respuesta verdadera\",response);\r\n      }).catch(e=>console.log(e));\r\n    }\r\n    \r\n  },[props.usuario]);\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      \r\n      \r\n      <Casos usuario={props.usuario} privado={props.usuario !== null} actualizarUser={props.actualizarUser} />\r\n      \r\n      \r\n\r\n    </div>\r\n    \r\n  );\r\n}\r\n\r\nconst Casos = (props) => {\r\n  const privado = [<Cambiador usuario={props.usuario} actualizarUser={props.actualizarUser}/>];\r\n  const publico = [<CambiadorPublico usuario={props.usuario} actualizarUser={props.actualizarUser}/>];\r\n  return (\r\n    <>\r\n      {props.privado && privado}\r\n      {!props.privado && publico}\r\n    </>\r\n  );\r\n}\r\n\r\nconst actualizarUsuario = (usuario) => {\r\n  return {\r\n    type: 'ACTUALIZAR_USUARIO',\r\n    usuario: usuario,\r\n  }\r\n}\r\nconst cargarProcesos = (newState) => {\r\n  return {\r\n      type: 'CARGAR_PROCESOS',\r\n      newState: newState,\r\n    }  \r\n}\r\n\r\nconst requestsProcesos = (usuario, cargarProcesos) => {\r\n    return new Promise((resolve, reject)=>{\r\n      var state = data;\r\n      axios.get(`http://127.0.0.1:8000/selection/list/${usuario.correo}/`)\r\n      .then(response=>{\r\n        console.log(response);\r\n        state = response.data.data;\r\n        state = state.map((i, index)=>{\r\n          var salida = i;\r\n          requestsCandidatosProceso(i.id).then(res=>{\r\n            salida = Object.assign(i,{candidatos:res});\r\n          }).catch(er=>console.log(er));\r\n          return salida;\r\n        });\r\n        cargarProcesos(state);\r\n        resolve(true);\r\n      })\r\n      .catch(error=>{\r\n        console.log(error);\r\n        cargarProcesos(state);\r\n        reject(false);\r\n      });\r\n    });\r\n}\r\n\r\nconst requestsCandidatosProceso = (idProceso) => {\r\n    return new Promise((resolve, reject)=>{\r\n      var candidatos;\r\n      axios.get(`http://127.0.0.1:8000/selection/${idProceso}/candidates/`)\r\n      .then(response=>{\r\n        console.log(response);\r\n        candidatos = response.data.data;\r\n        resolve(candidatos);\r\n      })\r\n      .catch(error=>{\r\n        console.log(error);\r\n        reject(error);\r\n      });\r\n    });\r\n}\r\n\r\n\r\nconst mapStateToProps = estado => {\r\n  return {\r\n    usuario: estado.usuario,\r\n    procesos: estado.procesos,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = despachar => {\r\n    return {\r\n        actualizarUser: (usuario) => despachar(actualizarUsuario(usuario)),\r\n        cargarProcesos: (newState) => despachar(cargarProcesos(newState)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","const isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}","import { combineReducers } from 'redux';\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction usuario(state = null, accion) {\r\n  switch (accion.type) {\r\n    case 'ACTUALIZAR_USUARIO':\r\n      console.log('ACTUALIZAR_USUARIO',accion.usuario);\r\n      return accion.usuario;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction procesos(state = null, accion) {\r\n  switch (accion.type) {\r\n    case 'CARGAR_PROCESOS':\r\n      return accion.newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction procesos_exportar_excel(state = [], accion) {\r\n  switch (accion.type) {\r\n    case 'DEFINIR_PROCESOS_EXPORTAR_EXCEL':\r\n      return accion.newState;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction proceso_viewprocess(state = null, accion) {\r\n  switch (accion.type) {\r\n    case 'SELECCIONAR_PROCESO':\r\n      return accion.newIndex;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction candidato_viewprocess(state = 0, accion) {\r\n  switch (accion.type) {\r\n    case 'SELECCIONAR_CANDIDATO':\r\n      console.log(accion.newIndex);\r\n      return accion.newIndex;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\nlet reductorRaiz = combineReducers({ usuario, procesos, proceso_viewprocess, procesos_exportar_excel, candidato_viewprocess });\r\n\r\n\r\nexport default reductorRaiz;","export default {\r\n\tfontFamily: [\r\n\t\t'Comfortaa',\r\n\t\t'-apple-system',\r\n\t\t'BlinkMacSystemFont',\r\n\t\t'\"Segoe UI\"',\r\n\t\t'Roboto',\r\n\t\t'\"Helvetica Neue\"',\r\n\t\t'Arial',\r\n\t\t'sans-serif',\r\n\t\t'\"Apple Color Emoji\"',\r\n\t\t'\"Segoe UI Emoji\"',\r\n\t\t'\"Segoe UI Symbol\"',\r\n\t].join(','),\r\n};","export default {\r\nvalues: {\r\n\txs: 0,\r\n\tsm: 600,\r\n\tmd: 960,\r\n\tlg: 1280,\r\n\txl: 1920,\r\n\t},\r\n};","import { createMuiTheme } from '@material-ui/core/styles';\r\nimport puntos from './Breakpoints';\r\n\r\nconst theme = createMuiTheme({\r\n  breakpoints: puntos,\r\n});\r\n\r\n\r\nexport default {\r\n\th1:{\r\n\t  fontSize: '3.5rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '4.7rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '5.35rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '6.0rem',\r\n\t  },\r\n\t},\r\n\th2:{\r\n\t  fontSize: '2.375rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '2.9rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '3.33rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '3.75rem',\r\n\t  },\r\n\t},\r\n\th3:{\r\n\t  fontSize: '2rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '2.5rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '2.8rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '3.0rem',\r\n\t  },\r\n\t},\r\n\th4:{\r\n\t  fontSize: '1.56rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '1.8rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '2.02rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '2.02rem',\r\n\t  },\r\n\t},\r\n\th5:{\r\n\t  fontSize: '1.25rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '1.3rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '1.5rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '1.5rem',\r\n\t  },\r\n\t},\r\n\th6:{\r\n\t  fontSize: '1.13rem',\r\n\t  [theme.breakpoints.up('sm')]: {\r\n\t    fontSize: '1.25rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('md')]: {\r\n\t    fontSize: '1.25rem',\r\n\t  },\r\n\t  [theme.breakpoints.up('lg')]: {\r\n\t    fontSize: '1.25rem',\r\n\t  },\r\n\t},\r\n};","import React from 'react';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport paleta from './Paleta';\r\nimport tipografia from './Tipografia';\r\nimport tipografiaresponsiva from './TipografiaResponsiva';\r\nimport puntos from './Breakpoints';\r\n\r\nconst space = [0, 4, 8, 16, 32, 64];\r\nconst tipograf = Object.assign({},tipografia,tipografiaresponsiva);\r\n\r\nconst theme = createMuiTheme({\r\n  palette: paleta,\r\n  typography: tipograf,\r\n  breakpoints: puntos,\r\n  spacing: space,\r\n  overrides: {\r\n    //MuiCssBaseline styles\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        '@font-face':{\r\n          fontFamily: tipograf.fontFamily,\r\n        },\r\n        \r\n      },\r\n    },\r\n    //MuiCssBaseline styles\r\n\r\n    //MuiButton styles\r\n    MuiButton: {\r\n      root: {\r\n        margin: 1,\r\n        fontFamily: tipograf.roboto,\r\n        '&:hover':{\r\n          fontFamily: tipograf.monserrat,\r\n        },\r\n      },\r\n    },\r\n    //MuiButton styles\r\n\r\n  },\r\n});\r\n\r\n{/*\r\nTextField\r\nButton\r\nAppBar\r\nMenu\r\nContainer\r\nGrid** Definir varios tipos de grid\r\nImageField\r\nTypografy\r\nMediaQuerys\r\nFooter\r\nLinks\r\n\r\n*/}\r\n\r\n\r\nconst Estilo = (props) => {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      {props.children}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default Estilo;","import purple from '@material-ui/core/colors/purple';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport red from '@material-ui/core/colors/red';\r\nimport teal from '@material-ui/core/colors/teal';\r\n\r\nexport default {\r\n\tprimary: {\r\n\t  main: \"#d3044c\",//rosado\r\n\t},\r\n\tsecondary: {\r\n\t  main: \"#A6A6A6\",//gris\r\n\t},\r\n\tsuccess: {\r\n\t  main: \"#707070\",//gris oscuro\r\n\t},\r\n\tinfo: {\r\n\t  main: \"#044454\",//verde\r\n\t},\r\n};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { createStore } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport reductorRaiz from './store';\r\nimport Estilo from './estilo/Estilo';\r\n\r\nlet almacen = createStore(reductorRaiz);\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n  \t<Provider store={almacen}>\r\n  \t\t<Estilo>\r\n\t\t  \t<Router>\r\n\t\t  \t\t<App />\r\n  \t\t\t</Router> \r\n  \t\t</Estilo>\r\n    </Provider>   \r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}